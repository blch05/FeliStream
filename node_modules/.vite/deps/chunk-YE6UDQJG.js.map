{
  "version": 3,
  "sources": ["browser-external:events", "../../queue-tick/queue-microtask.js", "../../fast-fifo/fixed-size.js", "../../fast-fifo/index.js", "../../text-decoder/lib/browser-decoder.js", "../../text-decoder/index.js", "../../streamx/index.js", "../../unordered-array-remove/index.js", "../../ms/index.js", "../../debug/src/common.js", "../../debug/src/browser.js", "browser-external:crypto", "../../rc4/rc4.js", "../../throughput/index.js", "../../webtorrent/lib/peer.js", "../../uint8-util/util.js", "../../src/index.ts", "../../uint8-util/browser.js", "../../bencode/lib/util.js", "../../bencode/lib/encode.js", "../../bencode/lib/decode.js", "../../bencode/lib/encoding-length.js", "../../bencode/index.js", "../../bitfield/lib/esm/index.ts", "../../bittorrent-protocol/index.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"events\" has been externalized for browser compatibility. Cannot access \"events.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = typeof queueMicrotask === 'function' ? queueMicrotask : (fn) => Promise.resolve().then(fn)\r\n", "module.exports = class FixedFIFO {\r\n  constructor (hwm) {\r\n    if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) throw new Error('Max size for a FixedFIFO should be a power of two')\r\n    this.buffer = new Array(hwm)\r\n    this.mask = hwm - 1\r\n    this.top = 0\r\n    this.btm = 0\r\n    this.next = null\r\n  }\r\n\r\n  clear () {\r\n    this.top = this.btm = 0\r\n    this.next = null\r\n    this.buffer.fill(undefined)\r\n  }\r\n\r\n  push (data) {\r\n    if (this.buffer[this.top] !== undefined) return false\r\n    this.buffer[this.top] = data\r\n    this.top = (this.top + 1) & this.mask\r\n    return true\r\n  }\r\n\r\n  shift () {\r\n    const last = this.buffer[this.btm]\r\n    if (last === undefined) return undefined\r\n    this.buffer[this.btm] = undefined\r\n    this.btm = (this.btm + 1) & this.mask\r\n    return last\r\n  }\r\n\r\n  peek () {\r\n    return this.buffer[this.btm]\r\n  }\r\n\r\n  isEmpty () {\r\n    return this.buffer[this.btm] === undefined\r\n  }\r\n}\r\n", "const FixedFIFO = require('./fixed-size')\r\n\r\nmodule.exports = class FastFIFO {\r\n  constructor (hwm) {\r\n    this.hwm = hwm || 16\r\n    this.head = new FixedFIFO(this.hwm)\r\n    this.tail = this.head\r\n    this.length = 0\r\n  }\r\n\r\n  clear () {\r\n    this.head = this.tail\r\n    this.head.clear()\r\n    this.length = 0\r\n  }\r\n\r\n  push (val) {\r\n    this.length++\r\n    if (!this.head.push(val)) {\r\n      const prev = this.head\r\n      this.head = prev.next = new FixedFIFO(2 * this.head.buffer.length)\r\n      this.head.push(val)\r\n    }\r\n  }\r\n\r\n  shift () {\r\n    if (this.length !== 0) this.length--\r\n    const val = this.tail.shift()\r\n    if (val === undefined && this.tail.next) {\r\n      const next = this.tail.next\r\n      this.tail.next = null\r\n      this.tail = next\r\n      return this.tail.shift()\r\n    }\r\n\r\n    return val\r\n  }\r\n\r\n  peek () {\r\n    const val = this.tail.peek()\r\n    if (val === undefined && this.tail.next) return this.tail.next.peek()\r\n    return val\r\n  }\r\n\r\n  isEmpty () {\r\n    return this.length === 0\r\n  }\r\n}\r\n", "module.exports = class BrowserDecoder {\n  constructor (encoding) {\n    this.decoder = new TextDecoder(encoding === 'utf16le' ? 'utf16-le' : encoding)\n  }\n\n  get remaining () {\n    return -1\n  }\n\n  decode (data) {\n    return this.decoder.decode(data, { stream: true })\n  }\n\n  flush () {\n    return this.decoder.decode(new Uint8Array(0))\n  }\n}\n", "const PassThroughDecoder = require('./lib/pass-through-decoder')\nconst UTF8Decoder = require('./lib/utf8-decoder')\n\nmodule.exports = class TextDecoder {\n  constructor (encoding = 'utf8') {\n    this.encoding = normalizeEncoding(encoding)\n\n    switch (this.encoding) {\n      case 'utf8':\n        this.decoder = new UTF8Decoder()\n        break\n      case 'utf16le':\n      case 'base64':\n        throw new Error('Unsupported encoding: ' + this.encoding)\n      default:\n        this.decoder = new PassThroughDecoder(this.encoding)\n    }\n  }\n\n  get remaining () {\n    return this.decoder.remaining\n  }\n\n  push (data) {\n    if (typeof data === 'string') return data\n    return this.decoder.decode(data)\n  }\n\n  // For Node.js compatibility\n  write (data) {\n    return this.push(data)\n  }\n\n  end (data) {\n    let result = ''\n    if (data) result = this.push(data)\n    result += this.decoder.flush()\n    return result\n  }\n}\n\nfunction normalizeEncoding (encoding) {\n  encoding = encoding.toLowerCase()\n\n  switch (encoding) {\n    case 'utf8':\n    case 'utf-8':\n      return 'utf8'\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return 'utf16le'\n    case 'latin1':\n    case 'binary':\n      return 'latin1'\n    case 'base64':\n    case 'ascii':\n    case 'hex':\n      return encoding\n    default:\n      throw new Error('Unknown encoding: ' + encoding)\n  }\n};\n", "const { EventEmitter } = require('events')\nconst STREAM_DESTROYED = new Error('Stream was destroyed')\nconst PREMATURE_CLOSE = new Error('Premature close')\n\nconst queueTick = require('queue-tick')\nconst FIFO = require('fast-fifo')\nconst TextDecoder = require('text-decoder')\n\n/* eslint-disable no-multi-spaces */\n\n// 29 bits used total (4 from shared, 14 from read, and 11 from write)\nconst MAX = ((1 << 29) - 1)\n\n// Shared state\nconst OPENING       = 0b0001\nconst PREDESTROYING = 0b0010\nconst DESTROYING    = 0b0100\nconst DESTROYED     = 0b1000\n\nconst NOT_OPENING = MAX ^ OPENING\nconst NOT_PREDESTROYING = MAX ^ PREDESTROYING\n\n// Read state (4 bit offset from shared state)\nconst READ_ACTIVE           = 0b00000000000001 << 4\nconst READ_UPDATING         = 0b00000000000010 << 4\nconst READ_PRIMARY          = 0b00000000000100 << 4\nconst READ_QUEUED           = 0b00000000001000 << 4\nconst READ_RESUMED          = 0b00000000010000 << 4\nconst READ_PIPE_DRAINED     = 0b00000000100000 << 4\nconst READ_ENDING           = 0b00000001000000 << 4\nconst READ_EMIT_DATA        = 0b00000010000000 << 4\nconst READ_EMIT_READABLE    = 0b00000100000000 << 4\nconst READ_EMITTED_READABLE = 0b00001000000000 << 4\nconst READ_DONE             = 0b00010000000000 << 4\nconst READ_NEXT_TICK        = 0b00100000000000 << 4\nconst READ_NEEDS_PUSH       = 0b01000000000000 << 4\nconst READ_READ_AHEAD       = 0b10000000000000 << 4\n\n// Combined read state\nconst READ_FLOWING = READ_RESUMED | READ_PIPE_DRAINED\nconst READ_ACTIVE_AND_NEEDS_PUSH = READ_ACTIVE | READ_NEEDS_PUSH\nconst READ_PRIMARY_AND_ACTIVE = READ_PRIMARY | READ_ACTIVE\nconst READ_EMIT_READABLE_AND_QUEUED = READ_EMIT_READABLE | READ_QUEUED\nconst READ_RESUMED_READ_AHEAD = READ_RESUMED | READ_READ_AHEAD\n\nconst READ_NOT_ACTIVE             = MAX ^ READ_ACTIVE\nconst READ_NON_PRIMARY            = MAX ^ READ_PRIMARY\nconst READ_NON_PRIMARY_AND_PUSHED = MAX ^ (READ_PRIMARY | READ_NEEDS_PUSH)\nconst READ_PUSHED                 = MAX ^ READ_NEEDS_PUSH\nconst READ_PAUSED                 = MAX ^ READ_RESUMED\nconst READ_NOT_QUEUED             = MAX ^ (READ_QUEUED | READ_EMITTED_READABLE)\nconst READ_NOT_ENDING             = MAX ^ READ_ENDING\nconst READ_PIPE_NOT_DRAINED       = MAX ^ READ_FLOWING\nconst READ_NOT_NEXT_TICK          = MAX ^ READ_NEXT_TICK\nconst READ_NOT_UPDATING           = MAX ^ READ_UPDATING\nconst READ_NO_READ_AHEAD          = MAX ^ READ_READ_AHEAD\nconst READ_PAUSED_NO_READ_AHEAD   = MAX ^ READ_RESUMED_READ_AHEAD\n\n// Write state (18 bit offset, 4 bit offset from shared state and 14 from read state)\nconst WRITE_ACTIVE     = 0b00000000001 << 18\nconst WRITE_UPDATING   = 0b00000000010 << 18\nconst WRITE_PRIMARY    = 0b00000000100 << 18\nconst WRITE_QUEUED     = 0b00000001000 << 18\nconst WRITE_UNDRAINED  = 0b00000010000 << 18\nconst WRITE_DONE       = 0b00000100000 << 18\nconst WRITE_EMIT_DRAIN = 0b00001000000 << 18\nconst WRITE_NEXT_TICK  = 0b00010000000 << 18\nconst WRITE_WRITING    = 0b00100000000 << 18\nconst WRITE_FINISHING  = 0b01000000000 << 18\nconst WRITE_CORKED     = 0b10000000000 << 18\n\nconst WRITE_NOT_ACTIVE    = MAX ^ (WRITE_ACTIVE | WRITE_WRITING)\nconst WRITE_NON_PRIMARY   = MAX ^ WRITE_PRIMARY\nconst WRITE_NOT_FINISHING = MAX ^ WRITE_FINISHING\nconst WRITE_DRAINED       = MAX ^ WRITE_UNDRAINED\nconst WRITE_NOT_QUEUED    = MAX ^ WRITE_QUEUED\nconst WRITE_NOT_NEXT_TICK = MAX ^ WRITE_NEXT_TICK\nconst WRITE_NOT_UPDATING  = MAX ^ WRITE_UPDATING\nconst WRITE_NOT_CORKED    = MAX ^ WRITE_CORKED\n\n// Combined shared state\nconst ACTIVE = READ_ACTIVE | WRITE_ACTIVE\nconst NOT_ACTIVE = MAX ^ ACTIVE\nconst DONE = READ_DONE | WRITE_DONE\nconst DESTROY_STATUS = DESTROYING | DESTROYED | PREDESTROYING\nconst OPEN_STATUS = DESTROY_STATUS | OPENING\nconst AUTO_DESTROY = DESTROY_STATUS | DONE\nconst NON_PRIMARY = WRITE_NON_PRIMARY & READ_NON_PRIMARY\nconst ACTIVE_OR_TICKING = WRITE_NEXT_TICK | READ_NEXT_TICK\nconst TICKING = ACTIVE_OR_TICKING & NOT_ACTIVE\nconst IS_OPENING = OPEN_STATUS | TICKING\n\n// Combined shared state and read state\nconst READ_PRIMARY_STATUS = OPEN_STATUS | READ_ENDING | READ_DONE\nconst READ_STATUS = OPEN_STATUS | READ_DONE | READ_QUEUED\nconst READ_ENDING_STATUS = OPEN_STATUS | READ_ENDING | READ_QUEUED\nconst READ_READABLE_STATUS = OPEN_STATUS | READ_EMIT_READABLE | READ_QUEUED | READ_EMITTED_READABLE\nconst SHOULD_NOT_READ = OPEN_STATUS | READ_ACTIVE | READ_ENDING | READ_DONE | READ_NEEDS_PUSH | READ_READ_AHEAD\nconst READ_BACKPRESSURE_STATUS = DESTROY_STATUS | READ_ENDING | READ_DONE\nconst READ_UPDATE_SYNC_STATUS = READ_UPDATING | OPEN_STATUS | READ_NEXT_TICK | READ_PRIMARY\n\n// Combined write state\nconst WRITE_PRIMARY_STATUS = OPEN_STATUS | WRITE_FINISHING | WRITE_DONE\nconst WRITE_QUEUED_AND_UNDRAINED = WRITE_QUEUED | WRITE_UNDRAINED\nconst WRITE_QUEUED_AND_ACTIVE = WRITE_QUEUED | WRITE_ACTIVE\nconst WRITE_DRAIN_STATUS = WRITE_QUEUED | WRITE_UNDRAINED | OPEN_STATUS | WRITE_ACTIVE\nconst WRITE_STATUS = OPEN_STATUS | WRITE_ACTIVE | WRITE_QUEUED | WRITE_CORKED\nconst WRITE_PRIMARY_AND_ACTIVE = WRITE_PRIMARY | WRITE_ACTIVE\nconst WRITE_ACTIVE_AND_WRITING = WRITE_ACTIVE | WRITE_WRITING\nconst WRITE_FINISHING_STATUS = OPEN_STATUS | WRITE_FINISHING | WRITE_QUEUED_AND_ACTIVE | WRITE_DONE\nconst WRITE_BACKPRESSURE_STATUS = WRITE_UNDRAINED | DESTROY_STATUS | WRITE_FINISHING | WRITE_DONE\nconst WRITE_UPDATE_SYNC_STATUS = WRITE_UPDATING | OPEN_STATUS | WRITE_NEXT_TICK | WRITE_PRIMARY\n\nconst asyncIterator = Symbol.asyncIterator || Symbol('asyncIterator')\n\nclass WritableState {\n  constructor (stream, { highWaterMark = 16384, map = null, mapWritable, byteLength, byteLengthWritable } = {}) {\n    this.stream = stream\n    this.queue = new FIFO()\n    this.highWaterMark = highWaterMark\n    this.buffered = 0\n    this.error = null\n    this.pipeline = null\n    this.drains = null // if we add more seldomly used helpers we might them into a subobject so its a single ptr\n    this.byteLength = byteLengthWritable || byteLength || defaultByteLength\n    this.map = mapWritable || map\n    this.afterWrite = afterWrite.bind(this)\n    this.afterUpdateNextTick = updateWriteNT.bind(this)\n  }\n\n  get ended () {\n    return (this.stream._duplexState & WRITE_DONE) !== 0\n  }\n\n  push (data) {\n    if (this.map !== null) data = this.map(data)\n\n    this.buffered += this.byteLength(data)\n    this.queue.push(data)\n\n    if (this.buffered < this.highWaterMark) {\n      this.stream._duplexState |= WRITE_QUEUED\n      return true\n    }\n\n    this.stream._duplexState |= WRITE_QUEUED_AND_UNDRAINED\n    return false\n  }\n\n  shift () {\n    const data = this.queue.shift()\n\n    this.buffered -= this.byteLength(data)\n    if (this.buffered === 0) this.stream._duplexState &= WRITE_NOT_QUEUED\n\n    return data\n  }\n\n  end (data) {\n    if (typeof data === 'function') this.stream.once('finish', data)\n    else if (data !== undefined && data !== null) this.push(data)\n    this.stream._duplexState = (this.stream._duplexState | WRITE_FINISHING) & WRITE_NON_PRIMARY\n  }\n\n  autoBatch (data, cb) {\n    const buffer = []\n    const stream = this.stream\n\n    buffer.push(data)\n    while ((stream._duplexState & WRITE_STATUS) === WRITE_QUEUED_AND_ACTIVE) {\n      buffer.push(stream._writableState.shift())\n    }\n\n    if ((stream._duplexState & OPEN_STATUS) !== 0) return cb(null)\n    stream._writev(buffer, cb)\n  }\n\n  update () {\n    const stream = this.stream\n\n    stream._duplexState |= WRITE_UPDATING\n\n    do {\n      while ((stream._duplexState & WRITE_STATUS) === WRITE_QUEUED) {\n        const data = this.shift()\n        stream._duplexState |= WRITE_ACTIVE_AND_WRITING\n        stream._write(data, this.afterWrite)\n      }\n\n      if ((stream._duplexState & WRITE_PRIMARY_AND_ACTIVE) === 0) this.updateNonPrimary()\n    } while (this.continueUpdate() === true)\n\n    stream._duplexState &= WRITE_NOT_UPDATING\n  }\n\n  updateNonPrimary () {\n    const stream = this.stream\n\n    if ((stream._duplexState & WRITE_FINISHING_STATUS) === WRITE_FINISHING) {\n      stream._duplexState = (stream._duplexState | WRITE_ACTIVE) & WRITE_NOT_FINISHING\n      stream._final(afterFinal.bind(this))\n      return\n    }\n\n    if ((stream._duplexState & DESTROY_STATUS) === DESTROYING) {\n      if ((stream._duplexState & ACTIVE_OR_TICKING) === 0) {\n        stream._duplexState |= ACTIVE\n        stream._destroy(afterDestroy.bind(this))\n      }\n      return\n    }\n\n    if ((stream._duplexState & IS_OPENING) === OPENING) {\n      stream._duplexState = (stream._duplexState | ACTIVE) & NOT_OPENING\n      stream._open(afterOpen.bind(this))\n    }\n  }\n\n  continueUpdate () {\n    if ((this.stream._duplexState & WRITE_NEXT_TICK) === 0) return false\n    this.stream._duplexState &= WRITE_NOT_NEXT_TICK\n    return true\n  }\n\n  updateCallback () {\n    if ((this.stream._duplexState & WRITE_UPDATE_SYNC_STATUS) === WRITE_PRIMARY) this.update()\n    else this.updateNextTick()\n  }\n\n  updateNextTick () {\n    if ((this.stream._duplexState & WRITE_NEXT_TICK) !== 0) return\n    this.stream._duplexState |= WRITE_NEXT_TICK\n    if ((this.stream._duplexState & WRITE_UPDATING) === 0) queueTick(this.afterUpdateNextTick)\n  }\n}\n\nclass ReadableState {\n  constructor (stream, { highWaterMark = 16384, map = null, mapReadable, byteLength, byteLengthReadable } = {}) {\n    this.stream = stream\n    this.queue = new FIFO()\n    this.highWaterMark = highWaterMark === 0 ? 1 : highWaterMark\n    this.buffered = 0\n    this.readAhead = highWaterMark > 0\n    this.error = null\n    this.pipeline = null\n    this.byteLength = byteLengthReadable || byteLength || defaultByteLength\n    this.map = mapReadable || map\n    this.pipeTo = null\n    this.afterRead = afterRead.bind(this)\n    this.afterUpdateNextTick = updateReadNT.bind(this)\n  }\n\n  get ended () {\n    return (this.stream._duplexState & READ_DONE) !== 0\n  }\n\n  pipe (pipeTo, cb) {\n    if (this.pipeTo !== null) throw new Error('Can only pipe to one destination')\n    if (typeof cb !== 'function') cb = null\n\n    this.stream._duplexState |= READ_PIPE_DRAINED\n    this.pipeTo = pipeTo\n    this.pipeline = new Pipeline(this.stream, pipeTo, cb)\n\n    if (cb) this.stream.on('error', noop) // We already error handle this so supress crashes\n\n    if (isStreamx(pipeTo)) {\n      pipeTo._writableState.pipeline = this.pipeline\n      if (cb) pipeTo.on('error', noop) // We already error handle this so supress crashes\n      pipeTo.on('finish', this.pipeline.finished.bind(this.pipeline)) // TODO: just call finished from pipeTo itself\n    } else {\n      const onerror = this.pipeline.done.bind(this.pipeline, pipeTo)\n      const onclose = this.pipeline.done.bind(this.pipeline, pipeTo, null) // onclose has a weird bool arg\n      pipeTo.on('error', onerror)\n      pipeTo.on('close', onclose)\n      pipeTo.on('finish', this.pipeline.finished.bind(this.pipeline))\n    }\n\n    pipeTo.on('drain', afterDrain.bind(this))\n    this.stream.emit('piping', pipeTo)\n    pipeTo.emit('pipe', this.stream)\n  }\n\n  push (data) {\n    const stream = this.stream\n\n    if (data === null) {\n      this.highWaterMark = 0\n      stream._duplexState = (stream._duplexState | READ_ENDING) & READ_NON_PRIMARY_AND_PUSHED\n      return false\n    }\n\n    if (this.map !== null) {\n      data = this.map(data)\n      if (data === null) {\n        stream._duplexState &= READ_PUSHED\n        return this.buffered < this.highWaterMark\n      }\n    }\n\n    this.buffered += this.byteLength(data)\n    this.queue.push(data)\n\n    stream._duplexState = (stream._duplexState | READ_QUEUED) & READ_PUSHED\n\n    return this.buffered < this.highWaterMark\n  }\n\n  shift () {\n    const data = this.queue.shift()\n\n    this.buffered -= this.byteLength(data)\n    if (this.buffered === 0) this.stream._duplexState &= READ_NOT_QUEUED\n    return data\n  }\n\n  unshift (data) {\n    const pending = [this.map !== null ? this.map(data) : data]\n    while (this.buffered > 0) pending.push(this.shift())\n\n    for (let i = 0; i < pending.length - 1; i++) {\n      const data = pending[i]\n      this.buffered += this.byteLength(data)\n      this.queue.push(data)\n    }\n\n    this.push(pending[pending.length - 1])\n  }\n\n  read () {\n    const stream = this.stream\n\n    if ((stream._duplexState & READ_STATUS) === READ_QUEUED) {\n      const data = this.shift()\n      if (this.pipeTo !== null && this.pipeTo.write(data) === false) stream._duplexState &= READ_PIPE_NOT_DRAINED\n      if ((stream._duplexState & READ_EMIT_DATA) !== 0) stream.emit('data', data)\n      return data\n    }\n\n    if (this.readAhead === false) {\n      stream._duplexState |= READ_READ_AHEAD\n      this.updateNextTick()\n    }\n\n    return null\n  }\n\n  drain () {\n    const stream = this.stream\n\n    while ((stream._duplexState & READ_STATUS) === READ_QUEUED && (stream._duplexState & READ_FLOWING) !== 0) {\n      const data = this.shift()\n      if (this.pipeTo !== null && this.pipeTo.write(data) === false) stream._duplexState &= READ_PIPE_NOT_DRAINED\n      if ((stream._duplexState & READ_EMIT_DATA) !== 0) stream.emit('data', data)\n    }\n  }\n\n  update () {\n    const stream = this.stream\n\n    stream._duplexState |= READ_UPDATING\n\n    do {\n      this.drain()\n\n      while (this.buffered < this.highWaterMark && (stream._duplexState & SHOULD_NOT_READ) === READ_READ_AHEAD) {\n        stream._duplexState |= READ_ACTIVE_AND_NEEDS_PUSH\n        stream._read(this.afterRead)\n        this.drain()\n      }\n\n      if ((stream._duplexState & READ_READABLE_STATUS) === READ_EMIT_READABLE_AND_QUEUED) {\n        stream._duplexState |= READ_EMITTED_READABLE\n        stream.emit('readable')\n      }\n\n      if ((stream._duplexState & READ_PRIMARY_AND_ACTIVE) === 0) this.updateNonPrimary()\n    } while (this.continueUpdate() === true)\n\n    stream._duplexState &= READ_NOT_UPDATING\n  }\n\n  updateNonPrimary () {\n    const stream = this.stream\n\n    if ((stream._duplexState & READ_ENDING_STATUS) === READ_ENDING) {\n      stream._duplexState = (stream._duplexState | READ_DONE) & READ_NOT_ENDING\n      stream.emit('end')\n      if ((stream._duplexState & AUTO_DESTROY) === DONE) stream._duplexState |= DESTROYING\n      if (this.pipeTo !== null) this.pipeTo.end()\n    }\n\n    if ((stream._duplexState & DESTROY_STATUS) === DESTROYING) {\n      if ((stream._duplexState & ACTIVE_OR_TICKING) === 0) {\n        stream._duplexState |= ACTIVE\n        stream._destroy(afterDestroy.bind(this))\n      }\n      return\n    }\n\n    if ((stream._duplexState & IS_OPENING) === OPENING) {\n      stream._duplexState = (stream._duplexState | ACTIVE) & NOT_OPENING\n      stream._open(afterOpen.bind(this))\n    }\n  }\n\n  continueUpdate () {\n    if ((this.stream._duplexState & READ_NEXT_TICK) === 0) return false\n    this.stream._duplexState &= READ_NOT_NEXT_TICK\n    return true\n  }\n\n  updateCallback () {\n    if ((this.stream._duplexState & READ_UPDATE_SYNC_STATUS) === READ_PRIMARY) this.update()\n    else this.updateNextTick()\n  }\n\n  updateNextTick () {\n    if ((this.stream._duplexState & READ_NEXT_TICK) !== 0) return\n    this.stream._duplexState |= READ_NEXT_TICK\n    if ((this.stream._duplexState & READ_UPDATING) === 0) queueTick(this.afterUpdateNextTick)\n  }\n}\n\nclass TransformState {\n  constructor (stream) {\n    this.data = null\n    this.afterTransform = afterTransform.bind(stream)\n    this.afterFinal = null\n  }\n}\n\nclass Pipeline {\n  constructor (src, dst, cb) {\n    this.from = src\n    this.to = dst\n    this.afterPipe = cb\n    this.error = null\n    this.pipeToFinished = false\n  }\n\n  finished () {\n    this.pipeToFinished = true\n  }\n\n  done (stream, err) {\n    if (err) this.error = err\n\n    if (stream === this.to) {\n      this.to = null\n\n      if (this.from !== null) {\n        if ((this.from._duplexState & READ_DONE) === 0 || !this.pipeToFinished) {\n          this.from.destroy(this.error || new Error('Writable stream closed prematurely'))\n        }\n        return\n      }\n    }\n\n    if (stream === this.from) {\n      this.from = null\n\n      if (this.to !== null) {\n        if ((stream._duplexState & READ_DONE) === 0) {\n          this.to.destroy(this.error || new Error('Readable stream closed before ending'))\n        }\n        return\n      }\n    }\n\n    if (this.afterPipe !== null) this.afterPipe(this.error)\n    this.to = this.from = this.afterPipe = null\n  }\n}\n\nfunction afterDrain () {\n  this.stream._duplexState |= READ_PIPE_DRAINED\n  this.updateCallback()\n}\n\nfunction afterFinal (err) {\n  const stream = this.stream\n  if (err) stream.destroy(err)\n  if ((stream._duplexState & DESTROY_STATUS) === 0) {\n    stream._duplexState |= WRITE_DONE\n    stream.emit('finish')\n  }\n  if ((stream._duplexState & AUTO_DESTROY) === DONE) {\n    stream._duplexState |= DESTROYING\n  }\n\n  stream._duplexState &= WRITE_NOT_ACTIVE\n\n  // no need to wait the extra tick here, so we short circuit that\n  if ((stream._duplexState & WRITE_UPDATING) === 0) this.update()\n  else this.updateNextTick()\n}\n\nfunction afterDestroy (err) {\n  const stream = this.stream\n\n  if (!err && this.error !== STREAM_DESTROYED) err = this.error\n  if (err) stream.emit('error', err)\n  stream._duplexState |= DESTROYED\n  stream.emit('close')\n\n  const rs = stream._readableState\n  const ws = stream._writableState\n\n  if (rs !== null && rs.pipeline !== null) rs.pipeline.done(stream, err)\n\n  if (ws !== null) {\n    while (ws.drains !== null && ws.drains.length > 0) ws.drains.shift().resolve(false)\n    if (ws.pipeline !== null) ws.pipeline.done(stream, err)\n  }\n}\n\nfunction afterWrite (err) {\n  const stream = this.stream\n\n  if (err) stream.destroy(err)\n  stream._duplexState &= WRITE_NOT_ACTIVE\n\n  if (this.drains !== null) tickDrains(this.drains)\n\n  if ((stream._duplexState & WRITE_DRAIN_STATUS) === WRITE_UNDRAINED) {\n    stream._duplexState &= WRITE_DRAINED\n    if ((stream._duplexState & WRITE_EMIT_DRAIN) === WRITE_EMIT_DRAIN) {\n      stream.emit('drain')\n    }\n  }\n\n  this.updateCallback()\n}\n\nfunction afterRead (err) {\n  if (err) this.stream.destroy(err)\n  this.stream._duplexState &= READ_NOT_ACTIVE\n  if (this.readAhead === false && (this.stream._duplexState & READ_RESUMED) === 0) this.stream._duplexState &= READ_NO_READ_AHEAD\n  this.updateCallback()\n}\n\nfunction updateReadNT () {\n  if ((this.stream._duplexState & READ_UPDATING) === 0) {\n    this.stream._duplexState &= READ_NOT_NEXT_TICK\n    this.update()\n  }\n}\n\nfunction updateWriteNT () {\n  if ((this.stream._duplexState & WRITE_UPDATING) === 0) {\n    this.stream._duplexState &= WRITE_NOT_NEXT_TICK\n    this.update()\n  }\n}\n\nfunction tickDrains (drains) {\n  for (let i = 0; i < drains.length; i++) {\n    // drains.writes are monotonic, so if one is 0 its always the first one\n    if (--drains[i].writes === 0) {\n      drains.shift().resolve(true)\n      i--\n    }\n  }\n}\n\nfunction afterOpen (err) {\n  const stream = this.stream\n\n  if (err) stream.destroy(err)\n\n  if ((stream._duplexState & DESTROYING) === 0) {\n    if ((stream._duplexState & READ_PRIMARY_STATUS) === 0) stream._duplexState |= READ_PRIMARY\n    if ((stream._duplexState & WRITE_PRIMARY_STATUS) === 0) stream._duplexState |= WRITE_PRIMARY\n    stream.emit('open')\n  }\n\n  stream._duplexState &= NOT_ACTIVE\n\n  if (stream._writableState !== null) {\n    stream._writableState.updateCallback()\n  }\n\n  if (stream._readableState !== null) {\n    stream._readableState.updateCallback()\n  }\n}\n\nfunction afterTransform (err, data) {\n  if (data !== undefined && data !== null) this.push(data)\n  this._writableState.afterWrite(err)\n}\n\nfunction newListener (name) {\n  if (this._readableState !== null) {\n    if (name === 'data') {\n      this._duplexState |= (READ_EMIT_DATA | READ_RESUMED_READ_AHEAD)\n      this._readableState.updateNextTick()\n    }\n    if (name === 'readable') {\n      this._duplexState |= READ_EMIT_READABLE\n      this._readableState.updateNextTick()\n    }\n  }\n\n  if (this._writableState !== null) {\n    if (name === 'drain') {\n      this._duplexState |= WRITE_EMIT_DRAIN\n      this._writableState.updateNextTick()\n    }\n  }\n}\n\nclass Stream extends EventEmitter {\n  constructor (opts) {\n    super()\n\n    this._duplexState = 0\n    this._readableState = null\n    this._writableState = null\n\n    if (opts) {\n      if (opts.open) this._open = opts.open\n      if (opts.destroy) this._destroy = opts.destroy\n      if (opts.predestroy) this._predestroy = opts.predestroy\n      if (opts.signal) {\n        opts.signal.addEventListener('abort', abort.bind(this))\n      }\n    }\n\n    this.on('newListener', newListener)\n  }\n\n  _open (cb) {\n    cb(null)\n  }\n\n  _destroy (cb) {\n    cb(null)\n  }\n\n  _predestroy () {\n    // does nothing\n  }\n\n  get readable () {\n    return this._readableState !== null ? true : undefined\n  }\n\n  get writable () {\n    return this._writableState !== null ? true : undefined\n  }\n\n  get destroyed () {\n    return (this._duplexState & DESTROYED) !== 0\n  }\n\n  get destroying () {\n    return (this._duplexState & DESTROY_STATUS) !== 0\n  }\n\n  destroy (err) {\n    if ((this._duplexState & DESTROY_STATUS) === 0) {\n      if (!err) err = STREAM_DESTROYED\n      this._duplexState = (this._duplexState | DESTROYING) & NON_PRIMARY\n\n      if (this._readableState !== null) {\n        this._readableState.highWaterMark = 0\n        this._readableState.error = err\n      }\n      if (this._writableState !== null) {\n        this._writableState.highWaterMark = 0\n        this._writableState.error = err\n      }\n\n      this._duplexState |= PREDESTROYING\n      this._predestroy()\n      this._duplexState &= NOT_PREDESTROYING\n\n      if (this._readableState !== null) this._readableState.updateNextTick()\n      if (this._writableState !== null) this._writableState.updateNextTick()\n    }\n  }\n}\n\nclass Readable extends Stream {\n  constructor (opts) {\n    super(opts)\n\n    this._duplexState |= OPENING | WRITE_DONE | READ_READ_AHEAD\n    this._readableState = new ReadableState(this, opts)\n\n    if (opts) {\n      if (this._readableState.readAhead === false) this._duplexState &= READ_NO_READ_AHEAD\n      if (opts.read) this._read = opts.read\n      if (opts.eagerOpen) this._readableState.updateNextTick()\n      if (opts.encoding) this.setEncoding(opts.encoding)\n    }\n  }\n\n  setEncoding (encoding) {\n    const dec = new TextDecoder(encoding)\n    const map = this._readableState.map || echo\n    this._readableState.map = mapOrSkip\n    return this\n\n    function mapOrSkip (data) {\n      const next = dec.push(data)\n      return next === '' && (data.byteLength !== 0 || dec.remaining > 0) ? null : map(next)\n    }\n  }\n\n  _read (cb) {\n    cb(null)\n  }\n\n  pipe (dest, cb) {\n    this._readableState.updateNextTick()\n    this._readableState.pipe(dest, cb)\n    return dest\n  }\n\n  read () {\n    this._readableState.updateNextTick()\n    return this._readableState.read()\n  }\n\n  push (data) {\n    this._readableState.updateNextTick()\n    return this._readableState.push(data)\n  }\n\n  unshift (data) {\n    this._readableState.updateNextTick()\n    return this._readableState.unshift(data)\n  }\n\n  resume () {\n    this._duplexState |= READ_RESUMED_READ_AHEAD\n    this._readableState.updateNextTick()\n    return this\n  }\n\n  pause () {\n    this._duplexState &= (this._readableState.readAhead === false ? READ_PAUSED_NO_READ_AHEAD : READ_PAUSED)\n    return this\n  }\n\n  static _fromAsyncIterator (ite, opts) {\n    let destroy\n\n    const rs = new Readable({\n      ...opts,\n      read (cb) {\n        ite.next().then(push).then(cb.bind(null, null)).catch(cb)\n      },\n      predestroy () {\n        destroy = ite.return()\n      },\n      destroy (cb) {\n        if (!destroy) return cb(null)\n        destroy.then(cb.bind(null, null)).catch(cb)\n      }\n    })\n\n    return rs\n\n    function push (data) {\n      if (data.done) rs.push(null)\n      else rs.push(data.value)\n    }\n  }\n\n  static from (data, opts) {\n    if (isReadStreamx(data)) return data\n    if (data[asyncIterator]) return this._fromAsyncIterator(data[asyncIterator](), opts)\n    if (!Array.isArray(data)) data = data === undefined ? [] : [data]\n\n    let i = 0\n    return new Readable({\n      ...opts,\n      read (cb) {\n        this.push(i === data.length ? null : data[i++])\n        cb(null)\n      }\n    })\n  }\n\n  static isBackpressured (rs) {\n    return (rs._duplexState & READ_BACKPRESSURE_STATUS) !== 0 || rs._readableState.buffered >= rs._readableState.highWaterMark\n  }\n\n  static isPaused (rs) {\n    return (rs._duplexState & READ_RESUMED) === 0\n  }\n\n  [asyncIterator] () {\n    const stream = this\n\n    let error = null\n    let promiseResolve = null\n    let promiseReject = null\n\n    this.on('error', (err) => { error = err })\n    this.on('readable', onreadable)\n    this.on('close', onclose)\n\n    return {\n      [asyncIterator] () {\n        return this\n      },\n      next () {\n        return new Promise(function (resolve, reject) {\n          promiseResolve = resolve\n          promiseReject = reject\n          const data = stream.read()\n          if (data !== null) ondata(data)\n          else if ((stream._duplexState & DESTROYED) !== 0) ondata(null)\n        })\n      },\n      return () {\n        return destroy(null)\n      },\n      throw (err) {\n        return destroy(err)\n      }\n    }\n\n    function onreadable () {\n      if (promiseResolve !== null) ondata(stream.read())\n    }\n\n    function onclose () {\n      if (promiseResolve !== null) ondata(null)\n    }\n\n    function ondata (data) {\n      if (promiseReject === null) return\n      if (error) promiseReject(error)\n      else if (data === null && (stream._duplexState & READ_DONE) === 0) promiseReject(STREAM_DESTROYED)\n      else promiseResolve({ value: data, done: data === null })\n      promiseReject = promiseResolve = null\n    }\n\n    function destroy (err) {\n      stream.destroy(err)\n      return new Promise((resolve, reject) => {\n        if (stream._duplexState & DESTROYED) return resolve({ value: undefined, done: true })\n        stream.once('close', function () {\n          if (err) reject(err)\n          else resolve({ value: undefined, done: true })\n        })\n      })\n    }\n  }\n}\n\nclass Writable extends Stream {\n  constructor (opts) {\n    super(opts)\n\n    this._duplexState |= OPENING | READ_DONE\n    this._writableState = new WritableState(this, opts)\n\n    if (opts) {\n      if (opts.writev) this._writev = opts.writev\n      if (opts.write) this._write = opts.write\n      if (opts.final) this._final = opts.final\n      if (opts.eagerOpen) this._writableState.updateNextTick()\n    }\n  }\n\n  cork () {\n    this._duplexState |= WRITE_CORKED\n  }\n\n  uncork () {\n    this._duplexState &= WRITE_NOT_CORKED\n    this._writableState.updateNextTick()\n  }\n\n  _writev (batch, cb) {\n    cb(null)\n  }\n\n  _write (data, cb) {\n    this._writableState.autoBatch(data, cb)\n  }\n\n  _final (cb) {\n    cb(null)\n  }\n\n  static isBackpressured (ws) {\n    return (ws._duplexState & WRITE_BACKPRESSURE_STATUS) !== 0\n  }\n\n  static drained (ws) {\n    if (ws.destroyed) return Promise.resolve(false)\n    const state = ws._writableState\n    const pending = (isWritev(ws) ? Math.min(1, state.queue.length) : state.queue.length)\n    const writes = pending + ((ws._duplexState & WRITE_WRITING) ? 1 : 0)\n    if (writes === 0) return Promise.resolve(true)\n    if (state.drains === null) state.drains = []\n    return new Promise((resolve) => {\n      state.drains.push({ writes, resolve })\n    })\n  }\n\n  write (data) {\n    this._writableState.updateNextTick()\n    return this._writableState.push(data)\n  }\n\n  end (data) {\n    this._writableState.updateNextTick()\n    this._writableState.end(data)\n    return this\n  }\n}\n\nclass Duplex extends Readable { // and Writable\n  constructor (opts) {\n    super(opts)\n\n    this._duplexState = OPENING | (this._duplexState & READ_READ_AHEAD)\n    this._writableState = new WritableState(this, opts)\n\n    if (opts) {\n      if (opts.writev) this._writev = opts.writev\n      if (opts.write) this._write = opts.write\n      if (opts.final) this._final = opts.final\n    }\n  }\n\n  cork () {\n    this._duplexState |= WRITE_CORKED\n  }\n\n  uncork () {\n    this._duplexState &= WRITE_NOT_CORKED\n    this._writableState.updateNextTick()\n  }\n\n  _writev (batch, cb) {\n    cb(null)\n  }\n\n  _write (data, cb) {\n    this._writableState.autoBatch(data, cb)\n  }\n\n  _final (cb) {\n    cb(null)\n  }\n\n  write (data) {\n    this._writableState.updateNextTick()\n    return this._writableState.push(data)\n  }\n\n  end (data) {\n    this._writableState.updateNextTick()\n    this._writableState.end(data)\n    return this\n  }\n}\n\nclass Transform extends Duplex {\n  constructor (opts) {\n    super(opts)\n    this._transformState = new TransformState(this)\n\n    if (opts) {\n      if (opts.transform) this._transform = opts.transform\n      if (opts.flush) this._flush = opts.flush\n    }\n  }\n\n  _write (data, cb) {\n    if (this._readableState.buffered >= this._readableState.highWaterMark) {\n      this._transformState.data = data\n    } else {\n      this._transform(data, this._transformState.afterTransform)\n    }\n  }\n\n  _read (cb) {\n    if (this._transformState.data !== null) {\n      const data = this._transformState.data\n      this._transformState.data = null\n      cb(null)\n      this._transform(data, this._transformState.afterTransform)\n    } else {\n      cb(null)\n    }\n  }\n\n  destroy (err) {\n    super.destroy(err)\n    if (this._transformState.data !== null) {\n      this._transformState.data = null\n      this._transformState.afterTransform()\n    }\n  }\n\n  _transform (data, cb) {\n    cb(null, data)\n  }\n\n  _flush (cb) {\n    cb(null)\n  }\n\n  _final (cb) {\n    this._transformState.afterFinal = cb\n    this._flush(transformAfterFlush.bind(this))\n  }\n}\n\nclass PassThrough extends Transform {}\n\nfunction transformAfterFlush (err, data) {\n  const cb = this._transformState.afterFinal\n  if (err) return cb(err)\n  if (data !== null && data !== undefined) this.push(data)\n  this.push(null)\n  cb(null)\n}\n\nfunction pipelinePromise (...streams) {\n  return new Promise((resolve, reject) => {\n    return pipeline(...streams, (err) => {\n      if (err) return reject(err)\n      resolve()\n    })\n  })\n}\n\nfunction pipeline (stream, ...streams) {\n  const all = Array.isArray(stream) ? [...stream, ...streams] : [stream, ...streams]\n  const done = (all.length && typeof all[all.length - 1] === 'function') ? all.pop() : null\n\n  if (all.length < 2) throw new Error('Pipeline requires at least 2 streams')\n\n  let src = all[0]\n  let dest = null\n  let error = null\n\n  for (let i = 1; i < all.length; i++) {\n    dest = all[i]\n\n    if (isStreamx(src)) {\n      src.pipe(dest, onerror)\n    } else {\n      errorHandle(src, true, i > 1, onerror)\n      src.pipe(dest)\n    }\n\n    src = dest\n  }\n\n  if (done) {\n    let fin = false\n\n    const autoDestroy = isStreamx(dest) || !!(dest._writableState && dest._writableState.autoDestroy)\n\n    dest.on('error', (err) => {\n      if (error === null) error = err\n    })\n\n    dest.on('finish', () => {\n      fin = true\n      if (!autoDestroy) done(error)\n    })\n\n    if (autoDestroy) {\n      dest.on('close', () => done(error || (fin ? null : PREMATURE_CLOSE)))\n    }\n  }\n\n  return dest\n\n  function errorHandle (s, rd, wr, onerror) {\n    s.on('error', onerror)\n    s.on('close', onclose)\n\n    function onclose () {\n      if (rd && s._readableState && !s._readableState.ended) return onerror(PREMATURE_CLOSE)\n      if (wr && s._writableState && !s._writableState.ended) return onerror(PREMATURE_CLOSE)\n    }\n  }\n\n  function onerror (err) {\n    if (!err || error) return\n    error = err\n\n    for (const s of all) {\n      s.destroy(err)\n    }\n  }\n}\n\nfunction echo (s) {\n  return s\n}\n\nfunction isStream (stream) {\n  return !!stream._readableState || !!stream._writableState\n}\n\nfunction isStreamx (stream) {\n  return typeof stream._duplexState === 'number' && isStream(stream)\n}\n\nfunction isEnded (stream) {\n  return !!stream._readableState && stream._readableState.ended\n}\n\nfunction isFinished (stream) {\n  return !!stream._writableState && stream._writableState.ended\n}\n\nfunction getStreamError (stream, opts = {}) {\n  const err = (stream._readableState && stream._readableState.error) || (stream._writableState && stream._writableState.error)\n\n  // avoid implicit errors by default\n  return (!opts.all && err === STREAM_DESTROYED) ? null : err\n}\n\nfunction isReadStreamx (stream) {\n  return isStreamx(stream) && stream.readable\n}\n\nfunction isTypedArray (data) {\n  return typeof data === 'object' && data !== null && typeof data.byteLength === 'number'\n}\n\nfunction defaultByteLength (data) {\n  return isTypedArray(data) ? data.byteLength : 1024\n}\n\nfunction noop () {}\n\nfunction abort () {\n  this.destroy(new Error('Stream aborted.'))\n}\n\nfunction isWritev (s) {\n  return s._writev !== Writable.prototype._writev && s._writev !== Duplex.prototype._writev\n}\n\nmodule.exports = {\n  pipeline,\n  pipelinePromise,\n  isStream,\n  isStreamx,\n  isEnded,\n  isFinished,\n  getStreamError,\n  Stream,\n  Writable,\n  Readable,\n  Duplex,\n  Transform,\n  // Export PassThrough for compatibility with Node.js core's stream module\n  PassThrough\n}\n", "module.exports = remove\r\n\r\nfunction remove (arr, i) {\r\n  if (i >= arr.length || i < 0) return\r\n  var last = arr.pop()\r\n  if (i < arr.length) {\r\n    var tmp = arr[i]\r\n    arr[i] = last\r\n    return tmp\r\n  }\r\n  return last\r\n}\r\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"crypto\" has been externalized for browser compatibility. Cannot access \"crypto.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "\"use strict\";\r\n\r\n// Based on RC4 algorithm, as described in\r\n// http://en.wikipedia.org/wiki/RC4\r\n\r\nfunction isInteger(n) {\r\n  return parseInt(n, 10) === n;\r\n}\r\n\r\nfunction createRC4(N) {\r\n  function identityPermutation() {\r\n    var s = new Array(N);\r\n    for (var i = 0; i < N; i++) {\r\n      s[i] = i;\r\n    }\r\n    return s;\r\n  }\r\n\r\n  // :: string | array integer -> array integer\r\n  function seed(key) {\r\n    if (key === undefined) {\r\n      key = new Array(N);\r\n      for (var k = 0; k < N; k++) {\r\n        key[k] = Math.floor(Math.random() * N);\r\n      }\r\n    } else if (typeof key === \"string\") {\r\n      // to string\r\n      key = \"\" + key;\r\n      key = key.split(\"\").map(function (c) { return c.charCodeAt(0) % N; });\r\n    } else if (Array.isArray(key)) {\r\n      if (!key.every(function (v) {\r\n        return typeof v === \"number\" && v === (v | 0);\r\n      })) {\r\n        throw new TypeError(\"invalid seed key specified: not array of integers\");\r\n      }\r\n    } else {\r\n      throw new TypeError(\"invalid seed key specified\");\r\n    }\r\n\r\n    var keylen = key.length;\r\n\r\n    // resed state\r\n    var s = identityPermutation();\r\n\r\n    var j = 0;\r\n    for (var i = 0; i < N; i++) {\r\n      j = (j + s[i] + key[i % keylen]) % N;\r\n      var tmp = s[i];\r\n      s[i] = s[j];\r\n      s[j] = tmp;\r\n    }\r\n\r\n    return s;\r\n  }\r\n\r\n  /* eslint-disable no-shadow */\r\n  function RC4(key) {\r\n    this.s = seed(key);\r\n    this.i = 0;\r\n    this.j = 0;\r\n  }\r\n  /* eslint-enable no-shadow */\r\n\r\n  RC4.prototype.randomNative = function () {\r\n    this.i = (this.i + 1) % N;\r\n    this.j = (this.j + this.s[this.i]) % N;\r\n\r\n    var tmp = this.s[this.i];\r\n    this.s[this.i] = this.s[this.j];\r\n    this.s[this.j] = tmp;\r\n\r\n    var k = this.s[(this.s[this.i] + this.s[this.j]) % N];\r\n\r\n    return k;\r\n  };\r\n\r\n  RC4.prototype.randomUInt32 = function () {\r\n    var a = this.randomByte();\r\n    var b = this.randomByte();\r\n    var c = this.randomByte();\r\n    var d = this.randomByte();\r\n\r\n    return ((a * 256 + b) * 256 + c) * 256 + d;\r\n  };\r\n\r\n  RC4.prototype.randomFloat = function () {\r\n    return this.randomUInt32() / 0x100000000;\r\n  };\r\n\r\n  RC4.prototype.random = function () {\r\n    var a;\r\n    var b;\r\n\r\n    if (arguments.length === 1) {\r\n      a = 0;\r\n      b = arguments[0];\r\n    } else if (arguments.length === 2) {\r\n      a = arguments[0];\r\n      b = arguments[1];\r\n    } else {\r\n      throw new TypeError(\"random takes one or two integer arguments\");\r\n    }\r\n\r\n    if (!isInteger(a) || !isInteger(b)) {\r\n      throw new TypeError(\"random takes one or two integer arguments\");\r\n    }\r\n\r\n    return a + this.randomUInt32() % (b - a + 1);\r\n  };\r\n\r\n  RC4.prototype.currentState = function () {\r\n    return {\r\n      i: this.i,\r\n      j: this.j,\r\n      s: this.s.slice(), // copy\r\n    };\r\n  };\r\n\r\n  RC4.prototype.setState = function (state) {\r\n    var s = state.s;\r\n    var i = state.i;\r\n    var j = state.j;\r\n\r\n    /* eslint-disable yoda */\r\n    if (!(i === (i | 0) && 0 <= i && i < N)) {\r\n      throw new Error(\"state.i should be integer [0, \" + (N - 1) + \"]\");\r\n    }\r\n\r\n    if (!(j === (j | 0) && 0 <= j && j < N)) {\r\n      throw new Error(\"state.j should be integer [0, \" + (N - 1) + \"]\");\r\n    }\r\n    /* eslint-enable yoda */\r\n\r\n    // check length\r\n    if (!Array.isArray(s) || s.length !== N) {\r\n      throw new Error(\"state should be array of length \" + N);\r\n    }\r\n\r\n    // check that all params are there\r\n    for (var k = 0; k < N; k++) {\r\n      if (s.indexOf(k) === -1) {\r\n        throw new Error(\"state should be permutation of 0..\" + (N - 1) + \": \" + k + \" is missing\");\r\n      }\r\n    }\r\n\r\n    this.i = i;\r\n    this.j = j;\r\n    this.s = s.slice(); // assign copy\r\n  };\r\n\r\n  return RC4;\r\n}\r\n\r\nvar RC4 = createRC4(256);\r\nRC4.prototype.randomByte = RC4.prototype.randomNative;\r\n\r\nvar RC4small = createRC4(16);\r\nRC4small.prototype.randomByte = function () {\r\n  var a = this.randomNative();\r\n  var b = this.randomNative();\r\n\r\n  return a * 16 + b;\r\n};\r\n\r\nvar ordA = \"a\".charCodeAt(0);\r\nvar ord0 = \"0\".charCodeAt(0);\r\n\r\nfunction toHex(n) {\r\n  return n < 10 ? String.fromCharCode(ord0 + n) : String.fromCharCode(ordA + n - 10);\r\n}\r\n\r\nfunction fromHex(c) {\r\n  return parseInt(c, 16);\r\n}\r\n\r\nRC4small.prototype.currentStateString = function () {\r\n  var state = this.currentState();\r\n\r\n  var i = toHex(state.i);\r\n  var j = toHex(state.j);\r\n\r\n  var res = i + j + state.s.map(toHex).join(\"\");\r\n  return res;\r\n};\r\n\r\nRC4small.prototype.setStateString = function (stateString) {\r\n  if (!stateString.match(/^[0-9a-f]{18}$/)) {\r\n    throw new TypeError(\"RC4small stateString should be 18 hex character string\");\r\n  }\r\n\r\n  var i = fromHex(stateString[0]);\r\n  var j = fromHex(stateString[1]);\r\n  var s = stateString.split(\"\").slice(2).map(fromHex);\r\n\r\n  this.setState({\r\n    i: i,\r\n    j: j,\r\n    s: s,\r\n  });\r\n};\r\n\r\nRC4.RC4small = RC4small;\r\n\r\nmodule.exports = RC4;\r\n", "const maxTick = 65535\r\nconst resolution = 10\r\nconst timeDiff = 1000 / resolution\r\nfunction getTick (start) {\r\n  return (+Date.now() - start) / timeDiff & 65535\r\n}\r\n\r\nmodule.exports = function (seconds) {\r\n  const start = +Date.now()\r\n\r\n  const size = resolution * (seconds || 5)\r\n  const buffer = [0]\r\n  let pointer = 1\r\n  let last = (getTick(start) - 1) & maxTick\r\n\r\n  return function (delta) {\r\n    const tick = getTick(start)\r\n    let dist = (tick - last) & maxTick\r\n    if (dist > size) dist = size\r\n    last = tick\r\n\r\n    while (dist--) {\r\n      if (pointer === size) pointer = 0\r\n      buffer[pointer] = buffer[pointer === 0 ? size - 1 : pointer - 1]\r\n      pointer++\r\n    }\r\n\r\n    if (delta) buffer[pointer - 1] += delta\r\n\r\n    const top = buffer[pointer - 1]\r\n    const btm = buffer.length < size ? 0 : buffer[pointer === size ? 0 : pointer]\r\n\r\n    return buffer.length < resolution ? top : (top - btm) * resolution / buffer.length\r\n  }\r\n}\r\n", "import EventEmitter from 'events'\nimport { Transform, pipeline } from 'streamx'\nimport arrayRemove from 'unordered-array-remove'\nimport debugFactory from 'debug'\nimport Wire from 'bittorrent-protocol'\n\nconst CONNECT_TIMEOUT_TCP = 5_000\nconst CONNECT_TIMEOUT_UTP = 5_000\nconst CONNECT_TIMEOUT_WEBRTC = 25_000\nconst HANDSHAKE_TIMEOUT = 25_000\n\n// Types of peers\nconst TYPE_TCP_INCOMING = 'tcpIncoming'\nconst TYPE_TCP_OUTGOING = 'tcpOutgoing'\nconst TYPE_UTP_INCOMING = 'utpIncoming'\nconst TYPE_UTP_OUTGOING = 'utpOutgoing'\nconst TYPE_WEBRTC = 'webrtc'\nconst TYPE_WEBSEED = 'webSeed'\n\n// Source used to obtain the peer\nconst SOURCE_MANUAL = 'manual'\nconst SOURCE_TRACKER = 'tracker'\nconst SOURCE_DHT = 'dht'\nconst SOURCE_LSD = 'lsd'\nconst SOURCE_UT_PEX = 'ut_pex'\n\nconst debug = debugFactory('webtorrent:peer')\n\nlet secure = false\n\nexport const enableSecure = () => {\n  secure = true\n}\n\n/**\n * Peer. Represents a peer in the torrent swarm.\n *\n * @param {string} id \"ip:port\" string, peer id (for WebRTC peers), or url (for Web Seeds)\n * @param {string} type the type of the peer\n */\nexport default class Peer extends EventEmitter {\n  constructor (id, type) {\n    super()\n\n    this.id = id\n    this.type = type\n\n    debug('new %s Peer %s', type, id)\n\n    this.addr = null\n    this.conn = null\n    this.swarm = null\n    this.wire = null\n    this.source = null\n\n    this.connected = false\n    this.destroyed = false\n    this.timeout = null // handshake timeout\n    this.retries = 0 // outgoing TCP connection retry count\n\n    this.sentPe1 = false\n    this.sentPe2 = false\n    this.sentPe3 = false\n    this.sentPe4 = false\n    this.sentHandshake = false\n  }\n\n  /**\n   * Called once the peer is connected (i.e. fired 'connect' event)\n   * @param {Socket} conn\n   */\n  onConnect () {\n    if (this.destroyed) return\n    this.connected = true\n\n    debug('Peer %s connected', this.id)\n\n    clearTimeout(this.connectTimeout)\n\n    const conn = this.conn\n    conn.once('end', () => {\n      this.destroy()\n    })\n    conn.once('close', () => {\n      this.destroy()\n    })\n    conn.once('finish', () => {\n      this.destroy()\n    })\n    conn.once('error', err => {\n      this.destroy(err)\n    })\n\n    const wire = this.wire = new Wire(this.type, this.retries, secure)\n\n    wire.once('end', () => {\n      this.destroy()\n    })\n    wire.once('close', () => {\n      this.destroy()\n    })\n    wire.once('finish', () => {\n      this.destroy()\n    })\n    wire.once('error', err => {\n      this.destroy(err)\n    })\n\n    wire.once('pe1', () => {\n      this.onPe1()\n    })\n    wire.once('pe2', () => {\n      this.onPe2()\n    })\n    wire.once('pe3', () => {\n      this.onPe3()\n    })\n    wire.once('pe4', () => {\n      this.onPe4()\n    })\n    wire.once('handshake', (infoHash, peerId) => {\n      this.onHandshake(infoHash, peerId)\n    })\n    this.startHandshakeTimeout()\n\n    this.setThrottlePipes()\n\n    if (this.swarm) {\n      if (this.type === 'tcpOutgoing') {\n        if (secure && this.retries === 0 && !this.sentPe1) this.sendPe1()\n        else if (!this.sentHandshake) this.handshake()\n      } else if (this.type !== 'tcpIncoming' && !this.sentHandshake) this.handshake()\n    }\n  }\n\n  sendPe1 () {\n    this.wire.sendPe1()\n    this.sentPe1 = true\n  }\n\n  onPe1 () {\n    this.sendPe2()\n  }\n\n  sendPe2 () {\n    this.wire.sendPe2()\n    this.sentPe2 = true\n  }\n\n  onPe2 () {\n    this.sendPe3()\n  }\n\n  sendPe3 () {\n    this.wire.sendPe3(this.swarm.infoHash)\n    this.sentPe3 = true\n  }\n\n  onPe3 (infoHashHash) {\n    if (this.swarm) {\n      if (this.swarm.infoHashHash !== infoHashHash) {\n        this.destroy(new Error('unexpected crypto handshake info hash for this swarm'))\n      }\n      this.sendPe4()\n    }\n  }\n\n  sendPe4 () {\n    this.wire.sendPe4(this.swarm.infoHash)\n    this.sentPe4 = true\n  }\n\n  onPe4 () {\n    if (!this.sentHandshake) this.handshake()\n  }\n\n  clearPipes () {\n    this.conn.unpipe()\n    this.wire.unpipe()\n  }\n\n  setThrottlePipes () {\n    const self = this\n    pipeline(\n      this.conn,\n      this.throttleGroups.down.throttle(),\n      new Transform({\n        transform (chunk, callback) {\n          self.emit('download', chunk.length)\n          if (self.destroyed) return\n          callback(null, chunk)\n        }\n      }),\n      this.wire,\n      this.throttleGroups.up.throttle(),\n      new Transform({\n        transform (chunk, callback) {\n          self.emit('upload', chunk.length)\n          if (self.destroyed) return\n          callback(null, chunk)\n        }\n      }),\n      this.conn\n    )\n  }\n\n  /**\n   * Called when handshake is received from remote peer.\n   * @param {string} infoHash\n   * @param {string} peerId\n   */\n  onHandshake (infoHash, peerId) {\n    if (!this.swarm) return // `this.swarm` not set yet, so do nothing\n    if (this.destroyed) return\n\n    if (this.swarm.destroyed) {\n      return this.destroy(new Error('swarm already destroyed'))\n    }\n    if (infoHash !== this.swarm.infoHash) {\n      return this.destroy(new Error('unexpected handshake info hash for this swarm'))\n    }\n    if (peerId === this.swarm.peerId) {\n      return this.destroy(new Error('refusing to connect to ourselves'))\n    }\n\n    debug('Peer %s got handshake %s', this.id, infoHash)\n\n    clearTimeout(this.handshakeTimeout)\n\n    this.retries = 0\n\n    let addr = this.addr\n    if (!addr && this.conn.remoteAddress && this.conn.remotePort) {\n      addr = `${this.conn.remoteAddress}:${this.conn.remotePort}`\n    }\n    this.swarm._onWire(this.wire, addr)\n\n    // swarm could be destroyed in user's 'wire' event handler\n    if (!this.swarm || this.swarm.destroyed) return\n\n    if (!this.sentHandshake) this.handshake()\n  }\n\n  handshake () {\n    const opts = {\n      dht: this.swarm.private ? false : !!this.swarm.client.dht,\n      fast: true\n    }\n    this.wire.handshake(this.swarm.infoHash, this.swarm.client.peerId, opts)\n    this.sentHandshake = true\n  }\n\n  startConnectTimeout () {\n    clearTimeout(this.connectTimeout)\n\n    const connectTimeoutValues = {\n      webrtc: CONNECT_TIMEOUT_WEBRTC,\n      tcpOutgoing: CONNECT_TIMEOUT_TCP,\n      utpOutgoing: CONNECT_TIMEOUT_UTP\n    }\n\n    this.connectTimeout = setTimeout(() => {\n      this.destroy(new Error('connect timeout'))\n    }, connectTimeoutValues[this.type])\n    if (this.connectTimeout.unref) this.connectTimeout.unref()\n  }\n\n  startHandshakeTimeout () {\n    clearTimeout(this.handshakeTimeout)\n    this.handshakeTimeout = setTimeout(() => {\n      this.destroy(new Error('handshake timeout'))\n    }, HANDSHAKE_TIMEOUT)\n    if (this.handshakeTimeout.unref) this.handshakeTimeout.unref()\n  }\n\n  destroy (err) {\n    if (this.destroyed) return\n    this.destroyed = true\n    this.connected = false\n\n    debug('destroy %s %s (error: %s)', this.type, this.id, err && (err.message || err))\n\n    clearTimeout(this.connectTimeout)\n    clearTimeout(this.handshakeTimeout)\n\n    const swarm = this.swarm\n    const conn = this.conn\n    const wire = this.wire\n\n    this.swarm = null\n    this.conn = null\n    this.wire = null\n\n    if (swarm && wire) {\n      arrayRemove(swarm.wires, swarm.wires.indexOf(wire))\n    }\n    if (conn) {\n      conn.on('error', () => {})\n      conn.destroy()\n    }\n    if (wire) wire.destroy()\n    if (swarm) swarm.removePeer(this.id)\n  }\n}\n\nPeer.TYPE_TCP_INCOMING = TYPE_TCP_INCOMING\nPeer.TYPE_TCP_OUTGOING = TYPE_TCP_OUTGOING\nPeer.TYPE_UTP_INCOMING = TYPE_UTP_INCOMING\nPeer.TYPE_UTP_OUTGOING = TYPE_UTP_OUTGOING\nPeer.TYPE_WEBRTC = TYPE_WEBRTC\nPeer.TYPE_WEBSEED = TYPE_WEBSEED\n\nPeer.SOURCE_MANUAL = SOURCE_MANUAL\nPeer.SOURCE_TRACKER = SOURCE_TRACKER\nPeer.SOURCE_DHT = SOURCE_DHT\nPeer.SOURCE_LSD = SOURCE_LSD\nPeer.SOURCE_UT_PEX = SOURCE_UT_PEX\n\n/**\n * WebRTC peer connections start out connected, because WebRTC peers require an\n * \"introduction\" (i.e. WebRTC signaling), and there's no equivalent to an IP address\n * that lets you refer to a WebRTC endpoint.\n */\nPeer.createWebRTCPeer = (conn, swarm, throttleGroups) => {\n  const peer = new Peer(conn.id, 'webrtc')\n  peer.conn = conn\n  peer.swarm = swarm\n  peer.throttleGroups = throttleGroups\n\n  if (peer.conn.connected) {\n    peer.onConnect()\n  } else {\n    const cleanup = () => {\n      peer.conn.removeListener('connect', onConnect)\n      peer.conn.removeListener('error', onError)\n    }\n    const onConnect = () => {\n      cleanup()\n      peer.onConnect()\n    }\n    const onError = err => {\n      cleanup()\n      peer.destroy(err)\n    }\n    peer.conn.once('connect', onConnect)\n    peer.conn.once('error', onError)\n    peer.startConnectTimeout()\n  }\n\n  return peer\n}\n\n/**\n * Incoming TCP peers start out connected, because the remote peer connected to the\n * listening port of the TCP server. Until the remote peer sends a handshake, we don't\n * know what swarm the connection is intended for.\n */\nPeer.createTCPIncomingPeer = (conn, throttleGroups) => {\n  return Peer._createIncomingPeer(conn, TYPE_TCP_INCOMING, throttleGroups)\n}\n\n/**\n * Incoming uTP peers start out connected, because the remote peer connected to the\n * listening port of the uTP server. Until the remote peer sends a handshake, we don't\n * know what swarm the connection is intended for.\n */\nPeer.createUTPIncomingPeer = (conn, throttleGroups) => {\n  return Peer._createIncomingPeer(conn, TYPE_UTP_INCOMING, throttleGroups)\n}\n\n/**\n * Outgoing TCP peers start out with just an IP address. At some point (when there is an\n * available connection), the client can attempt to connect to the address.\n */\nPeer.createTCPOutgoingPeer = (addr, swarm, throttleGroups) => {\n  return Peer._createOutgoingPeer(addr, swarm, TYPE_TCP_OUTGOING, throttleGroups)\n}\n\n/**\n * Outgoing uTP peers start out with just an IP address. At some point (when there is an\n * available connection), the client can attempt to connect to the address.\n */\nPeer.createUTPOutgoingPeer = (addr, swarm, throttleGroups) => {\n  return Peer._createOutgoingPeer(addr, swarm, TYPE_UTP_OUTGOING, throttleGroups)\n}\n\nPeer._createIncomingPeer = (conn, type, throttleGroups) => {\n  const addr = `${conn.remoteAddress}:${conn.remotePort}`\n  const peer = new Peer(addr, type)\n  peer.conn = conn\n  peer.addr = addr\n  peer.throttleGroups = throttleGroups\n\n  peer.onConnect()\n\n  return peer\n}\n\nPeer._createOutgoingPeer = (addr, swarm, type, throttleGroups) => {\n  const peer = new Peer(addr, type)\n  peer.addr = addr\n  peer.swarm = swarm\n  peer.throttleGroups = throttleGroups\n\n  return peer\n}\n\n/**\n * Peer that represents a Web Seed (BEP17 / BEP19).\n */\n\nPeer.createWebSeedPeer = (conn, id, swarm, throttleGroups) => {\n  const peer = new Peer(id, TYPE_WEBSEED)\n\n  peer.swarm = swarm\n  peer.conn = conn\n  peer.throttleGroups = throttleGroups\n\n  peer.onConnect()\n\n  return peer\n}\n", "/* Common package for dealing with hex/string/uint8 conversions (and sha1 hashing)\r\n*\r\n* @author   Jimmy Wärting <jimmy@warting.se> (https://jimmy.warting.se/opensource)\r\n* @license  MIT\r\n*/\r\nexport const alphabet = '0123456789abcdef'\r\nconst encodeLookup = []\r\nconst decodeLookup = []\r\n\r\nfor (let i = 0; i < 256; i++) {\r\n  encodeLookup[i] = alphabet[i >> 4 & 0xf] + alphabet[i & 0xf]\r\n  if (i < 16) {\r\n    if (i < 10) {\r\n      decodeLookup[0x30 + i] = i\r\n    } else {\r\n      decodeLookup[0x61 - 10 + i] = i\r\n    }\r\n  }\r\n}\r\n\r\nexport const arr2hex = data => {\r\n  const length = data.length\r\n  let string = ''\r\n  let i = 0\r\n  while (i < length) {\r\n    string += encodeLookup[data[i++]]\r\n  }\r\n  return string\r\n}\r\n\r\nexport const hex2arr = str => {\r\n  const sizeof = str.length >> 1\r\n  const length = sizeof << 1\r\n  const array = new Uint8Array(sizeof)\r\n  let n = 0\r\n  let i = 0\r\n  while (i < length) {\r\n    array[n++] = decodeLookup[str.charCodeAt(i++)] << 4 | decodeLookup[str.charCodeAt(i++)]\r\n  }\r\n  return array\r\n}\r\n\r\nexport const concat = (chunks, size = 0) => {\r\n  const length = chunks.length || 0\r\n  if (!size) {\r\n    let i = length\r\n    while (i--) size += chunks[i].length\r\n  }\r\n  const b = new Uint8Array(size)\r\n  let offset = size\r\n  let i = length\r\n  while (i--) {\r\n    offset -= chunks[i].length\r\n    b.set(chunks[i], offset)\r\n  }\r\n\r\n  return b\r\n}\r\n\r\nexport const equal = (a, b) => {\r\n  if (a.length !== b.length) return false\r\n  for (let i = a.length; i > -1; i -= 1) {\r\n    if ((a[i] !== b[i])) return false\r\n  }\r\n  return true\r\n}\r\n", "const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\n\nexport const encode = (arraybuffer: ArrayBuffer): string => {\n    let bytes = new Uint8Array(arraybuffer),\n        i,\n        len = bytes.length,\n        base64 = '';\n\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    } else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n\n    return base64;\n};\n\nexport const decode = (base64: string): ArrayBuffer => {\n    let bufferLength = base64.length * 0.75,\n        len = base64.length,\n        i,\n        p = 0,\n        encoded1,\n        encoded2,\n        encoded3,\n        encoded4;\n\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    const arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n};\n", "import { arr2hex, hex2arr, alphabet } from './util.js'\r\nimport { decode, encode } from 'base64-arraybuffer'\r\n\r\nconst decoder = new TextDecoder()\r\n// 50% slower at < 48 chars, but little impact at 4M OPS/s vs 8M OPS/s\r\nexport const arr2text = (data, enc) => {\r\n  if (!enc) return decoder.decode(data)\r\n  const dec = new TextDecoder(enc)\r\n  return dec.decode(data)\r\n}\r\n\r\n// sacrifice ~20% speed for bundle size\r\nconst encoder = new TextEncoder()\r\nexport const text2arr = str => encoder.encode(str)\r\n\r\nexport const arr2base = data => encode(data)\r\n\r\nexport const base2arr = str => new Uint8Array(decode(str))\r\n\r\nexport const bin2hex = str => {\r\n  let res = ''\r\n  let c\r\n  let i = 0\r\n  const len = str.length\r\n\r\n  while (i < len) {\r\n    c = str.charCodeAt(i++)\r\n    res += alphabet[c >> 4] + alphabet[c & 0xF]\r\n  }\r\n\r\n  return res\r\n}\r\n\r\nconst MAX_ARGUMENTS_LENGTH = 0x10000\r\nexport const hex2bin = hex => {\r\n  const points = hex2arr(hex)\r\n  if (points.length <= MAX_ARGUMENTS_LENGTH) return String.fromCharCode(...points)\r\n\r\n  let res = ''\r\n  let i = 0\r\n  while (i < points.length) {\r\n    res += String.fromCharCode(...points.subarray(i, i += MAX_ARGUMENTS_LENGTH))\r\n  }\r\n  return res\r\n}\r\n\r\nconst scope = typeof window !== 'undefined' ? window : self\r\nconst crypto = scope.crypto || scope.msCrypto || {}\r\nconst subtle = crypto.subtle || crypto.webkitSubtle\r\n\r\nconst formatMap = {\r\n  hex: arr2hex,\r\n  base64: arr2base\r\n}\r\n\r\nexport const hash = async (data, format, algo = 'sha-1') => {\r\n  if (!subtle) throw new Error('no web crypto support')\r\n  if (typeof data === 'string') data = text2arr(data)\r\n  const out = new Uint8Array(await subtle.digest(algo, data))\r\n  return format ? formatMap[format](out) : out\r\n}\r\n\r\nexport const randomBytes = size => {\r\n  const view = new Uint8Array(size)\r\n  return crypto.getRandomValues(view)\r\n}\r\n\r\nexport * from './util.js'\r\n", "export function digitCount (value) {\r\n  // Add a digit for negative numbers, as the sign will be prefixed\r\n  const sign = value < 0 ? 1 : 0\r\n  // Guard against negative numbers & zero going into log10(),\r\n  // as that would return -Infinity\r\n  value = Math.abs(Number(value || 1))\r\n  return Math.floor(Math.log10(value)) + 1 + sign\r\n}\r\n\r\nexport function getType (value) {\r\n  if (ArrayBuffer.isView(value)) return 'arraybufferview'\r\n  if (Array.isArray(value)) return 'array'\r\n  if (value instanceof Number) return 'number'\r\n  if (value instanceof Boolean) return 'boolean'\r\n  if (value instanceof Set) return 'set'\r\n  if (value instanceof Map) return 'map'\r\n  if (value instanceof String) return 'string'\r\n  if (value instanceof ArrayBuffer) return 'arraybuffer'\r\n  return typeof value\r\n}\r\n", "import { concat, text2arr } from 'uint8-util'\r\nimport { getType } from './util.js'\r\n\r\n/**\r\n * Encodes data in bencode.\r\n *\r\n * @param  {Uint8Array|Array|String|Object|Number|Boolean} data\r\n * @return {Uint8Array}\r\n */\r\nfunction encode (data, buffer, offset) {\r\n  const buffers = []\r\n  let result = null\r\n\r\n  encode._encode(buffers, data)\r\n  result = concat(buffers)\r\n  encode.bytes = result.length\r\n\r\n  if (ArrayBuffer.isView(buffer)) {\r\n    buffer.set(result, offset)\r\n    return buffer\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nencode.bytes = -1\r\nencode._floatConversionDetected = false\r\n\r\nencode._encode = function (buffers, data) {\r\n  if (data == null) { return }\r\n\r\n  switch (getType(data)) {\r\n    case 'object': encode.dict(buffers, data); break\r\n    case 'map': encode.dictMap(buffers, data); break\r\n    case 'array': encode.list(buffers, data); break\r\n    case 'set': encode.listSet(buffers, data); break\r\n    case 'string': encode.string(buffers, data); break\r\n    case 'number': encode.number(buffers, data); break\r\n    case 'boolean': encode.number(buffers, data); break\r\n    case 'arraybufferview': encode.buffer(buffers, new Uint8Array(data.buffer, data.byteOffset, data.byteLength)); break\r\n    case 'arraybuffer': encode.buffer(buffers, new Uint8Array(data)); break\r\n  }\r\n}\r\n\r\nconst buffE = new Uint8Array([0x65])\r\nconst buffD = new Uint8Array([0x64])\r\nconst buffL = new Uint8Array([0x6C])\r\n\r\nencode.buffer = function (buffers, data) {\r\n  buffers.push(text2arr(data.length + ':'), data)\r\n}\r\n\r\nencode.string = function (buffers, data) {\r\n  buffers.push(text2arr(text2arr(data).byteLength + ':' + data))\r\n}\r\n\r\nencode.number = function (buffers, data) {\r\n  if (Number.isInteger(data)) return buffers.push(text2arr('i' + BigInt(data) + 'e'))\r\n\r\n  const maxLo = 0x80000000\r\n  const hi = (data / maxLo) << 0\r\n  const lo = (data % maxLo) << 0\r\n  const val = hi * maxLo + lo\r\n\r\n  buffers.push(text2arr('i' + val + 'e'))\r\n\r\n  if (val !== data && !encode._floatConversionDetected) {\r\n    encode._floatConversionDetected = true\r\n    console.warn(\r\n      'WARNING: Possible data corruption detected with value \"' + data + '\":',\r\n      'Bencoding only defines support for integers, value was converted to \"' + val + '\"'\r\n    )\r\n    console.trace()\r\n  }\r\n}\r\n\r\nencode.dict = function (buffers, data) {\r\n  buffers.push(buffD)\r\n\r\n  let j = 0\r\n  let k\r\n  // fix for issue #13 - sorted dicts\r\n  const keys = Object.keys(data).sort()\r\n  const kl = keys.length\r\n\r\n  for (; j < kl; j++) {\r\n    k = keys[j]\r\n    if (data[k] == null) continue\r\n    encode.string(buffers, k)\r\n    encode._encode(buffers, data[k])\r\n  }\r\n\r\n  buffers.push(buffE)\r\n}\r\n\r\nencode.dictMap = function (buffers, data) {\r\n  buffers.push(buffD)\r\n\r\n  const keys = Array.from(data.keys()).sort()\r\n\r\n  for (const key of keys) {\r\n    if (data.get(key) == null) continue\r\n    ArrayBuffer.isView(key)\r\n      ? encode._encode(buffers, key)\r\n      : encode.string(buffers, String(key))\r\n    encode._encode(buffers, data.get(key))\r\n  }\r\n\r\n  buffers.push(buffE)\r\n}\r\n\r\nencode.list = function (buffers, data) {\r\n  let i = 0\r\n  const c = data.length\r\n  buffers.push(buffL)\r\n\r\n  for (; i < c; i++) {\r\n    if (data[i] == null) continue\r\n    encode._encode(buffers, data[i])\r\n  }\r\n\r\n  buffers.push(buffE)\r\n}\r\n\r\nencode.listSet = function (buffers, data) {\r\n  buffers.push(buffL)\r\n\r\n  for (const item of data) {\r\n    if (item == null) continue\r\n    encode._encode(buffers, item)\r\n  }\r\n\r\n  buffers.push(buffE)\r\n}\r\n\r\nexport default encode\r\n", "import { arr2text, text2arr, arr2hex } from 'uint8-util'\r\n\r\nconst INTEGER_START = 0x69 // 'i'\r\nconst STRING_DELIM = 0x3A // ':'\r\nconst DICTIONARY_START = 0x64 // 'd'\r\nconst LIST_START = 0x6C // 'l'\r\nconst END_OF_TYPE = 0x65 // 'e'\r\n\r\n/**\r\n * replaces parseInt(buffer.toString('ascii', start, end)).\r\n * For strings with less then ~30 charachters, this is actually a lot faster.\r\n *\r\n * @param {Uint8Array} data\r\n * @param {Number} start\r\n * @param {Number} end\r\n * @return {Number} calculated number\r\n */\r\nfunction getIntFromBuffer (buffer, start, end) {\r\n  let sum = 0\r\n  let sign = 1\r\n\r\n  for (let i = start; i < end; i++) {\r\n    const num = buffer[i]\r\n\r\n    if (num < 58 && num >= 48) {\r\n      sum = sum * 10 + (num - 48)\r\n      continue\r\n    }\r\n\r\n    if (i === start && num === 43) { // +\r\n      continue\r\n    }\r\n\r\n    if (i === start && num === 45) { // -\r\n      sign = -1\r\n      continue\r\n    }\r\n\r\n    if (num === 46) { // .\r\n      // its a float. break here.\r\n      break\r\n    }\r\n\r\n    throw new Error('not a number: buffer[' + i + '] = ' + num)\r\n  }\r\n\r\n  return sum * sign\r\n}\r\n\r\n/**\r\n * Decodes bencoded data.\r\n *\r\n * @param  {Uint8Array} data\r\n * @param  {Number} start (optional)\r\n * @param  {Number} end (optional)\r\n * @param  {String} encoding (optional)\r\n * @return {Object|Array|Uint8Array|String|Number}\r\n */\r\nfunction decode (data, start, end, encoding) {\r\n  if (data == null || data.length === 0) {\r\n    return null\r\n  }\r\n\r\n  if (typeof start !== 'number' && encoding == null) {\r\n    encoding = start\r\n    start = undefined\r\n  }\r\n\r\n  if (typeof end !== 'number' && encoding == null) {\r\n    encoding = end\r\n    end = undefined\r\n  }\r\n\r\n  decode.position = 0\r\n  decode.encoding = encoding || null\r\n\r\n  decode.data = !(ArrayBuffer.isView(data))\r\n    ? text2arr(data)\r\n    : new Uint8Array(data.slice(start, end))\r\n\r\n  decode.bytes = decode.data.length\r\n\r\n  return decode.next()\r\n}\r\n\r\ndecode.bytes = 0\r\ndecode.position = 0\r\ndecode.data = null\r\ndecode.encoding = null\r\n\r\ndecode.next = function () {\r\n  switch (decode.data[decode.position]) {\r\n    case DICTIONARY_START:\r\n      return decode.dictionary()\r\n    case LIST_START:\r\n      return decode.list()\r\n    case INTEGER_START:\r\n      return decode.integer()\r\n    default:\r\n      return decode.buffer()\r\n  }\r\n}\r\n\r\ndecode.find = function (chr) {\r\n  let i = decode.position\r\n  const c = decode.data.length\r\n  const d = decode.data\r\n\r\n  while (i < c) {\r\n    if (d[i] === chr) return i\r\n    i++\r\n  }\r\n\r\n  throw new Error(\r\n    'Invalid data: Missing delimiter \"' +\r\n    String.fromCharCode(chr) + '\" [0x' +\r\n    chr.toString(16) + ']'\r\n  )\r\n}\r\n\r\ndecode.dictionary = function () {\r\n  decode.position++\r\n\r\n  const dict = {}\r\n\r\n  while (decode.data[decode.position] !== END_OF_TYPE) {\r\n    const buffer = decode.buffer()\r\n    let key = arr2text(buffer)\r\n    if (key.includes('\\uFFFD')) key = arr2hex(buffer)\r\n    dict[key] = decode.next()\r\n  }\r\n\r\n  decode.position++\r\n\r\n  return dict\r\n}\r\n\r\ndecode.list = function () {\r\n  decode.position++\r\n\r\n  const lst = []\r\n\r\n  while (decode.data[decode.position] !== END_OF_TYPE) {\r\n    lst.push(decode.next())\r\n  }\r\n\r\n  decode.position++\r\n\r\n  return lst\r\n}\r\n\r\ndecode.integer = function () {\r\n  const end = decode.find(END_OF_TYPE)\r\n  const number = getIntFromBuffer(decode.data, decode.position + 1, end)\r\n\r\n  decode.position += end + 1 - decode.position\r\n\r\n  return number\r\n}\r\n\r\ndecode.buffer = function () {\r\n  let sep = decode.find(STRING_DELIM)\r\n  const length = getIntFromBuffer(decode.data, decode.position, sep)\r\n  const end = ++sep + length\r\n\r\n  decode.position = end\r\n\r\n  return decode.encoding\r\n    ? arr2text(decode.data.slice(sep, end))\r\n    : decode.data.slice(sep, end)\r\n}\r\n\r\nexport default decode\r\n", "import { text2arr } from 'uint8-util'\r\nimport { digitCount, getType } from './util.js'\r\n\r\nfunction listLength (list) {\r\n  let length = 1 + 1 // type marker + end-of-type marker\r\n\r\n  for (const value of list) {\r\n    length += encodingLength(value)\r\n  }\r\n\r\n  return length\r\n}\r\n\r\nfunction mapLength (map) {\r\n  let length = 1 + 1 // type marker + end-of-type marker\r\n\r\n  for (const [key, value] of map) {\r\n    const keyLength = text2arr(key).byteLength\r\n    length += digitCount(keyLength) + 1 + keyLength\r\n    length += encodingLength(value)\r\n  }\r\n\r\n  return length\r\n}\r\n\r\nfunction objectLength (value) {\r\n  let length = 1 + 1 // type marker + end-of-type marker\r\n  const keys = Object.keys(value)\r\n\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const keyLength = text2arr(keys[i]).byteLength\r\n    length += digitCount(keyLength) + 1 + keyLength\r\n    length += encodingLength(value[keys[i]])\r\n  }\r\n\r\n  return length\r\n}\r\n\r\nfunction stringLength (value) {\r\n  const length = text2arr(value).byteLength\r\n  return digitCount(length) + 1 + length\r\n}\r\n\r\nfunction arrayBufferLength (value) {\r\n  const length = value.byteLength - value.byteOffset\r\n  return digitCount(length) + 1 + length\r\n}\r\n\r\nfunction encodingLength (value) {\r\n  const length = 0\r\n\r\n  if (value == null) return length\r\n\r\n  const type = getType(value)\r\n\r\n  switch (type) {\r\n    case 'arraybufferview': return arrayBufferLength(value)\r\n    case 'string': return stringLength(value)\r\n    case 'array': case 'set': return listLength(value)\r\n    case 'number': return 1 + digitCount(Math.floor(value)) + 1\r\n    case 'bigint': return 1 + value.toString().length + 1\r\n    case 'object': return objectLength(value)\r\n    case 'map': return mapLength(value)\r\n    default:\r\n      throw new TypeError(`Unsupported value of type \"${type}\"`)\r\n  }\r\n}\r\n\r\nexport default encodingLength\r\n", "import encode from './lib/encode.js'\r\nimport decode from './lib/decode.js'\r\nimport byteLength from './lib/encoding-length.js'\r\n/**\r\n * Determines the amount of bytes\r\n * needed to encode the given value\r\n * @param  {Object|Array|Uint8Array|String|Number|Boolean} value\r\n * @return {Number} byteCount\r\n */\r\nconst encodingLength = byteLength\r\nexport default { encode, decode, byteLength, encodingLength }\r\n", null, "/*! bittorrent-protocol. MIT License. WebTorrent LLC <https://webtorrent.io/opensource> */\r\nimport bencode from 'bencode'\r\nimport BitField from 'bitfield'\r\nimport crypto from 'crypto'\r\nimport Debug from 'debug'\r\nimport RC4 from 'rc4'\r\nimport { Duplex } from 'streamx'\r\nimport { hash, concat, equal, hex2arr, arr2hex, text2arr, arr2text, randomBytes } from 'uint8-util'\r\nimport throughput from 'throughput'\r\nimport arrayRemove from 'unordered-array-remove'\r\n\r\nconst debug = Debug('bittorrent-protocol')\r\n\r\nconst BITFIELD_GROW = 400000\r\nconst KEEP_ALIVE_TIMEOUT = 55000\r\nconst ALLOWED_FAST_SET_MAX_LENGTH = 100\r\n\r\nconst MESSAGE_PROTOCOL = text2arr('\\u0013BitTorrent protocol')\r\nconst MESSAGE_KEEP_ALIVE = new Uint8Array([0x00, 0x00, 0x00, 0x00])\r\nconst MESSAGE_CHOKE = new Uint8Array([0x00, 0x00, 0x00, 0x01, 0x00])\r\nconst MESSAGE_UNCHOKE = new Uint8Array([0x00, 0x00, 0x00, 0x01, 0x01])\r\nconst MESSAGE_INTERESTED = new Uint8Array([0x00, 0x00, 0x00, 0x01, 0x02])\r\nconst MESSAGE_UNINTERESTED = new Uint8Array([0x00, 0x00, 0x00, 0x01, 0x03])\r\n\r\nconst MESSAGE_RESERVED = [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]\r\nconst MESSAGE_PORT = [0x00, 0x00, 0x00, 0x03, 0x09, 0x00, 0x00]\r\n\r\n// BEP6 Fast Extension\r\nconst MESSAGE_HAVE_ALL = new Uint8Array([0x00, 0x00, 0x00, 0x01, 0x0E])\r\nconst MESSAGE_HAVE_NONE = new Uint8Array([0x00, 0x00, 0x00, 0x01, 0x0F])\r\n\r\nconst DH_PRIME = 'ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a36210000000000090563'\r\nconst DH_GENERATOR = 2\r\nconst VC = new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])\r\nconst CRYPTO_PROVIDE = new Uint8Array([0x00, 0x00, 0x01, 0x02])\r\nconst CRYPTO_SELECT = new Uint8Array([0x00, 0x00, 0x00, 0x02]) // always try to choose RC4 encryption instead of plaintext\r\n\r\nfunction xor (a, b) {\r\n  for (let len = a.length; len--;) a[len] ^= b[len]\r\n  return a\r\n}\r\n\r\nclass Request {\r\n  constructor (piece, offset, length, callback) {\r\n    this.piece = piece\r\n    this.offset = offset\r\n    this.length = length\r\n    this.callback = callback\r\n  }\r\n}\r\n\r\nclass HaveAllBitField {\r\n  constructor () {\r\n    this.buffer = new Uint8Array() // dummy\r\n  }\r\n\r\n  get (index) {\r\n    return true\r\n  }\r\n\r\n  set (index) {}\r\n}\r\n\r\nclass Wire extends Duplex {\r\n  constructor (type = null, retries = 0, peEnabled = false) {\r\n    super()\r\n\r\n    this._debugId = arr2hex(randomBytes(4))\r\n    this._debug('new wire')\r\n\r\n    this.peerId = null // remote peer id (hex string)\r\n    this.peerIdBuffer = null // remote peer id (buffer)\r\n    this.type = type // connection type ('webrtc', 'tcpIncoming', 'tcpOutgoing', 'webSeed')\r\n\r\n    this.amChoking = true // are we choking the peer?\r\n    this.amInterested = false // are we interested in the peer?\r\n\r\n    this.peerChoking = true // is the peer choking us?\r\n    this.peerInterested = false // is the peer interested in us?\r\n\r\n    // The largest torrent that I know of (the Geocities archive) is ~641 GB and has\r\n    // ~41,000 pieces. Therefore, cap bitfield to 10x larger (400,000 bits) to support all\r\n    // possible torrents but prevent malicious peers from growing bitfield to fill memory.\r\n    this.peerPieces = new BitField(0, { grow: BITFIELD_GROW })\r\n\r\n    this.extensions = {}\r\n    this.peerExtensions = {}\r\n\r\n    this.requests = [] // outgoing\r\n    this.peerRequests = [] // incoming\r\n\r\n    this.extendedMapping = {} // number -> string, ex: 1 -> 'ut_metadata'\r\n    this.peerExtendedMapping = {} // string -> number, ex: 9 -> 'ut_metadata'\r\n\r\n    // The extended handshake to send, minus the \"m\" field, which gets automatically\r\n    // filled from `this.extendedMapping`\r\n    this.extendedHandshake = {}\r\n\r\n    this.peerExtendedHandshake = {} // remote peer's extended handshake\r\n\r\n    // BEP6 Fast Estension\r\n    this.hasFast = false // is fast extension enabled?\r\n    this.allowedFastSet = [] // allowed fast set\r\n    this.peerAllowedFastSet = [] // peer's allowed fast set\r\n\r\n    this._ext = {} // string -> function, ex 'ut_metadata' -> ut_metadata()\r\n    this._nextExt = 1\r\n\r\n    this.uploaded = 0\r\n    this.downloaded = 0\r\n    this.uploadSpeed = throughput()\r\n    this.downloadSpeed = throughput()\r\n\r\n    this._keepAliveInterval = null\r\n    this._timeout = null\r\n    this._timeoutMs = 0\r\n    this._timeoutExpiresAt = null\r\n\r\n    this._finished = false\r\n\r\n    this._parserSize = 0 // number of needed bytes to parse next message from remote peer\r\n    this._parser = null // function to call once `this._parserSize` bytes are available\r\n\r\n    this._buffer = [] // incomplete message data\r\n    this._bufferSize = 0 // cached total length of buffers in `this._buffer`\r\n\r\n    this._peEnabled = peEnabled\r\n    if (peEnabled) {\r\n      this._dh = crypto.createDiffieHellman(DH_PRIME, 'hex', DH_GENERATOR) // crypto object used to generate keys/secret\r\n      this._myPubKey = this._dh.generateKeys('hex') // my DH public key\r\n    } else {\r\n      this._myPubKey = null\r\n    }\r\n    this._peerPubKey = null // peer's DH public key\r\n    this._sharedSecret = null // shared DH secret\r\n    this._peerCryptoProvide = [] // encryption methods provided by peer; we expect this to always contain 0x02\r\n    this._cryptoHandshakeDone = false\r\n\r\n    this._cryptoSyncPattern = null // the pattern to search for when resynchronizing after receiving pe1/pe2\r\n    this._waitMaxBytes = null // the maximum number of bytes resynchronization must occur within\r\n    this._encryptionMethod = null // 1 for plaintext, 2 for RC4\r\n    this._encryptGenerator = null // RC4 keystream generator for encryption\r\n    this._decryptGenerator = null // RC4 keystream generator for decryption\r\n    this._setGenerators = false // a flag for whether setEncrypt() has successfully completed\r\n\r\n    this.once('finish', () => this._onFinish())\r\n\r\n    this.on('finish', this._onFinish)\r\n    this._debug('type:', this.type)\r\n\r\n    if (this.type === 'tcpIncoming' && this._peEnabled) {\r\n      // If we are not the initiator, we should wait to see if the client begins\r\n      // with PE/MSE handshake or the standard bittorrent handshake.\r\n      this._determineHandshakeType()\r\n    } else if (this.type === 'tcpOutgoing' && this._peEnabled && retries === 0) {\r\n      this._parsePe2()\r\n    } else {\r\n      this._parseHandshake(null)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set whether to send a \"keep-alive\" ping (sent every 55s)\r\n   * @param {boolean} enable\r\n   */\r\n  setKeepAlive (enable) {\r\n    this._debug('setKeepAlive %s', enable)\r\n    clearInterval(this._keepAliveInterval)\r\n    if (enable === false) return\r\n    this._keepAliveInterval = setInterval(() => {\r\n      this.keepAlive()\r\n    }, KEEP_ALIVE_TIMEOUT)\r\n  }\r\n\r\n  /**\r\n   * Set the amount of time to wait before considering a request to be \"timed out\"\r\n   * @param {number} ms\r\n   * @param {boolean=} unref (should the timer be unref'd? default: false)\r\n   */\r\n  setTimeout (ms, unref) {\r\n    this._debug('setTimeout ms=%d unref=%s', ms, unref)\r\n    this._timeoutMs = ms\r\n    this._timeoutUnref = !!unref\r\n    this._resetTimeout(true)\r\n  }\r\n\r\n  destroy () {\r\n    if (this.destroyed) return\r\n    this._debug('destroy')\r\n    this.end()\r\n    return this\r\n  }\r\n\r\n  end (data) {\r\n    if (this.destroyed || this.destroying) return\r\n    this._debug('end')\r\n    this._onUninterested()\r\n    this._onChoke()\r\n    return super.end(data)\r\n  }\r\n\r\n  /**\r\n   * Use the specified protocol extension.\r\n   * @param  {function} Extension\r\n   */\r\n  use (Extension) {\r\n    const name = Extension.prototype.name\r\n    if (!name) {\r\n      throw new Error('Extension class requires a \"name\" property on the prototype')\r\n    }\r\n    this._debug('use extension.name=%s', name)\r\n\r\n    const ext = this._nextExt\r\n    const handler = new Extension(this)\r\n\r\n    function noop () {}\r\n\r\n    if (typeof handler.onHandshake !== 'function') {\r\n      handler.onHandshake = noop\r\n    }\r\n    if (typeof handler.onExtendedHandshake !== 'function') {\r\n      handler.onExtendedHandshake = noop\r\n    }\r\n    if (typeof handler.onMessage !== 'function') {\r\n      handler.onMessage = noop\r\n    }\r\n\r\n    this.extendedMapping[ext] = name\r\n    this._ext[name] = handler\r\n    this[name] = handler\r\n\r\n    this._nextExt += 1\r\n  }\r\n\r\n  //\r\n  // OUTGOING MESSAGES\r\n  //\r\n\r\n  /**\r\n   * Message \"keep-alive\": <len=0000>\r\n   */\r\n  keepAlive () {\r\n    this._debug('keep-alive')\r\n    this._push(MESSAGE_KEEP_ALIVE)\r\n  }\r\n\r\n  sendPe1 () {\r\n    if (this._peEnabled) {\r\n      const padALen = Math.floor(Math.random() * 513)\r\n      const padA = randomBytes(padALen)\r\n      this._push(concat([hex2arr(this._myPubKey), padA]))\r\n    }\r\n  }\r\n\r\n  sendPe2 () {\r\n    const padBLen = Math.floor(Math.random() * 513)\r\n    const padB = randomBytes(padBLen)\r\n    this._push(concat([hex2arr(this._myPubKey), padB]))\r\n  }\r\n\r\n  async sendPe3 (infoHash) {\r\n    await this.setEncrypt(this._sharedSecret, infoHash)\r\n\r\n    const hash1Buffer = await hash(hex2arr(this._utfToHex('req1') + this._sharedSecret))\r\n\r\n    const hash2Buffer = await hash(hex2arr(this._utfToHex('req2') + infoHash))\r\n    const hash3Buffer = await hash(hex2arr(this._utfToHex('req3') + this._sharedSecret))\r\n    const hashesXorBuffer = xor(hash2Buffer, hash3Buffer)\r\n\r\n    const padCLen = new DataView(randomBytes(2).buffer).getUint16(0) % 512\r\n    const padCBuffer = randomBytes(padCLen)\r\n\r\n    let vcAndProvideBuffer = new Uint8Array(8 + 4 + 2 + padCLen + 2)\r\n    vcAndProvideBuffer.set(VC)\r\n    vcAndProvideBuffer.set(CRYPTO_PROVIDE, 8)\r\n\r\n    const view = new DataView(vcAndProvideBuffer.buffer)\r\n\r\n    view.setInt16(12, padCLen) // pad C length\r\n    padCBuffer.copy(vcAndProvideBuffer, 14)\r\n    view.setInt16(14 + padCLen, 0) // IA length\r\n    vcAndProvideBuffer = this._encryptHandshake(vcAndProvideBuffer)\r\n\r\n    this._push(concat([hash1Buffer, hashesXorBuffer, vcAndProvideBuffer]))\r\n  }\r\n\r\n  async sendPe4 (infoHash) {\r\n    await this.setEncrypt(this._sharedSecret, infoHash)\r\n\r\n    const padDLen = new DataView(randomBytes(2).buffer).getUint16(0) % 512\r\n    const padDBuffer = randomBytes(padDLen)\r\n    let vcAndSelectBuffer = new Uint8Array(8 + 4 + 2 + padDLen)\r\n    const view = new DataView(vcAndSelectBuffer.buffer)\r\n\r\n    vcAndSelectBuffer.set(VC)\r\n    vcAndSelectBuffer.set(CRYPTO_SELECT, 8)\r\n    view.setInt16(12, padDLen) // lenD?\r\n    vcAndSelectBuffer.set(padDBuffer, 14)\r\n    vcAndSelectBuffer = this._encryptHandshake(vcAndSelectBuffer)\r\n    this._push(vcAndSelectBuffer)\r\n    this._cryptoHandshakeDone = true\r\n    this._debug('completed crypto handshake')\r\n  }\r\n\r\n  /**\r\n   * Message: \"handshake\" <pstrlen><pstr><reserved><info_hash><peer_id>\r\n   * @param  {Uint8Array|string} infoHash (as Buffer or *hex* string)\r\n   * @param  {Uint8Array|string} peerId\r\n   * @param  {Object} extensions\r\n   */\r\n  handshake (infoHash, peerId, extensions) {\r\n    let infoHashBuffer\r\n    let peerIdBuffer\r\n    if (typeof infoHash === 'string') {\r\n      infoHash = infoHash.toLowerCase()\r\n      infoHashBuffer = hex2arr(infoHash)\r\n    } else {\r\n      infoHashBuffer = infoHash\r\n      infoHash = arr2hex(infoHashBuffer)\r\n    }\r\n    if (typeof peerId === 'string') {\r\n      peerIdBuffer = hex2arr(peerId)\r\n    } else {\r\n      peerIdBuffer = peerId\r\n      peerId = arr2hex(peerIdBuffer)\r\n    }\r\n\r\n    this._infoHash = infoHashBuffer\r\n\r\n    if (infoHashBuffer.length !== 20 || peerIdBuffer.length !== 20) {\r\n      throw new Error('infoHash and peerId MUST have length 20')\r\n    }\r\n\r\n    this._debug('handshake i=%s p=%s exts=%o', infoHash, peerId, extensions)\r\n\r\n    const reserved = new Uint8Array(MESSAGE_RESERVED)\r\n\r\n    this.extensions = {\r\n      extended: true,\r\n      dht: !!(extensions && extensions.dht),\r\n      fast: !!(extensions && extensions.fast)\r\n    }\r\n\r\n    reserved[5] |= 0x10 // enable extended message\r\n    if (this.extensions.dht) reserved[7] |= 0x01\r\n    if (this.extensions.fast) reserved[7] |= 0x04\r\n\r\n    // BEP6 Fast Extension: The extension is enabled only if both ends of the connection set this bit.\r\n    if (this.extensions.fast && this.peerExtensions.fast) {\r\n      this._debug('fast extension is enabled')\r\n      this.hasFast = true\r\n    }\r\n    this._push(concat([MESSAGE_PROTOCOL, reserved, infoHashBuffer, peerIdBuffer]))\r\n    this._handshakeSent = true\r\n\r\n    if (this.peerExtensions.extended && !this._extendedHandshakeSent) {\r\n      // Peer's handshake indicated support already\r\n      // (incoming connection)\r\n      this._sendExtendedHandshake()\r\n    }\r\n  }\r\n\r\n  /* Peer supports BEP-0010, send extended handshake.\r\n   *\r\n   * This comes after the 'handshake' event to give the user a chance to populate\r\n   * `this.extendedHandshake` and `this.extendedMapping` before the extended handshake\r\n   * is sent to the remote peer.\r\n   */\r\n  _sendExtendedHandshake () {\r\n    // Create extended message object from registered extensions\r\n    const msg = Object.assign({}, this.extendedHandshake)\r\n    msg.m = {}\r\n    for (const ext in this.extendedMapping) {\r\n      const name = this.extendedMapping[ext]\r\n      msg.m[name] = Number(ext)\r\n    }\r\n\r\n    // Send extended handshake\r\n    this.extended(0, bencode.encode(msg))\r\n    this._extendedHandshakeSent = true\r\n  }\r\n\r\n  /**\r\n   * Message \"choke\": <len=0001><id=0>\r\n   */\r\n  choke () {\r\n    if (this.amChoking) return\r\n    this.amChoking = true\r\n    this._debug('choke')\r\n    this._push(MESSAGE_CHOKE)\r\n\r\n    if (this.hasFast) {\r\n      // BEP6: If a peer sends a choke, it MUST reject all requests from the peer to whom the choke\r\n      // was sent except it SHOULD NOT reject requests for pieces that are in the allowed fast set.\r\n      let allowedCount = 0\r\n      while (this.peerRequests.length > allowedCount) { // until only allowed requests are left\r\n        const request = this.peerRequests[allowedCount] // first non-allowed request\r\n        if (this.allowedFastSet.includes(request.piece)) {\r\n          ++allowedCount // count request as allowed\r\n        } else {\r\n          this.reject(request.piece, request.offset, request.length) // removes from this.peerRequests\r\n        }\r\n      }\r\n    } else {\r\n      while (this.peerRequests.length) {\r\n        this.peerRequests.pop()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Message \"unchoke\": <len=0001><id=1>\r\n   */\r\n  unchoke () {\r\n    if (!this.amChoking) return\r\n    this.amChoking = false\r\n    this._debug('unchoke')\r\n    this._push(MESSAGE_UNCHOKE)\r\n  }\r\n\r\n  /**\r\n   * Message \"interested\": <len=0001><id=2>\r\n   */\r\n  interested () {\r\n    if (this.amInterested) return\r\n    this.amInterested = true\r\n    this._debug('interested')\r\n    this._push(MESSAGE_INTERESTED)\r\n  }\r\n\r\n  /**\r\n   * Message \"uninterested\": <len=0001><id=3>\r\n   */\r\n  uninterested () {\r\n    if (!this.amInterested) return\r\n    this.amInterested = false\r\n    this._debug('uninterested')\r\n    this._push(MESSAGE_UNINTERESTED)\r\n  }\r\n\r\n  /**\r\n   * Message \"have\": <len=0005><id=4><piece index>\r\n   * @param  {number} index\r\n   */\r\n  have (index) {\r\n    this._debug('have %d', index)\r\n    this._message(4, [index], null)\r\n  }\r\n\r\n  /**\r\n   * Message \"bitfield\": <len=0001+X><id=5><bitfield>\r\n   * @param  {BitField|Buffer} bitfield\r\n   */\r\n  bitfield (bitfield) {\r\n    this._debug('bitfield')\r\n    if (!ArrayBuffer.isView(bitfield)) bitfield = bitfield.buffer\r\n    this._message(5, [], bitfield)\r\n  }\r\n\r\n  /**\r\n   * Message \"request\": <len=0013><id=6><index><begin><length>\r\n   * @param  {number}   index\r\n   * @param  {number}   offset\r\n   * @param  {number}   length\r\n   * @param  {function} cb\r\n   */\r\n  request (index, offset, length, cb) {\r\n    if (!cb) cb = () => {}\r\n    if (this._finished) return cb(new Error('wire is closed'))\r\n\r\n    if (this.peerChoking && !(this.hasFast && this.peerAllowedFastSet.includes(index))) {\r\n      return cb(new Error('peer is choking'))\r\n    }\r\n\r\n    this._debug('request index=%d offset=%d length=%d', index, offset, length)\r\n\r\n    this.requests.push(new Request(index, offset, length, cb))\r\n    if (!this._timeout) {\r\n      this._resetTimeout(true)\r\n    }\r\n    this._message(6, [index, offset, length], null)\r\n  }\r\n\r\n  /**\r\n   * Message \"piece\": <len=0009+X><id=7><index><begin><block>\r\n   * @param  {number} index\r\n   * @param  {number} offset\r\n   * @param  {Uint8Array} buffer\r\n   */\r\n  piece (index, offset, buffer) {\r\n    this._debug('piece index=%d offset=%d', index, offset)\r\n    this._message(7, [index, offset], buffer)\r\n    this.uploaded += buffer.length\r\n    this.uploadSpeed(buffer.length)\r\n    this.emit('upload', buffer.length)\r\n  }\r\n\r\n  /**\r\n   * Message \"cancel\": <len=0013><id=8><index><begin><length>\r\n   * @param  {number} index\r\n   * @param  {number} offset\r\n   * @param  {number} length\r\n   */\r\n  cancel (index, offset, length) {\r\n    this._debug('cancel index=%d offset=%d length=%d', index, offset, length)\r\n    this._callback(\r\n      this._pull(this.requests, index, offset, length),\r\n      new Error('request was cancelled'),\r\n      null\r\n    )\r\n    this._message(8, [index, offset, length], null)\r\n  }\r\n\r\n  /**\r\n   * Message: \"port\" <len=0003><id=9><listen-port>\r\n   * @param {Number} port\r\n   */\r\n  port (port) {\r\n    this._debug('port %d', port)\r\n    const message = new Uint8Array(MESSAGE_PORT)\r\n    const view = new DataView(message.buffer)\r\n    view.setUint16(5, port)\r\n    this._push(message)\r\n  }\r\n\r\n  /**\r\n   * Message: \"suggest\" <len=0x0005><id=0x0D><piece index> (BEP6)\r\n   * @param {number} index\r\n   */\r\n  suggest (index) {\r\n    if (!this.hasFast) throw Error('fast extension is disabled')\r\n    this._debug('suggest %d', index)\r\n    this._message(0x0D, [index], null)\r\n  }\r\n\r\n  /**\r\n   * Message: \"have-all\" <len=0x0001><id=0x0E> (BEP6)\r\n   */\r\n  haveAll () {\r\n    if (!this.hasFast) throw Error('fast extension is disabled')\r\n    this._debug('have-all')\r\n    this._push(MESSAGE_HAVE_ALL)\r\n  }\r\n\r\n  /**\r\n   * Message: \"have-none\" <len=0x0001><id=0x0F> (BEP6)\r\n   */\r\n  haveNone () {\r\n    if (!this.hasFast) throw Error('fast extension is disabled')\r\n    this._debug('have-none')\r\n    this._push(MESSAGE_HAVE_NONE)\r\n  }\r\n\r\n  /**\r\n   * Message \"reject\": <len=0x000D><id=0x10><index><offset><length> (BEP6)\r\n   * @param  {number}   index\r\n   * @param  {number}   offset\r\n   * @param  {number}   length\r\n   */\r\n  reject (index, offset, length) {\r\n    if (!this.hasFast) throw Error('fast extension is disabled')\r\n    this._debug('reject index=%d offset=%d length=%d', index, offset, length)\r\n    this._pull(this.peerRequests, index, offset, length)\r\n    this._message(0x10, [index, offset, length], null)\r\n  }\r\n\r\n  /**\r\n   * Message: \"allowed-fast\" <len=0x0005><id=0x11><piece index> (BEP6)\r\n   * @param {number} index\r\n   */\r\n  allowedFast (index) {\r\n    if (!this.hasFast) throw Error('fast extension is disabled')\r\n    this._debug('allowed-fast %d', index)\r\n    if (!this.allowedFastSet.includes(index)) this.allowedFastSet.push(index)\r\n    this._message(0x11, [index], null)\r\n  }\r\n\r\n  /**\r\n   * Message: \"extended\" <len=0005+X><id=20><ext-number><payload>\r\n   * @param  {number|string} ext\r\n   * @param  {Object} obj\r\n   */\r\n  extended (ext, obj) {\r\n    this._debug('extended ext=%s', ext)\r\n    if (typeof ext === 'string' && this.peerExtendedMapping[ext]) {\r\n      ext = this.peerExtendedMapping[ext]\r\n    }\r\n    if (typeof ext === 'number') {\r\n      const extId = new Uint8Array([ext])\r\n      const buf = ArrayBuffer.isView(obj) ? obj : bencode.encode(obj)\r\n\r\n      this._message(20, [], concat([extId, buf]))\r\n    } else {\r\n      throw new Error(`Unrecognized extension: ${ext}`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the encryption method for this wire, as per PSE/ME specification\r\n   *\r\n   * @param {string} sharedSecret:  A hex-encoded string, which is the shared secret agreed\r\n   *                                upon from DH key exchange\r\n   * @param {string} infoHash:  A hex-encoded info hash\r\n   * @returns boolean, true if encryption setting succeeds, false if it fails.\r\n   */\r\n  async setEncrypt (sharedSecret, infoHash) {\r\n    let encryptKeyBuf\r\n    let encryptKeyIntArray\r\n    let decryptKeyBuf\r\n    let decryptKeyIntArray\r\n    switch (this.type) {\r\n      case 'tcpIncoming':\r\n        encryptKeyBuf = await hash(hex2arr(this._utfToHex('keyB') + sharedSecret + infoHash))\r\n        decryptKeyBuf = await hash(hex2arr(this._utfToHex('keyA') + sharedSecret + infoHash))\r\n        encryptKeyIntArray = []\r\n        for (const value of encryptKeyBuf.values()) {\r\n          encryptKeyIntArray.push(value)\r\n        }\r\n        decryptKeyIntArray = []\r\n        for (const value of decryptKeyBuf.values()) {\r\n          decryptKeyIntArray.push(value)\r\n        }\r\n        this._encryptGenerator = new RC4(encryptKeyIntArray)\r\n        this._decryptGenerator = new RC4(decryptKeyIntArray)\r\n        break\r\n      case 'tcpOutgoing':\r\n        encryptKeyBuf = await hash(hex2arr(this._utfToHex('keyA') + sharedSecret + infoHash))\r\n        decryptKeyBuf = await hash(hex2arr(this._utfToHex('keyB') + sharedSecret + infoHash))\r\n        encryptKeyIntArray = []\r\n        for (const value of encryptKeyBuf.values()) {\r\n          encryptKeyIntArray.push(value)\r\n        }\r\n        decryptKeyIntArray = []\r\n        for (const value of decryptKeyBuf.values()) {\r\n          decryptKeyIntArray.push(value)\r\n        }\r\n        this._encryptGenerator = new RC4(encryptKeyIntArray)\r\n        this._decryptGenerator = new RC4(decryptKeyIntArray)\r\n        break\r\n      default:\r\n        return false\r\n    }\r\n\r\n    // Discard the first 1024 bytes, as per MSE/PE implementation\r\n    for (let i = 0; i < 1024; i++) {\r\n      this._encryptGenerator.randomByte()\r\n      this._decryptGenerator.randomByte()\r\n    }\r\n\r\n    this._setGenerators = true\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Send a message to the remote peer.\r\n   */\r\n  _message (id, numbers, data) {\r\n    const dataLength = data ? data.length : 0\r\n    const buffer = new Uint8Array(5 + (4 * numbers.length))\r\n    const view = new DataView(buffer.buffer)\r\n\r\n    view.setUint32(0, buffer.length + dataLength - 4)\r\n    buffer[4] = id\r\n    for (let i = 0; i < numbers.length; i++) {\r\n      view.setUint32(5 + (4 * i), numbers[i])\r\n    }\r\n\r\n    this._push(buffer)\r\n    if (data) this._push(data)\r\n  }\r\n\r\n  _push (data) {\r\n    if (this._finished) return\r\n    if (this._encryptionMethod === 2 && this._cryptoHandshakeDone) {\r\n      data = this._encrypt(data)\r\n    }\r\n    return this.push(data)\r\n  }\r\n\r\n  //\r\n  // INCOMING MESSAGES\r\n  //\r\n\r\n  _onKeepAlive () {\r\n    this._debug('got keep-alive')\r\n    this.emit('keep-alive')\r\n  }\r\n\r\n  _onPe1 (pubKeyBuffer) {\r\n    this._peerPubKey = arr2hex(pubKeyBuffer)\r\n    this._sharedSecret = this._dh.computeSecret(this._peerPubKey, 'hex', 'hex')\r\n    this.emit('pe1')\r\n  }\r\n\r\n  _onPe2 (pubKeyBuffer) {\r\n    this._peerPubKey = arr2hex(pubKeyBuffer)\r\n    this._sharedSecret = this._dh.computeSecret(this._peerPubKey, 'hex', 'hex')\r\n    this.emit('pe2')\r\n  }\r\n\r\n  async _onPe3 (hashesXorBuffer) {\r\n    const hash3 = await (arr2hex(this._utfToHex('req3') + this._sharedSecret))\r\n    const sKeyHash = arr2hex(xor(hash3, hashesXorBuffer))\r\n    this.emit('pe3', sKeyHash)\r\n  }\r\n\r\n  _onPe3Encrypted (vcBuffer, peerProvideBuffer) {\r\n    if (!equal(vcBuffer, VC)) {\r\n      this._debug('Error: verification constant did not match')\r\n      this.destroy()\r\n      return\r\n    }\r\n\r\n    for (const provideByte of peerProvideBuffer.values()) {\r\n      if (provideByte !== 0) {\r\n        this._peerCryptoProvide.push(provideByte)\r\n      }\r\n    }\r\n    if (this._peerCryptoProvide.includes(2)) {\r\n      this._encryptionMethod = 2\r\n    } else {\r\n      this._debug('Error: RC4 encryption method not provided by peer')\r\n      this.destroy()\r\n    }\r\n  }\r\n\r\n  _onPe4 (peerSelectBuffer) {\r\n    this._encryptionMethod = peerSelectBuffer[3]\r\n    if (!CRYPTO_PROVIDE.includes(this._encryptionMethod)) {\r\n      this._debug('Error: peer selected invalid crypto method')\r\n      this.destroy()\r\n    }\r\n    this._cryptoHandshakeDone = true\r\n    this._debug('crypto handshake done')\r\n    this.emit('pe4')\r\n  }\r\n\r\n  _onHandshake (infoHashBuffer, peerIdBuffer, extensions) {\r\n    const infoHash = arr2hex(infoHashBuffer)\r\n    const peerId = arr2hex(peerIdBuffer)\r\n\r\n    this._debug('got handshake i=%s p=%s exts=%o', infoHash, peerId, extensions)\r\n\r\n    this.peerId = peerId\r\n    this.peerIdBuffer = peerIdBuffer\r\n    this.peerExtensions = extensions\r\n\r\n    // BEP6 Fast Extension: The extension is enabled only if both ends of the connection set this bit.\r\n    if (this.extensions.fast && this.peerExtensions.fast) {\r\n      this._debug('fast extension is enabled')\r\n      this.hasFast = true\r\n    }\r\n\r\n    this.emit('handshake', infoHash, peerId, extensions)\r\n\r\n    for (const name in this._ext) {\r\n      this._ext[name].onHandshake(infoHash, peerId, extensions)\r\n    }\r\n\r\n    if (extensions.extended && this._handshakeSent &&\r\n        !this._extendedHandshakeSent) {\r\n      // outgoing connection\r\n      this._sendExtendedHandshake()\r\n    }\r\n  }\r\n\r\n  _onChoke () {\r\n    this.peerChoking = true\r\n    this._debug('got choke')\r\n    this.emit('choke')\r\n    if (!this.hasFast) {\r\n      // BEP6 Fast Extension: Choke no longer implicitly rejects all pending requests\r\n      while (this.requests.length) {\r\n        this._callback(this.requests.pop(), new Error('peer is choking'), null)\r\n      }\r\n    }\r\n  }\r\n\r\n  _onUnchoke () {\r\n    this.peerChoking = false\r\n    this._debug('got unchoke')\r\n    this.emit('unchoke')\r\n  }\r\n\r\n  _onInterested () {\r\n    this.peerInterested = true\r\n    this._debug('got interested')\r\n    this.emit('interested')\r\n  }\r\n\r\n  _onUninterested () {\r\n    this.peerInterested = false\r\n    this._debug('got uninterested')\r\n    this.emit('uninterested')\r\n  }\r\n\r\n  _onHave (index) {\r\n    if (this.peerPieces.get(index)) return\r\n    this._debug('got have %d', index)\r\n\r\n    this.peerPieces.set(index, true)\r\n    this.emit('have', index)\r\n  }\r\n\r\n  _onBitField (buffer) {\r\n    this.peerPieces = new BitField(buffer)\r\n    this._debug('got bitfield')\r\n    this.emit('bitfield', this.peerPieces)\r\n  }\r\n\r\n  _onRequest (index, offset, length) {\r\n    if (this.amChoking && !(this.hasFast && this.allowedFastSet.includes(index))) {\r\n      // BEP6: If a peer receives a request from a peer its choking, the peer receiving\r\n      // the request SHOULD send a reject unless the piece is in the allowed fast set.\r\n      if (this.hasFast) this.reject(index, offset, length)\r\n      return\r\n    }\r\n    this._debug('got request index=%d offset=%d length=%d', index, offset, length)\r\n\r\n    const respond = (err, buffer) => {\r\n      if (request !== this._pull(this.peerRequests, index, offset, length)) return\r\n      if (err) {\r\n        this._debug('error satisfying request index=%d offset=%d length=%d (%s)', index, offset, length, err.message)\r\n        if (this.hasFast) this.reject(index, offset, length)\r\n        return\r\n      }\r\n      this.piece(index, offset, buffer)\r\n    }\r\n\r\n    const request = new Request(index, offset, length, respond)\r\n    this.peerRequests.push(request)\r\n    this.emit('request', index, offset, length, respond)\r\n  }\r\n\r\n  _onPiece (index, offset, buffer) {\r\n    this._debug('got piece index=%d offset=%d', index, offset)\r\n    this._callback(this._pull(this.requests, index, offset, buffer.length), null, buffer)\r\n    this.downloaded += buffer.length\r\n    this.downloadSpeed(buffer.length)\r\n    this.emit('download', buffer.length)\r\n    this.emit('piece', index, offset, buffer)\r\n  }\r\n\r\n  _onCancel (index, offset, length) {\r\n    this._debug('got cancel index=%d offset=%d length=%d', index, offset, length)\r\n    this._pull(this.peerRequests, index, offset, length)\r\n    this.emit('cancel', index, offset, length)\r\n  }\r\n\r\n  _onPort (port) {\r\n    this._debug('got port %d', port)\r\n    this.emit('port', port)\r\n  }\r\n\r\n  _onSuggest (index) {\r\n    if (!this.hasFast) {\r\n      // BEP6: the peer MUST close the connection\r\n      this._debug('Error: got suggest whereas fast extension is disabled')\r\n      this.destroy()\r\n      return\r\n    }\r\n    this._debug('got suggest %d', index)\r\n    this.emit('suggest', index)\r\n  }\r\n\r\n  _onHaveAll () {\r\n    if (!this.hasFast) {\r\n      // BEP6: the peer MUST close the connection\r\n      this._debug('Error: got have-all whereas fast extension is disabled')\r\n      this.destroy()\r\n      return\r\n    }\r\n    this._debug('got have-all')\r\n    this.peerPieces = new HaveAllBitField()\r\n    this.emit('have-all')\r\n  }\r\n\r\n  _onHaveNone () {\r\n    if (!this.hasFast) {\r\n      // BEP6: the peer MUST close the connection\r\n      this._debug('Error: got have-none whereas fast extension is disabled')\r\n      this.destroy()\r\n      return\r\n    }\r\n    this._debug('got have-none')\r\n    this.emit('have-none')\r\n  }\r\n\r\n  _onReject (index, offset, length) {\r\n    if (!this.hasFast) {\r\n      // BEP6: the peer MUST close the connection\r\n      this._debug('Error: got reject whereas fast extension is disabled')\r\n      this.destroy()\r\n      return\r\n    }\r\n    this._debug('got reject index=%d offset=%d length=%d', index, offset, length)\r\n    this._callback(\r\n      this._pull(this.requests, index, offset, length),\r\n      new Error('request was rejected'),\r\n      null\r\n    )\r\n    this.emit('reject', index, offset, length)\r\n  }\r\n\r\n  _onAllowedFast (index) {\r\n    if (!this.hasFast) {\r\n      // BEP6: the peer MUST close the connection\r\n      this._debug('Error: got allowed-fast whereas fast extension is disabled')\r\n      this.destroy()\r\n      return\r\n    }\r\n    this._debug('got allowed-fast %d', index)\r\n    if (!this.peerAllowedFastSet.includes(index)) this.peerAllowedFastSet.push(index)\r\n    if (this.peerAllowedFastSet.length > ALLOWED_FAST_SET_MAX_LENGTH) this.peerAllowedFastSet.shift()\r\n    this.emit('allowed-fast', index)\r\n  }\r\n\r\n  _onExtended (ext, buf) {\r\n    if (ext === 0) {\r\n      let info\r\n      try {\r\n        info = bencode.decode(buf)\r\n      } catch (err) {\r\n        this._debug('ignoring invalid extended handshake: %s', err.message || err)\r\n      }\r\n\r\n      if (!info) return\r\n      this.peerExtendedHandshake = info\r\n\r\n      if (typeof info.m === 'object') {\r\n        for (const name in info.m) {\r\n          this.peerExtendedMapping[name] = Number(info.m[name].toString())\r\n        }\r\n      }\r\n      for (const name in this._ext) {\r\n        if (this.peerExtendedMapping[name]) {\r\n          this._ext[name].onExtendedHandshake(this.peerExtendedHandshake)\r\n        }\r\n      }\r\n      this._debug('got extended handshake')\r\n      this.emit('extended', 'handshake', this.peerExtendedHandshake)\r\n    } else {\r\n      if (this.extendedMapping[ext]) {\r\n        ext = this.extendedMapping[ext] // friendly name for extension\r\n        if (this._ext[ext]) {\r\n          // there is an registered extension handler, so call it\r\n          this._ext[ext].onMessage(buf)\r\n        }\r\n      }\r\n      this._debug('got extended message ext=%s', ext)\r\n      this.emit('extended', ext, buf)\r\n    }\r\n  }\r\n\r\n  _onTimeout () {\r\n    this._debug('request timed out')\r\n    this._callback(this.requests.shift(), new Error('request has timed out'), null)\r\n    this.emit('timeout')\r\n  }\r\n\r\n  /**\r\n   * Duplex stream method. Called whenever the remote peer has data for us. Data that the\r\n   * remote peer sends gets buffered (i.e. not actually processed) until the right number\r\n   * of bytes have arrived, determined by the last call to `this._parse(number, callback)`.\r\n   * Once enough bytes have arrived to process the message, the callback function\r\n   * (i.e. `this._parser`) gets called with the full buffer of data.\r\n   * @param  {Uint8Array} data\r\n   * @param  {function} cb\r\n   */\r\n  _write (data, cb) {\r\n    if (this._encryptionMethod === 2 && this._cryptoHandshakeDone) {\r\n      data = this._decrypt(data)\r\n    }\r\n    this._bufferSize += data.length\r\n    this._buffer.push(data)\r\n    if (this._buffer.length > 1) {\r\n      this._buffer = [concat(this._buffer, this._bufferSize)]\r\n    }\r\n    // now this._buffer is an array containing a single Buffer\r\n    if (this._cryptoSyncPattern) {\r\n      const index = this._buffer[0].indexOf(this._cryptoSyncPattern)\r\n      if (index !== -1) {\r\n        this._buffer[0] = this._buffer[0].slice(index + this._cryptoSyncPattern.length)\r\n        this._bufferSize -= (index + this._cryptoSyncPattern.length)\r\n        this._cryptoSyncPattern = null\r\n      } else if (this._bufferSize + data.length > this._waitMaxBytes + this._cryptoSyncPattern.length) {\r\n        this._debug('Error: could not resynchronize')\r\n        this.destroy()\r\n        return\r\n      }\r\n    }\r\n\r\n    while (this._bufferSize >= this._parserSize && !this._cryptoSyncPattern) {\r\n      if (this._parserSize === 0) {\r\n        this._parser(new Uint8Array())\r\n      } else {\r\n        const buffer = this._buffer[0]\r\n        // console.log('buffer:', this._buffer)\r\n        this._bufferSize -= this._parserSize\r\n        this._buffer = this._bufferSize\r\n          ? [buffer.slice(this._parserSize)]\r\n          : []\r\n        this._parser(buffer.slice(0, this._parserSize))\r\n      }\r\n    }\r\n\r\n    cb(null) // Signal that we're ready for more data\r\n  }\r\n\r\n  _callback (request, err, buffer) {\r\n    if (!request) return\r\n\r\n    this._resetTimeout(!this.peerChoking && !this._finished)\r\n\r\n    request.callback(err, buffer)\r\n  }\r\n\r\n  _resetTimeout (setAgain) {\r\n    if (!setAgain || !this._timeoutMs || !this.requests.length) {\r\n      clearTimeout(this._timeout)\r\n      this._timeout = null\r\n      this._timeoutExpiresAt = null\r\n      return\r\n    }\r\n\r\n    const timeoutExpiresAt = Date.now() + this._timeoutMs\r\n\r\n    if (this._timeout) {\r\n      // If existing expiration is already within 5% of correct, it's close enough\r\n      if (timeoutExpiresAt - this._timeoutExpiresAt < this._timeoutMs * 0.05) {\r\n        return\r\n      }\r\n      clearTimeout(this._timeout)\r\n    }\r\n\r\n    this._timeoutExpiresAt = timeoutExpiresAt\r\n    this._timeout = setTimeout(() => this._onTimeout(), this._timeoutMs)\r\n    if (this._timeoutUnref && this._timeout.unref) this._timeout.unref()\r\n  }\r\n\r\n  /**\r\n   * Takes a number of bytes that the local peer is waiting to receive from the remote peer\r\n   * in order to parse a complete message, and a callback function to be called once enough\r\n   * bytes have arrived.\r\n   * @param  {number} size\r\n   * @param  {function} parser\r\n   */\r\n  _parse (size, parser) {\r\n    this._parserSize = size\r\n    this._parser = parser\r\n  }\r\n\r\n  _parseUntil (pattern, maxBytes) {\r\n    this._cryptoSyncPattern = pattern\r\n    this._waitMaxBytes = maxBytes\r\n  }\r\n\r\n  /**\r\n   * Handle the first 4 bytes of a message, to determine the length of bytes that must be\r\n   * waited for in order to have the whole message.\r\n   * @param  {Uint8Array} buffer\r\n   */\r\n  _onMessageLength (buffer) {\r\n    const length = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength).getUint32(0)\r\n    if (length > 0) {\r\n      this._parse(length, this._onMessage)\r\n    } else {\r\n      this._onKeepAlive()\r\n      this._parse(4, this._onMessageLength)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a message from the remote peer.\r\n   * @param  {Uint8Array} buffer\r\n   */\r\n  _onMessage (buffer) {\r\n    this._parse(4, this._onMessageLength)\r\n    const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\r\n    switch (buffer[0]) {\r\n      case 0:\r\n        return this._onChoke()\r\n      case 1:\r\n        return this._onUnchoke()\r\n      case 2:\r\n        return this._onInterested()\r\n      case 3:\r\n        return this._onUninterested()\r\n      case 4:\r\n        return this._onHave(view.getUint32(1))\r\n      case 5:\r\n        return this._onBitField(buffer.slice(1))\r\n      case 6:\r\n        return this._onRequest(\r\n          view.getUint32(1),\r\n          view.getUint32(5),\r\n          view.getUint32(9)\r\n        )\r\n      case 7:\r\n        return this._onPiece(\r\n          view.getUint32(1),\r\n          view.getUint32(5),\r\n          buffer.slice(9)\r\n        )\r\n      case 8:\r\n        return this._onCancel(\r\n          view.getUint32(1),\r\n          view.getUint32(5),\r\n          view.getUint32(9)\r\n        )\r\n      case 9:\r\n        return this._onPort(view.getUint16(1))\r\n      case 0x0D:\r\n        return this._onSuggest(view.getUint32(1))\r\n      case 0x0E:\r\n        return this._onHaveAll()\r\n      case 0x0F:\r\n        return this._onHaveNone()\r\n      case 0x10:\r\n        return this._onReject(\r\n          view.getUint32(1),\r\n          view.getUint32(5),\r\n          view.getUint32(9)\r\n        )\r\n      case 0x11:\r\n        return this._onAllowedFast(view.getUint32(1))\r\n      case 20:\r\n        return this._onExtended(buffer[1], buffer.slice(2))\r\n      default:\r\n        this._debug('got unknown message')\r\n        return this.emit('unknownmessage', buffer)\r\n    }\r\n  }\r\n\r\n  _determineHandshakeType () {\r\n    this._parse(1, pstrLenBuffer => {\r\n      const pstrlen = pstrLenBuffer[0]\r\n      if (pstrlen === 19) {\r\n        this._parse(pstrlen + 48, this._onHandshakeBuffer)\r\n      } else {\r\n        this._parsePe1(pstrLenBuffer)\r\n      }\r\n    })\r\n  }\r\n\r\n  _parsePe1 (pubKeyPrefix) {\r\n    this._parse(95, pubKeySuffix => {\r\n      this._onPe1(concat([pubKeyPrefix, pubKeySuffix]))\r\n      this._parsePe3()\r\n    })\r\n  }\r\n\r\n  _parsePe2 () {\r\n    this._parse(96, pubKey => {\r\n      this._onPe2(pubKey)\r\n      while (!this._setGenerators) {\r\n        // Wait until generators have been set\r\n      }\r\n      this._parsePe4()\r\n    })\r\n  }\r\n\r\n  // Handles the unencrypted portion of step 4\r\n  async _parsePe3 () {\r\n    const hash1Buffer = await hash(hex2arr(this._utfToHex('req1') + this._sharedSecret))\r\n    // synchronize on HASH('req1', S)\r\n    this._parseUntil(hash1Buffer, 512)\r\n    this._parse(20, buffer => {\r\n      this._onPe3(buffer)\r\n      while (!this._setGenerators) {\r\n        // Wait until generators have been set\r\n      }\r\n      this._parsePe3Encrypted()\r\n    })\r\n  }\r\n\r\n  _parsePe3Encrypted () {\r\n    this._parse(14, buffer => {\r\n      const vcBuffer = this._decryptHandshake(buffer.slice(0, 8))\r\n      const peerProvideBuffer = this._decryptHandshake(buffer.slice(8, 12))\r\n      const padCLen = new DataView(this._decryptHandshake(buffer.slice(12, 14)).buffer).getUint16(0)\r\n      this._parse(padCLen, padCBuffer => {\r\n        padCBuffer = this._decryptHandshake(padCBuffer)\r\n        this._parse(2, iaLenBuf => {\r\n          const iaLen = new DataView(this._decryptHandshake(iaLenBuf).buffer).getUint16(0)\r\n          this._parse(iaLen, iaBuffer => {\r\n            iaBuffer = this._decryptHandshake(iaBuffer)\r\n            this._onPe3Encrypted(vcBuffer, peerProvideBuffer, padCBuffer, iaBuffer)\r\n            const pstrlen = iaLen ? iaBuffer[0] : null\r\n            const protocol = iaLen ? iaBuffer.slice(1, 20) : null\r\n            if (pstrlen === 19 && arr2text(protocol) === 'BitTorrent protocol') {\r\n              this._onHandshakeBuffer(iaBuffer.slice(1))\r\n            } else {\r\n              this._parseHandshake()\r\n            }\r\n          })\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  _parsePe4 () {\r\n    // synchronize on ENCRYPT(VC).\r\n    // since we encrypt using bitwise xor, decryption and encryption are the same operation.\r\n    // calling _decryptHandshake here advances the decrypt generator keystream forward 8 bytes\r\n    const vcBufferEncrypted = this._decryptHandshake(VC)\r\n    this._parseUntil(vcBufferEncrypted, 512)\r\n    this._parse(6, buffer => {\r\n      const peerSelectBuffer = this._decryptHandshake(buffer.slice(0, 4))\r\n      const padDLen = new DataView(this._decryptHandshake(buffer.slice(4, 6)).buffer).getUint16(0)\r\n      this._parse(padDLen, padDBuf => {\r\n        this._decryptHandshake(padDBuf)\r\n        this._onPe4(peerSelectBuffer)\r\n        this._parseHandshake(null)\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Reads the handshake as specified by the bittorrent wire protocol.\r\n   */\r\n  _parseHandshake () {\r\n    this._parse(1, buffer => {\r\n      const pstrlen = buffer[0]\r\n      if (pstrlen !== 19) {\r\n        this._debug('Error: wire not speaking BitTorrent protocol (%s)', pstrlen.toString())\r\n        this.end()\r\n        return\r\n      }\r\n      this._parse(pstrlen + 48, this._onHandshakeBuffer)\r\n    })\r\n  }\r\n\r\n  _onHandshakeBuffer (handshake) {\r\n    const protocol = handshake.slice(0, 19)\r\n    if (arr2text(protocol) !== 'BitTorrent protocol') {\r\n      this._debug('Error: wire not speaking BitTorrent protocol (%s)', arr2text(protocol))\r\n      this.end()\r\n      return\r\n    }\r\n    handshake = handshake.slice(19)\r\n    this._onHandshake(handshake.slice(8, 28), handshake.slice(28, 48), {\r\n      dht: !!(handshake[7] & 0x01), // see bep_0005\r\n      fast: !!(handshake[7] & 0x04), // see bep_0006\r\n      extended: !!(handshake[5] & 0x10) // see bep_0010\r\n    })\r\n    this._parse(4, this._onMessageLength)\r\n  }\r\n\r\n  _onFinish () {\r\n    this._finished = true\r\n\r\n    this.push(null) // stream cannot be half open, so signal the end of it\r\n    while (this.read()) {\r\n      // body intentionally empty\r\n      // consume and discard the rest of the stream data\r\n    }\r\n\r\n    clearInterval(this._keepAliveInterval)\r\n    this._parse(Number.MAX_VALUE, () => {})\r\n    while (this.peerRequests.length) {\r\n      this.peerRequests.pop()\r\n    }\r\n    while (this.requests.length) {\r\n      this._callback(this.requests.pop(), new Error('wire was closed'), null)\r\n    }\r\n  }\r\n\r\n  _debug (...args) {\r\n    args[0] = `[${this._debugId}] ${args[0]}`\r\n    debug(...args)\r\n  }\r\n\r\n  _pull (requests, piece, offset, length) {\r\n    for (let i = 0; i < requests.length; i++) {\r\n      const req = requests[i]\r\n      if (req.piece === piece && req.offset === offset && req.length === length) {\r\n        arrayRemove(requests, i)\r\n        return req\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  _encryptHandshake (buf) {\r\n    const crypt = new Uint8Array(buf)\r\n    if (!this._encryptGenerator) {\r\n      this._debug('Warning: Encrypting without any generator')\r\n      return crypt\r\n    }\r\n\r\n    for (let i = 0; i < buf.length; i++) {\r\n      const keystream = this._encryptGenerator.randomByte()\r\n      crypt[i] = crypt[i] ^ keystream\r\n    }\r\n\r\n    return crypt\r\n  }\r\n\r\n  _encrypt (buf) {\r\n    const crypt = new Uint8Array(buf)\r\n\r\n    if (!this._encryptGenerator || this._encryptionMethod !== 2) {\r\n      return crypt\r\n    }\r\n    for (let i = 0; i < buf.length; i++) {\r\n      const keystream = this._encryptGenerator.randomByte()\r\n      crypt[i] = crypt[i] ^ keystream\r\n    }\r\n\r\n    return crypt\r\n  }\r\n\r\n  _decryptHandshake (buf) {\r\n    const decrypt = new Uint8Array(buf)\r\n\r\n    if (!this._decryptGenerator) {\r\n      this._debug('Warning: Decrypting without any generator')\r\n      return decrypt\r\n    }\r\n    for (let i = 0; i < buf.length; i++) {\r\n      const keystream = this._decryptGenerator.randomByte()\r\n      decrypt[i] = decrypt[i] ^ keystream\r\n    }\r\n\r\n    return decrypt\r\n  }\r\n\r\n  _decrypt (buf) {\r\n    const decrypt = new Uint8Array(buf)\r\n\r\n    if (!this._decryptGenerator || this._encryptionMethod !== 2) {\r\n      return decrypt\r\n    }\r\n    for (let i = 0; i < buf.length; i++) {\r\n      const keystream = this._decryptGenerator.randomByte()\r\n      decrypt[i] = decrypt[i] ^ keystream\r\n    }\r\n\r\n    return decrypt\r\n  }\r\n\r\n  _utfToHex (str) {\r\n    return arr2hex(text2arr(str))\r\n  }\r\n}\r\n\r\nexport default Wire\r\n"],
  "mappings": "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",
  "names": ["EventEmitter", "TextDecoder", "data", "Duplex", "Transform", "pipeline", "onerror", "hash", "debug", "self", "RC4", "import_streamx", "import_unordered_array_remove", "import_debug", "i", "encode", "decode", "encodingLength", "Debug", "throughput", "crypto", "RC4", "arrayRemove", "debug", "debugFactory", "EventEmitter", "self", "arrayRemove"]
}
