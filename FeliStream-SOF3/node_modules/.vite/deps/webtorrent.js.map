{
  "version": 3,
  "sources": ["browser-external:path", "../../block-iterator/index.js", "../../piece-length/index.js", "browser-external:is-file", "../../join-async-iterator/index.js", "../../queue-microtask/index.js", "../../run-parallel/index.js", "browser-external:bittorrent-dht", "browser-external:load-ip-set", "browser-external:fs", "../../err-code/index.js", "../../speed-limiter/lib/utils.js", "../../limiter/lib/tokenBucket.js", "../../limiter/lib/clock.js", "../../limiter/lib/rateLimiter.js", "../../limiter/index.js", "../../speed-limiter/lib/throttle-group.js", "../../speed-limiter/lib/throttle.js", "../../speed-limiter/index.js", "browser-external:@silentbot1/nat-api", "browser-external:net", "browser-external:os", "../../inherits/inherits_browser.js", "../../lru/index.js", "../../cache-chunk-store/index.js", "../../cpus/browser.js", "../../base64-js/index.js", "../../ieee754/index.js", "../../buffer/index.js", "../../safe-buffer/index.js", "../../randombytes/browser.js", "../../k-bucket/index.js", "browser-external:dgram", "../../k-rpc-socket/node_modules/bencode/lib/util.js", "../../k-rpc-socket/node_modules/bencode/lib/encode.js", "../../k-rpc-socket/node_modules/bencode/lib/decode.js", "../../k-rpc-socket/node_modules/bencode/lib/encoding-length.js", "../../k-rpc-socket/node_modules/bencode/lib/index.js", "browser-external:dns", "browser-external:util", "../../k-rpc-socket/index.js", "../../k-rpc/index.js", "../../last-one-wins/index.js", "../../b4a/lib/ascii.js", "../../b4a/lib/base64.js", "../../b4a/lib/hex.js", "../../b4a/lib/utf8.js", "../../b4a/lib/utf16le.js", "../../b4a/browser.js", "../../record-cache/index.js", "../../wrappy/wrappy.js", "../../once/once.js", "browser-external:ws", "browser-external:bittorrent-lsd", "../../immediate-chunk-store/index.js", "../../memory-chunk-store/index.js", "../../run-parallel-limit/index.js", "../../random-iterate/index.js", "browser-external:ut_pex", "../../mime/Mime.js", "../../mime/types/standard.js", "../../mime/lite.js", "../../webtorrent/package.json", "../../webtorrent/version.cjs", "browser-external:http", "../../escape-html/index.js", "../../end-of-stream/index.js", "../../pump/index.js", "../../range-parser/index.js", "../../webtorrent/index.js", "../../create-torrent/index.js", "../../junk/index.js", "../../fast-readable-async-iterator/index.js", "../../parse-torrent/index.js", "../../cross-fetch-ponyfill/browser.js", "../../@thaunknown/thirty-two/lib/thirty-two/index.js", "../../bep53-range/index.js", "../../magnet-uri/index.js", "../../@thaunknown/simple-peer/lite.js", "../../webrtc-polyfill/browser.js", "../../webtorrent/lib/torrent.js", "../../addr-to-ip-port/index.js", "../../chunk-store-iterator/index.js", "../../torrent-discovery/index.js", "../../bittorrent-dht/client.js", "../../bittorrent-tracker/client.js", "../../bittorrent-tracker/lib/common.js", "../../bittorrent-tracker/lib/client/websocket-tracker.js", "../../@thaunknown/simple-websocket/index.js", "../../bittorrent-tracker/lib/client/tracker.js", "../../bittorrent-tracker/index.js", "../../filename-reserved-regex/index.js", "../../fsa-chunk-store/createWritable.js", "../../fsa-chunk-store/index.js", "../../lt_donthave/index.js", "../../torrent-piece/index.js", "../../ut_metadata/index.js", "../../webtorrent/lib/file.js", "../../webtorrent/lib/file-iterator.js", "../../webtorrent/lib/rarity-map.js", "../../webtorrent/lib/webconn.js", "../../webtorrent/lib/selections.js", "../../webtorrent/lib/server.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"path\" has been externalized for browser compatibility. Cannot access \"path.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "function concat (chunks, size) {\r\n  if (typeof chunks[0] === 'string') return chunks.join('')\r\n  if (typeof chunks[0] === 'number') return new Uint8Array(chunks)\r\n  const b = new Uint8Array(size)\r\n  let offset = 0\r\n  for (let i = 0, l = chunks.length; i < l; i++) {\r\n    const chunk = chunks[i]\r\n    b.set(chunk, offset)\r\n    offset += chunk.byteLength || chunk.length\r\n  }\r\n\r\n  return b\r\n}\r\n\r\nmodule.exports = async function * (iterator, size = 512, opts = {}) {\r\n  if (typeof size === 'object') {\r\n    opts = size\r\n    size = opts.size\r\n  }\r\n  let { nopad, zeroPadding = true } = opts\r\n\r\n  if (nopad) zeroPadding = false\r\n\r\n  let buffered = []\r\n  let bufferedBytes = 0\r\n\r\n  for await (const value of iterator) {\r\n    bufferedBytes += value.byteLength || value.length || 1\r\n    buffered.push(value)\r\n\r\n    if (bufferedBytes >= size) {\r\n      const b = concat(buffered, bufferedBytes)\r\n      let offset = 0\r\n\r\n      while (bufferedBytes >= size) {\r\n        yield b.slice(offset, offset + size)\r\n        bufferedBytes -= size\r\n        offset += size\r\n      }\r\n\r\n      buffered = [b.slice(offset, b.length)]\r\n    }\r\n  }\r\n  if (bufferedBytes) yield concat(buffered, zeroPadding ? size : bufferedBytes)\r\n}\r\n", "module.exports = length\n\nfunction length (bytes) {\n  return Math.max(16384, 1 << Math.log2(bytes < 1024 ? 1 : bytes / 1024) + 0.5 | 0)\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"is-file\" has been externalized for browser compatibility. Cannot access \"is-file.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = async function * (iterators) {\r\n  for (let iterator of iterators) {\r\n    // can be lazy functions returning streams\r\n    if (typeof iterator === 'function') iterator = iterator()\r\n    yield * iterator\r\n  }\r\n}\r\n", "/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n", "/*! run-parallel. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = runParallel\n\nconst queueMicrotask = require('queue-microtask')\n\nfunction runParallel (tasks, cb) {\n  let results, pending, keys\n  let isSync = true\n\n  if (Array.isArray(tasks)) {\n    results = []\n    pending = tasks.length\n  } else {\n    keys = Object.keys(tasks)\n    results = {}\n    pending = keys.length\n  }\n\n  function done (err) {\n    function end () {\n      if (cb) cb(err, results)\n      cb = null\n    }\n    if (isSync) queueMicrotask(end)\n    else end()\n  }\n\n  function each (i, err, result) {\n    results[i] = result\n    if (--pending === 0 || err) {\n      done(err)\n    }\n  }\n\n  if (!pending) {\n    // empty\n    done(null)\n  } else if (keys) {\n    // object\n    keys.forEach(function (key) {\n      tasks[key](function (err, result) { each(key, err, result) })\n    })\n  } else {\n    // array\n    tasks.forEach(function (task, i) {\n      task(function (err, result) { each(i, err, result) })\n    })\n  }\n\n  isSync = false\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"bittorrent-dht\" has been externalized for browser compatibility. Cannot access \"bittorrent-dht.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"load-ip-set\" has been externalized for browser compatibility. Cannot access \"load-ip-set.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n", "function wait (time) {\n  return new Promise((resolve) => setTimeout(resolve, time))\n}\n\nmodule.exports = {\n  wait\n}\n", "\r\n/**\r\n * A hierarchical token bucket for rate limiting. See\r\n * http://en.wikipedia.org/wiki/Token_bucket for more information.\r\n * @author John Hurliman <jhurliman@cull.tv>\r\n *\r\n * @param {Number} bucketSize Maximum number of tokens to hold in the bucket.\r\n *  Also known as the burst rate.\r\n * @param {Number} tokensPerInterval Number of tokens to drip into the bucket\r\n *  over the course of one interval.\r\n * @param {String|Number} interval The interval length in milliseconds, or as\r\n *  one of the following strings: 'second', 'minute', 'hour', day'.\r\n * @param {TokenBucket} parentBucket Optional. A token bucket that will act as\r\n *  the parent of this bucket.\r\n */\r\nvar TokenBucket = function(bucketSize, tokensPerInterval, interval, parentBucket) {\r\n  this.bucketSize = bucketSize;\r\n  this.tokensPerInterval = tokensPerInterval;\r\n\r\n  if (typeof interval === 'string') {\r\n    switch (interval) {\r\n      case 'sec': case 'second':\r\n        this.interval = 1000; break;\r\n      case 'min': case 'minute':\r\n        this.interval = 1000 * 60; break;\r\n      case 'hr': case 'hour':\r\n        this.interval = 1000 * 60 * 60; break;\r\n      case 'day':\r\n        this.interval = 1000 * 60 * 60 * 24; break;\r\n      default:\r\n        throw new Error('Invaid interval ' + interval);\r\n    }\r\n  } else {\r\n    this.interval = interval;\r\n  }\r\n\r\n  this.parentBucket = parentBucket;\r\n  this.content = 0;\r\n  this.lastDrip = +new Date();\r\n};\r\n\r\nTokenBucket.prototype = {\r\n  bucketSize: 1,\r\n  tokensPerInterval: 1,\r\n  interval: 1000,\r\n  parentBucket: null,\r\n  content: 0,\r\n  lastDrip: 0,\r\n\r\n  /**\r\n   * Remove the requested number of tokens and fire the given callback. If the\r\n   * bucket (and any parent buckets) contains enough tokens this will happen\r\n   * immediately. Otherwise, the removal and callback will happen when enough\r\n   * tokens become available.\r\n   * @param {Number} count The number of tokens to remove.\r\n   * @param {Function} callback(err, remainingTokens)\r\n   * @returns {Boolean} True if the callback was fired immediately, otherwise\r\n   *  false.\r\n   */\r\n  removeTokens: function(count, callback) {\r\n    var self = this;\r\n\r\n    // Is this an infinite size bucket?\r\n    if (!this.bucketSize) {\r\n      process.nextTick(callback.bind(null, null, count, Number.POSITIVE_INFINITY));\r\n      return true;\r\n    }\r\n\r\n    // Make sure the bucket can hold the requested number of tokens\r\n    if (count > this.bucketSize) {\r\n      process.nextTick(callback.bind(null, 'Requested tokens ' + count + ' exceeds bucket size ' +\r\n        this.bucketSize, null));\r\n      return false;\r\n    }\r\n\r\n    // Drip new tokens into this bucket\r\n    this.drip();\r\n\r\n    // If we don't have enough tokens in this bucket, come back later\r\n    if (count > this.content)\r\n      return comeBackLater();\r\n\r\n    if (this.parentBucket) {\r\n      // Remove the requested from the parent bucket first\r\n      return this.parentBucket.removeTokens(count, function(err, remainingTokens) {\r\n        if (err) return callback(err, null);\r\n\r\n        // Check that we still have enough tokens in this bucket\r\n        if (count > self.content)\r\n          return comeBackLater();\r\n\r\n        // Tokens were removed from the parent bucket, now remove them from\r\n        // this bucket and fire the callback. Note that we look at the current\r\n        // bucket and parent bucket's remaining tokens and return the smaller\r\n        // of the two values\r\n        self.content -= count;\r\n        callback(null, Math.min(remainingTokens, self.content));\r\n      });\r\n    } else {\r\n      // Remove the requested tokens from this bucket and fire the callback\r\n      this.content -= count;\r\n      process.nextTick(callback.bind(null, null, this.content));\r\n      return true;\r\n    }\r\n\r\n    function comeBackLater() {\r\n      // How long do we need to wait to make up the difference in tokens?\r\n      var waitInterval = Math.ceil(\r\n        (count - self.content) * (self.interval / self.tokensPerInterval));\r\n      setTimeout(function() { self.removeTokens(count, callback); }, waitInterval);\r\n      return false;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Attempt to remove the requested number of tokens and return immediately.\r\n   * If the bucket (and any parent buckets) contains enough tokens this will\r\n   * return true, otherwise false is returned.\r\n   * @param {Number} count The number of tokens to remove.\r\n   * @param {Boolean} True if the tokens were successfully removed, otherwise\r\n   *  false.\r\n   */\r\n  tryRemoveTokens: function(count) {\r\n    // Is this an infinite size bucket?\r\n    if (!this.bucketSize)\r\n      return true;\r\n\r\n    // Make sure the bucket can hold the requested number of tokens\r\n    if (count > this.bucketSize)\r\n      return false;\r\n\r\n    // Drip new tokens into this bucket\r\n    this.drip();\r\n\r\n    // If we don't have enough tokens in this bucket, return false\r\n    if (count > this.content)\r\n      return false;\r\n\r\n    // Try to remove the requested tokens from the parent bucket\r\n    if (this.parentBucket && !this.parentBucket.tryRemoveTokens(count))\r\n      return false;\r\n\r\n    // Remove the requested tokens from this bucket and return\r\n    this.content -= count;\r\n    return true;\r\n  },\r\n\r\n  /**\r\n   * Add any new tokens to the bucket since the last drip.\r\n   * @returns {Boolean} True if new tokens were added, otherwise false.\r\n   */\r\n  drip: function() {\r\n    if (!this.tokensPerInterval) {\r\n      this.content = this.bucketSize;\r\n      return;\r\n    }\r\n\r\n    var now = +new Date();\r\n    var deltaMS = Math.max(now - this.lastDrip, 0);\r\n    this.lastDrip = now;\r\n\r\n    var dripAmount = deltaMS * (this.tokensPerInterval / this.interval);\r\n    this.content = Math.min(this.content + dripAmount, this.bucketSize);\r\n  }\r\n};\r\n\r\nmodule.exports = TokenBucket;\r\n", "var getMilliseconds = function() {\r\n  if (typeof process !== 'undefined' && process.hrtime) {\r\n    var hrtime = process.hrtime();\r\n    var seconds = hrtime[0];\r\n    var nanoseconds = hrtime[1];\r\n\r\n    return seconds * 1e3 +  Math.floor(nanoseconds / 1e6);\r\n  }\r\n\r\n  return new Date().getTime();\r\n}\r\n\r\nmodule.exports = getMilliseconds;\r\n", "var TokenBucket = require('./tokenBucket');\r\nvar getMilliseconds = require('./clock');\r\n\r\n/**\r\n * A generic rate limiter. Underneath the hood, this uses a token bucket plus\r\n * an additional check to limit how many tokens we can remove each interval.\r\n * @author John Hurliman <jhurliman@jhurliman.org>\r\n *\r\n * @param {Number} tokensPerInterval Maximum number of tokens that can be\r\n *  removed at any given moment and over the course of one interval.\r\n * @param {String|Number} interval The interval length in milliseconds, or as\r\n *  one of the following strings: 'second', 'minute', 'hour', day'.\r\n * @param {Boolean} fireImmediately Optional. Whether or not the callback\r\n *  will fire immediately when rate limiting is in effect (default is false).\r\n */\r\nvar RateLimiter = function(tokensPerInterval, interval, fireImmediately) {\r\n  this.tokenBucket = new TokenBucket(tokensPerInterval, tokensPerInterval,\r\n    interval, null);\r\n\r\n  // Fill the token bucket to start\r\n  this.tokenBucket.content = tokensPerInterval;\r\n\r\n  this.curIntervalStart = getMilliseconds();\r\n  this.tokensThisInterval = 0;\r\n  this.fireImmediately = fireImmediately;\r\n};\r\n\r\nRateLimiter.prototype = {\r\n  tokenBucket: null,\r\n  curIntervalStart: 0,\r\n  tokensThisInterval: 0,\r\n  fireImmediately: false,\r\n\r\n  /**\r\n   * Remove the requested number of tokens and fire the given callback. If the\r\n   * rate limiter contains enough tokens and we haven't spent too many tokens\r\n   * in this interval already, this will happen immediately. Otherwise, the\r\n   * removal and callback will happen when enough tokens become available.\r\n   * @param {Number} count The number of tokens to remove.\r\n   * @param {Function} callback(err, remainingTokens)\r\n   * @returns {Boolean} True if the callback was fired immediately, otherwise\r\n   *  false.\r\n   */\r\n  removeTokens: function(count, callback) {\r\n    // Make sure the request isn't for more than we can handle\r\n    if (count > this.tokenBucket.bucketSize) {\r\n      process.nextTick(callback.bind(null, 'Requested tokens ' + count +\r\n        ' exceeds maximum tokens per interval ' + this.tokenBucket.bucketSize,\r\n        null));\r\n      return false;\r\n    }\r\n\r\n    var self = this;\r\n    var now = getMilliseconds();\r\n\r\n    // Advance the current interval and reset the current interval token count\r\n    // if needed\r\n    if (now < this.curIntervalStart\r\n      || now - this.curIntervalStart >= this.tokenBucket.interval) {\r\n      this.curIntervalStart = now;\r\n      this.tokensThisInterval = 0;\r\n    }\r\n\r\n    // If we don't have enough tokens left in this interval, wait until the\r\n    // next interval\r\n    if (count > this.tokenBucket.tokensPerInterval - this.tokensThisInterval) {\r\n      if (this.fireImmediately) {\r\n        process.nextTick(callback.bind(null, null, -1));\r\n      } else {\r\n        var waitInterval = Math.ceil(\r\n          this.curIntervalStart + this.tokenBucket.interval - now);\r\n\r\n        setTimeout(function() {\r\n          self.tokenBucket.removeTokens(count, afterTokensRemoved);\r\n        }, waitInterval);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    // Remove the requested number of tokens from the token bucket\r\n    return this.tokenBucket.removeTokens(count, afterTokensRemoved);\r\n\r\n    function afterTokensRemoved(err, tokensRemaining) {\r\n      if (err) return callback(err, null);\r\n\r\n      self.tokensThisInterval += count;\r\n      callback(null, tokensRemaining);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Attempt to remove the requested number of tokens and return immediately.\r\n   * If the bucket (and any parent buckets) contains enough tokens and we\r\n   * haven't spent too many tokens in this interval already, this will return\r\n   * true. Otherwise, false is returned.\r\n   * @param {Number} count The number of tokens to remove.\r\n   * @param {Boolean} True if the tokens were successfully removed, otherwise\r\n   *  false.\r\n   */\r\n  tryRemoveTokens: function(count) {\r\n    // Make sure the request isn't for more than we can handle\r\n    if (count > this.tokenBucket.bucketSize)\r\n      return false;\r\n\r\n    var now = getMilliseconds();\r\n\r\n    // Advance the current interval and reset the current interval token count\r\n    // if needed\r\n    if (now < this.curIntervalStart\r\n      || now - this.curIntervalStart >= this.tokenBucket.interval) {\r\n      this.curIntervalStart = now;\r\n      this.tokensThisInterval = 0;\r\n    }\r\n\r\n    // If we don't have enough tokens left in this interval, return false\r\n    if (count > this.tokenBucket.tokensPerInterval - this.tokensThisInterval)\r\n      return false;\r\n\r\n    // Try to remove the requested number of tokens from the token bucket\r\n    var removed = this.tokenBucket.tryRemoveTokens(count);\r\n    if (removed) {\r\n      this.tokensThisInterval += count;\r\n    }\r\n    return removed;\r\n  },\r\n\r\n  /**\r\n   * Returns the number of tokens remaining in the TokenBucket.\r\n   * @returns {Number} The number of tokens remaining.\r\n   */\r\n  getTokensRemaining: function () {\r\n    this.tokenBucket.drip();\r\n    return this.tokenBucket.content;\r\n  }\r\n};\r\n\r\nmodule.exports = RateLimiter;\r\n", "\r\nexports.RateLimiter = require('./lib/rateLimiter');\r\nexports.TokenBucket = require('./lib/tokenBucket');\r\n", "const { TokenBucket } = require('limiter')\nconst Throttle = require('./throttle')\n\nclass ThrottleGroup {\n  constructor (opts = {}) {\n    if (typeof opts !== 'object') throw new Error('Options must be an object')\n\n    this.throttles = []\n    this.setEnabled(opts.enabled)\n    this.setRate(opts.rate, opts.chunksize)\n  }\n\n  getEnabled () {\n    return this._enabled\n  }\n\n  getRate () {\n    // Note: bucketSize === tokensPerInterval\n    return this.bucket.tokensPerInterval\n  }\n\n  getChunksize () {\n    return this.chunksize\n  }\n\n  setEnabled (val = true) {\n    if (typeof val !== 'boolean') throw new Error('Enabled must be a boolean')\n\n    this._enabled = val\n    for (const throttle of this.throttles) {\n      throttle.setEnabled(val)\n    }\n  }\n\n  setRate (rate, chunksize = null) {\n    // Note: rate = 0, means we should stop processing chunks\n    if (!Number.isInteger(rate) || rate < 0) throw new Error('Rate must be an integer bigger than zero')\n    rate = parseInt(rate)\n\n    if (chunksize && (typeof chunksize !== 'number' || chunksize <= 0)) throw new Error('Chunksize must be bigger than zero')\n    chunksize = chunksize || Math.max(parseInt(rate / 10), 1)\n    chunksize = parseInt(chunksize)\n    if (rate > 0 && chunksize > rate) throw new Error('Chunk size must be smaller than rate')\n\n    if (!this.bucket) this.bucket = new TokenBucket(rate, rate, 'second', null)\n\n    this.bucket.bucketSize = rate\n    this.bucket.tokensPerInterval = rate\n    this.chunksize = chunksize\n  }\n\n  setChunksize (chunksize) {\n    if (!Number.isInteger(chunksize) || chunksize <= 0) throw new Error('Chunk size must be an integer bigger than zero')\n    const rate = this.getRate()\n    chunksize = parseInt(chunksize)\n    if (rate > 0 && chunksize > rate) throw new Error('Chunk size must be smaller than rate')\n    this.chunksize = chunksize\n  }\n\n  throttle (opts = {}) {\n    if (typeof opts !== 'object') throw new Error('Options must be an object')\n\n    const newThrottle = new Throttle({\n      ...opts,\n      group: this\n    })\n\n    return newThrottle\n  }\n\n  destroy () {\n    for (const throttle of this.throttles) {\n      throttle.destroy()\n    }\n\n    this.throttles = []\n  }\n\n  _addThrottle (throttle) {\n    if (!(throttle instanceof Throttle)) throw new Error('Throttle must be an instance of Throttle')\n\n    this.throttles.push(throttle)\n  }\n\n  _removeThrottle (throttle) {\n    const index = this.throttles.indexOf(throttle)\n    if (index > -1) this.throttles.splice(index, 1)\n  }\n}\n\nmodule.exports = ThrottleGroup\n", "const { EventEmitter } = require('events')\nconst { Transform } = require('streamx')\nconst { wait } = require('./utils')\n\nclass Throttle extends Transform {\n  constructor (opts = {}) {\n    super()\n\n    if (typeof opts !== 'object') throw new Error('Options must be an object')\n\n    const params = Object.assign({}, opts)\n\n    if (params.group && !(params.group instanceof ThrottleGroup)) throw new Error('Group must be an instanece of ThrottleGroup')\n    else if (!params.group) params.group = new ThrottleGroup(params)\n\n    this._setEnabled(params.enabled || params.group.enabled)\n    this._group = params.group\n    this._emitter = new EventEmitter()\n    this._destroyed = false\n\n    this._group._addThrottle(this)\n  }\n\n  getEnabled () {\n    return this._enabled\n  }\n\n  getGroup () {\n    return this._group\n  }\n\n  _setEnabled (val = true) {\n    if (typeof val !== 'boolean') throw new Error('Enabled must be a boolean')\n    this._enabled = val\n  }\n\n  setEnabled (val) {\n    this._setEnabled(val)\n    if (this._enabled) this._emitter.emit('enabled')\n    else this._emitter.emit('disabled')\n  }\n\n  _transform (chunk, done) {\n    this._processChunk(chunk, done)\n  }\n\n  /* async _waitForPositiveRate () {\n    // Stop pushing chunks if rate is zero\n    while (this._group.getRate() === 0 && !this._destroyed && this._areBothEnabled()) {\n      await wait(1 * 1000) // wait 1 second\n    }\n  } */\n\n  async _waitForTokens (amount) {\n    // Wait for enabled, destroyed or tokens\n    return new Promise((resolve, reject) => {\n      let done = false\n      const self = this\n      function isDone (err) {\n        self._emitter.removeListener('disabled', isDone)\n        self._emitter.removeListener('destroyed', isDone)\n\n        if (done) return\n        done = true\n        if (err) return reject(err)\n        resolve()\n      }\n      this._emitter.once('disabled', isDone)\n      this._emitter.once('destroyed', isDone)\n      // TODO: next version remove lisener in \"isDone\"\n      this._group.bucket.removeTokens(amount, isDone)\n    })\n  }\n\n  _areBothEnabled () {\n    return this._enabled && this._group.getEnabled()\n  }\n\n  /* async _throttleChunk (size) {\n    // Stop pushing chunks if rate is zero\n    await this._waitForPositiveRate()\n    if (this._destroyed) return\n    if (!this._areBothEnabled()) return\n\n    // Get tokens from bucket\n    await this._waitForTokens(size)\n  } */\n\n  async _processChunk (chunk, done) {\n    if (!this._areBothEnabled()) return done(null, chunk)\n\n    let pos = 0\n    let chunksize = this._group.getChunksize()\n    let slice = chunk.slice(pos, pos + chunksize)\n    while (slice.length > 0) {\n      // Check here again because we might be in the middle of a big chunk\n      // with a lot of small slices\n      if (this._areBothEnabled()) {\n        try {\n          // WAIT FOR POSITIVE RATE\n          // Stop pushing chunks if rate is zero\n          while (this._group.getRate() === 0 && !this._destroyed && this._areBothEnabled()) {\n            await wait(1000) // wait 1 second\n            if (this._destroyed) return\n          }\n\n          // WAIT FOR TOKENS\n          if (this._areBothEnabled() && !this._group.bucket.tryRemoveTokens(slice.length)) {\n            await this._waitForTokens(slice.length)\n            if (this._destroyed) return\n          }\n        } catch (err) {\n          return done(err)\n        }\n      }\n\n      this.push(slice)\n      pos += chunksize\n\n      // Calculate params for next slice\n      chunksize = (this._areBothEnabled())\n        ? this._group.getChunksize() // Chunksize might have changed\n        : chunk.length - pos // Get the rest of the chunk\n      slice = chunk.slice(pos, pos + chunksize)\n    }\n\n    return done()\n  }\n\n  destroy (...args) {\n    this._group._removeThrottle(this)\n\n    this._destroyed = true\n    this._emitter.emit('destroyed')\n\n    super.destroy(...args)\n  }\n}\n\nmodule.exports = Throttle\n\n// Fix circular dependency\nconst ThrottleGroup = require('./throttle-group')\n", "const Throttle = require('./lib/throttle')\nconst ThrottleGroup = require('./lib/throttle-group')\n\nmodule.exports = {\n  Throttle,\n  ThrottleGroup\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"@silentbot1/nat-api\" has been externalized for browser compatibility. Cannot access \"@silentbot1/nat-api.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"net\" has been externalized for browser compatibility. Cannot access \"net.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"os\" has been externalized for browser compatibility. Cannot access \"os.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "var events = require('events')\nvar inherits = require('inherits')\n\nmodule.exports = LRU\n\nfunction LRU (opts) {\n  if (!(this instanceof LRU)) return new LRU(opts)\n  if (typeof opts === 'number') opts = {max: opts}\n  if (!opts) opts = {}\n  events.EventEmitter.call(this)\n  this.cache = {}\n  this.head = this.tail = null\n  this.length = 0\n  this.max = opts.max || 1000\n  this.maxAge = opts.maxAge || 0\n}\n\ninherits(LRU, events.EventEmitter)\n\nObject.defineProperty(LRU.prototype, 'keys', {\n  get: function () { return Object.keys(this.cache) }\n})\n\nLRU.prototype.clear = function () {\n  this.cache = {}\n  this.head = this.tail = null\n  this.length = 0\n}\n\nLRU.prototype.remove = function (key) {\n  if (typeof key !== 'string') key = '' + key\n  if (!this.cache.hasOwnProperty(key)) return\n\n  var element = this.cache[key]\n  delete this.cache[key]\n  this._unlink(key, element.prev, element.next)\n  return element.value\n}\n\nLRU.prototype._unlink = function (key, prev, next) {\n  this.length--\n\n  if (this.length === 0) {\n    this.head = this.tail = null\n  } else {\n    if (this.head === key) {\n      this.head = prev\n      this.cache[this.head].next = null\n    } else if (this.tail === key) {\n      this.tail = next\n      this.cache[this.tail].prev = null\n    } else {\n      this.cache[prev].next = next\n      this.cache[next].prev = prev\n    }\n  }\n}\n\nLRU.prototype.peek = function (key) {\n  if (!this.cache.hasOwnProperty(key)) return\n\n  var element = this.cache[key]\n\n  if (!this._checkAge(key, element)) return\n  return element.value\n}\n\nLRU.prototype.set = function (key, value) {\n  if (typeof key !== 'string') key = '' + key\n\n  var element\n\n  if (this.cache.hasOwnProperty(key)) {\n    element = this.cache[key]\n    element.value = value\n    if (this.maxAge) element.modified = Date.now()\n\n    // If it's already the head, there's nothing more to do:\n    if (key === this.head) return value\n    this._unlink(key, element.prev, element.next)\n  } else {\n    element = {value: value, modified: 0, next: null, prev: null}\n    if (this.maxAge) element.modified = Date.now()\n    this.cache[key] = element\n\n    // Eviction is only possible if the key didn't already exist:\n    if (this.length === this.max) this.evict()\n  }\n\n  this.length++\n  element.next = null\n  element.prev = this.head\n\n  if (this.head) this.cache[this.head].next = key\n  this.head = key\n\n  if (!this.tail) this.tail = key\n  return value\n}\n\nLRU.prototype._checkAge = function (key, element) {\n  if (this.maxAge && (Date.now() - element.modified) > this.maxAge) {\n    this.remove(key)\n    this.emit('evict', {key: key, value: element.value})\n    return false\n  }\n  return true\n}\n\nLRU.prototype.get = function (key) {\n  if (typeof key !== 'string') key = '' + key\n  if (!this.cache.hasOwnProperty(key)) return\n\n  var element = this.cache[key]\n\n  if (!this._checkAge(key, element)) return\n\n  if (this.head !== key) {\n    if (key === this.tail) {\n      this.tail = element.next\n      this.cache[this.tail].prev = null\n    } else {\n      // Set prev.next -> element.next:\n      this.cache[element.prev].next = element.next\n    }\n\n    // Set element.next.prev -> element.prev:\n    this.cache[element.next].prev = element.prev\n\n    // Element is the new head\n    this.cache[this.head].next = key\n    element.prev = this.head\n    element.next = null\n    this.head = key\n  }\n\n  return element.value\n}\n\nLRU.prototype.evict = function () {\n  if (!this.tail) return\n  var key = this.tail\n  var value = this.remove(this.tail)\n  this.emit('evict', {key: key, value: value})\n}\n", "/*! cache-chunk-store. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nconst LRU = require('lru')\nconst queueMicrotask = require('queue-microtask')\n\nclass CacheStore {\n  constructor (store, opts) {\n    this.store = store\n    this.chunkLength = store.chunkLength\n    this.inProgressGets = new Map() // Map from chunk index to info on callbacks waiting for that chunk\n\n    if (!this.store || !this.store.get || !this.store.put) {\n      throw new Error('First argument must be abstract-chunk-store compliant')\n    }\n\n    this.cache = new LRU(opts)\n  }\n\n  put (index, buf, cb = () => {}) {\n    if (!this.cache) {\n      return queueMicrotask(() => cb(new Error('CacheStore closed')))\n    }\n\n    this.cache.remove(index)\n    this.store.put(index, buf, cb)\n  }\n\n  get (index, opts, cb = () => {}) {\n    if (typeof opts === 'function') return this.get(index, null, opts)\n\n    if (!this.cache) {\n      return queueMicrotask(() => cb(new Error('CacheStore closed')))\n    }\n\n    if (!opts) opts = {}\n\n    let buf = this.cache.get(index)\n    if (buf) {\n      const offset = opts.offset || 0\n      const len = opts.length || (buf.length - offset)\n      if (offset !== 0 || len !== buf.length) {\n        buf = buf.slice(offset, len + offset)\n      }\n      return queueMicrotask(() => cb(null, buf))\n    }\n\n    // See if a get for this index has already started\n    let waiters = this.inProgressGets.get(index)\n    const getAlreadyStarted = !!waiters\n    if (!waiters) {\n      waiters = []\n      this.inProgressGets.set(index, waiters)\n    }\n\n    waiters.push({\n      opts,\n      cb\n    })\n\n    if (!getAlreadyStarted) {\n      this.store.get(index, (err, buf) => {\n        if (!err && this.cache != null) this.cache.set(index, buf)\n\n        const inProgressEntry = this.inProgressGets.get(index)\n        this.inProgressGets.delete(index)\n\n        for (const { opts, cb } of inProgressEntry) {\n          if (err) {\n            cb(err)\n          } else {\n            const offset = opts.offset || 0\n            const len = opts.length || (buf.length - offset)\n            let slicedBuf = buf\n            if (offset !== 0 || len !== buf.length) {\n              slicedBuf = buf.slice(offset, len + offset)\n            }\n            cb(null, slicedBuf)\n          }\n        }\n      })\n    }\n  }\n\n  close (cb = () => {}) {\n    if (!this.cache) {\n      return queueMicrotask(() => cb(new Error('CacheStore closed')))\n    }\n\n    this.cache = null\n    this.store.close(cb)\n  }\n\n  destroy (cb = () => {}) {\n    if (!this.cache) {\n      return queueMicrotask(() => cb(new Error('CacheStore closed')))\n    }\n\n    this.cache = null\n    this.store.destroy(cb)\n  }\n}\n\nmodule.exports = CacheStore\n", "module.exports = function cpus () {\n  var num = navigator.hardwareConcurrency || 1\n  var cpus = []\n  for (var i = 0; i < num; i++) {\n    cpus.push({\n      model: '',\n      speed: 0,\n      times: { user: 0, nice: 0, sys: 0, idle: 0, irq: 0 }\n    })\n  }\n  return cpus\n}\n", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n", "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n", "'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n", "/*\nindex.js - Kademlia DHT K-bucket implementation as a binary tree.\n\nThe MIT License (MIT)\n\nCopyright (c) 2013-2021 Tristan Slominski\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n'use strict'\n\nconst randomBytes = require('randombytes')\nconst { EventEmitter } = require('events')\n\n/**\n * @param  {Uint8Array} array1\n * @param  {Uint8Array} array2\n * @return {Boolean}\n */\nfunction arrayEquals (array1, array2) {\n  if (array1 === array2) {\n    return true\n  }\n  if (array1.length !== array2.length) {\n    return false\n  }\n  for (let i = 0, length = array1.length; i < length; ++i) {\n    if (array1[i] !== array2[i]) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction createNode () {\n  return { contacts: [], dontSplit: false, left: null, right: null }\n}\n\nfunction ensureInt8 (name, val) {\n  if (!(val instanceof Uint8Array)) {\n    throw new TypeError(name + ' is not a Uint8Array')\n  }\n}\n\n/**\n * Implementation of a Kademlia DHT k-bucket used for storing\n * contact (peer node) information.\n *\n * @extends EventEmitter\n */\nclass KBucket extends EventEmitter {\n  /**\n   * `options`:\n   *   `distance`: _Function_\n   *     `function (firstId, secondId) { return distance }` An optional\n   *     `distance` function that gets two `id` Uint8Arrays\n   *     and return distance (as number) between them.\n   *   `arbiter`: _Function_ _(Default: vectorClock arbiter)_\n   *     `function (incumbent, candidate) { return contact; }` An optional\n   *     `arbiter` function that givent two `contact` objects with the same `id`\n   *     returns the desired object to be used for updating the k-bucket. For\n   *     more details, see [arbiter function](#arbiter-function).\n   *   `localNodeId`: _Uint8Array_ An optional Uint8Array representing the local node id.\n   *     If not provided, a local node id will be created via `randomBytes(20)`.\n   *     `metadata`: _Object_ _(Default: {})_ Optional satellite data to include\n   *     with the k-bucket. `metadata` property is guaranteed not be altered by,\n   *     it is provided as an explicit container for users of k-bucket to store\n   *     implementation-specific data.\n   *   `numberOfNodesPerKBucket`: _Integer_ _(Default: 20)_ The number of nodes\n   *     that a k-bucket can contain before being full or split.\n   *     `numberOfNodesToPing`: _Integer_ _(Default: 3)_ The number of nodes to\n   *     ping when a bucket that should not be split becomes full. KBucket will\n   *     emit a `ping` event that contains `numberOfNodesToPing` nodes that have\n   *     not been contacted the longest.\n   *\n   * @param {Object=} options optional\n   */\n  constructor (options = {}) {\n    super()\n\n    this.localNodeId = options.localNodeId || randomBytes(20)\n    this.numberOfNodesPerKBucket = options.numberOfNodesPerKBucket || 20\n    this.numberOfNodesToPing = options.numberOfNodesToPing || 3\n    this.distance = options.distance || KBucket.distance\n    // use an arbiter from options or vectorClock arbiter by default\n    this.arbiter = options.arbiter || KBucket.arbiter\n    this.metadata = Object.assign({}, options.metadata)\n\n    ensureInt8('option.localNodeId as parameter 1', this.localNodeId)\n\n    this.root = createNode()\n  }\n\n  /**\n   * Default arbiter function for contacts with the same id. Uses\n   * contact.vectorClock to select which contact to update the k-bucket with.\n   * Contact with larger vectorClock field will be selected. If vectorClock is\n   * the same, candidat will be selected.\n   *\n   * @param  {Object} incumbent Contact currently stored in the k-bucket.\n   * @param  {Object} candidate Contact being added to the k-bucket.\n   * @return {Object}           Contact to updated the k-bucket with.\n   */\n  static arbiter (incumbent, candidate) {\n    return incumbent.vectorClock > candidate.vectorClock ? incumbent : candidate\n  }\n\n  /**\n   * Default distance function. Finds the XOR\n   * distance between firstId and secondId.\n   *\n   * @param  {Uint8Array} firstId  Uint8Array containing first id.\n   * @param  {Uint8Array} secondId Uint8Array containing second id.\n   * @return {Number}              Integer The XOR distance between firstId\n   *                               and secondId.\n   */\n  static distance (firstId, secondId) {\n    let distance = 0\n    let i = 0\n    const min = Math.min(firstId.length, secondId.length)\n    const max = Math.max(firstId.length, secondId.length)\n    for (; i < min; ++i) {\n      distance = distance * 256 + (firstId[i] ^ secondId[i])\n    }\n    for (; i < max; ++i) distance = distance * 256 + 255\n    return distance\n  }\n\n  /**\n   * Adds a contact to the k-bucket.\n   *\n   * @param {Object} contact the contact object to add\n   */\n  add (contact) {\n    ensureInt8('contact.id', (contact || {}).id)\n\n    let bitIndex = 0\n    let node = this.root\n\n    while (node.contacts === null) {\n      // this is not a leaf node but an inner node with 'low' and 'high'\n      // branches; we will check the appropriate bit of the identifier and\n      // delegate to the appropriate node for further processing\n      node = this._determineNode(node, contact.id, bitIndex++)\n    }\n\n    // check if the contact already exists\n    const index = this._indexOf(node, contact.id)\n    if (index >= 0) {\n      this._update(node, index, contact)\n      return this\n    }\n\n    if (node.contacts.length < this.numberOfNodesPerKBucket) {\n      node.contacts.push(contact)\n      this.emit('added', contact)\n      return this\n    }\n\n    // the bucket is full\n    if (node.dontSplit) {\n      // we are not allowed to split the bucket\n      // we need to ping the first this.numberOfNodesToPing\n      // in order to determine if they are alive\n      // only if one of the pinged nodes does not respond, can the new contact\n      // be added (this prevents DoS flodding with new invalid contacts)\n      this.emit('ping', node.contacts.slice(0, this.numberOfNodesToPing), contact)\n      return this\n    }\n\n    this._split(node, bitIndex)\n    return this.add(contact)\n  }\n\n  /**\n   * Get the n closest contacts to the provided node id. \"Closest\" here means:\n   * closest according to the XOR metric of the contact node id.\n   *\n   * @param  {Uint8Array} id  Contact node id\n   * @param  {Number=} n      Integer (Default: Infinity) The maximum number of\n   *                          closest contacts to return\n   * @return {Array}          Array Maximum of n closest contacts to the node id\n   */\n  closest (id, n = Infinity) {\n    ensureInt8('id', id)\n\n    if ((!Number.isInteger(n) && n !== Infinity) || n <= 0) {\n      throw new TypeError('n is not positive number')\n    }\n\n    let contacts = []\n\n    for (let nodes = [this.root], bitIndex = 0; nodes.length > 0 && contacts.length < n;) {\n      const node = nodes.pop()\n      if (node.contacts === null) {\n        const detNode = this._determineNode(node, id, bitIndex++)\n        nodes.push(node.left === detNode ? node.right : node.left)\n        nodes.push(detNode)\n      } else {\n        contacts = contacts.concat(node.contacts)\n      }\n    }\n\n    return contacts\n      .map(a => [this.distance(a.id, id), a])\n      .sort((a, b) => a[0] - b[0])\n      .slice(0, n)\n      .map(a => a[1])\n  }\n\n  /**\n   * Counts the total number of contacts in the tree.\n   *\n   * @return {Number} The number of contacts held in the tree\n   */\n  count () {\n    // return this.toArray().length\n    let count = 0\n    for (const nodes = [this.root]; nodes.length > 0;) {\n      const node = nodes.pop()\n      if (node.contacts === null) nodes.push(node.right, node.left)\n      else count += node.contacts.length\n    }\n    return count\n  }\n\n  /**\n   * Determines whether the id at the bitIndex is 0 or 1.\n   * Return left leaf if `id` at `bitIndex` is 0, right leaf otherwise\n   *\n   * @param  {Object} node     internal object that has 2 leafs: left and right\n   * @param  {Uint8Array} id   Id to compare localNodeId with.\n   * @param  {Number} bitIndex Integer (Default: 0) The bit index to which bit\n   *                           to check in the id Uint8Array.\n   * @return {Object}          left leaf if id at bitIndex is 0, right leaf otherwise.\n   */\n  _determineNode (node, id, bitIndex) {\n    // **NOTE** remember that id is a Uint8Array and has granularity of\n    // bytes (8 bits), whereas the bitIndex is the _bit_ index (not byte)\n\n    // id's that are too short are put in low bucket (1 byte = 8 bits)\n    // (bitIndex >> 3) finds how many bytes the bitIndex describes\n    // bitIndex % 8 checks if we have extra bits beyond byte multiples\n    // if number of bytes is <= no. of bytes described by bitIndex and there\n    // are extra bits to consider, this means id has less bits than what\n    // bitIndex describes, id therefore is too short, and will be put in low\n    // bucket\n    const bytesDescribedByBitIndex = bitIndex >> 3\n    const bitIndexWithinByte = bitIndex % 8\n    if ((id.length <= bytesDescribedByBitIndex) && (bitIndexWithinByte !== 0)) {\n      return node.left\n    }\n\n    const byteUnderConsideration = id[bytesDescribedByBitIndex]\n\n    // byteUnderConsideration is an integer from 0 to 255 represented by 8 bits\n    // where 255 is 11111111 and 0 is 00000000\n    // in order to find out whether the bit at bitIndexWithinByte is set\n    // we construct (1 << (7 - bitIndexWithinByte)) which will consist\n    // of all bits being 0, with only one bit set to 1\n    // for example, if bitIndexWithinByte is 3, we will construct 00010000 by\n    // (1 << (7 - 3)) -> (1 << 4) -> 16\n    if (byteUnderConsideration & (1 << (7 - bitIndexWithinByte))) {\n      return node.right\n    }\n\n    return node.left\n  }\n\n  /**\n   * Get a contact by its exact ID.\n   * If this is a leaf, loop through the bucket contents and return the correct\n   * contact if we have it or null if not. If this is an inner node, determine\n   * which branch of the tree to traverse and repeat.\n   *\n   * @param  {Uint8Array} id The ID of the contact to fetch.\n   * @return {Object|Null}   The contact if available, otherwise null\n   */\n  get (id) {\n    ensureInt8('id', id)\n\n    let bitIndex = 0\n\n    let node = this.root\n    while (node.contacts === null) {\n      node = this._determineNode(node, id, bitIndex++)\n    }\n\n    // index of uses contact id for matching\n    const index = this._indexOf(node, id)\n    return index >= 0 ? node.contacts[index] : null\n  }\n\n  /**\n   * Returns the index of the contact with provided\n   * id if it exists, returns -1 otherwise.\n   *\n   * @param  {Object} node    internal object that has 2 leafs: left and right\n   * @param  {Uint8Array} id  Contact node id.\n   * @return {Number}         Integer Index of contact with provided id if it\n   *                          exists, -1 otherwise.\n   */\n  _indexOf (node, id) {\n    for (let i = 0; i < node.contacts.length; ++i) {\n      if (arrayEquals(node.contacts[i].id, id)) return i\n    }\n\n    return -1\n  }\n\n  /**\n   * Removes contact with the provided id.\n   *\n   * @param  {Uint8Array} id The ID of the contact to remove.\n   * @return {Object}        The k-bucket itself.\n   */\n  remove (id) {\n    ensureInt8('the id as parameter 1', id)\n\n    let bitIndex = 0\n    let node = this.root\n\n    while (node.contacts === null) {\n      node = this._determineNode(node, id, bitIndex++)\n    }\n\n    const index = this._indexOf(node, id)\n    if (index >= 0) {\n      const contact = node.contacts.splice(index, 1)[0]\n      this.emit('removed', contact)\n    }\n\n    return this\n  }\n\n  /**\n   * Splits the node, redistributes contacts to the new nodes, and marks the\n   * node that was split as an inner node of the binary tree of nodes by\n   * setting this.root.contacts = null\n   *\n   * @param  {Object} node     node for splitting\n   * @param  {Number} bitIndex the bitIndex to which byte to check in the\n   *                           Uint8Array for navigating the binary tree\n   */\n  _split (node, bitIndex) {\n    node.left = createNode()\n    node.right = createNode()\n\n    // redistribute existing contacts amongst the two newly created nodes\n    for (const contact of node.contacts) {\n      this._determineNode(node, contact.id, bitIndex).contacts.push(contact)\n    }\n\n    node.contacts = null // mark as inner tree node\n\n    // don't split the \"far away\" node\n    // we check where the local node would end up and mark the other one as\n    // \"dontSplit\" (i.e. \"far away\")\n    const detNode = this._determineNode(node, this.localNodeId, bitIndex)\n    const otherNode = node.left === detNode ? node.right : node.left\n    otherNode.dontSplit = true\n  }\n\n  /**\n   * Returns all the contacts contained in the tree as an array.\n   * If this is a leaf, return a copy of the bucket. If this is not a leaf,\n   * return the union of the low and high branches (themselves also as arrays).\n   *\n   * @return {Array} All of the contacts in the tree, as an array\n   */\n  toArray () {\n    let result = []\n    for (const nodes = [this.root]; nodes.length > 0;) {\n      const node = nodes.pop()\n      if (node.contacts === null) nodes.push(node.right, node.left)\n      else result = result.concat(node.contacts)\n    }\n    return result\n  }\n\n  /**\n   * Similar to `toArray()` but instead of buffering everything up into an\n   * array before returning it, yields contacts as they are encountered while\n   * walking the tree.\n   *\n   * @return {Iterable} All of the contacts in the tree, as an iterable\n   */\n  * toIterable () {\n    for (const nodes = [this.root]; nodes.length > 0;) {\n      const node = nodes.pop()\n      if (node.contacts === null) {\n        nodes.push(node.right, node.left)\n      } else {\n        yield * node.contacts\n      }\n    }\n  }\n\n  /**\n   * Updates the contact selected by the arbiter.\n   * If the selection is our old contact and the candidate is some new contact\n   * then the new contact is abandoned (not added).\n   * If the selection is our old contact and the candidate is our old contact\n   * then we are refreshing the contact and it is marked as most recently\n   * contacted (by being moved to the right/end of the bucket array).\n   * If the selection is our new contact, the old contact is removed and the new\n   * contact is marked as most recently contacted.\n   *\n   * @param  {Object} node    internal object that has 2 leafs: left and right\n   * @param  {Number} index   the index in the bucket where contact exists\n   *                          (index has already been computed in a previous\n   *                          calculation)\n   * @param  {Object} contact The contact object to update.\n   */\n  _update (node, index, contact) {\n    // sanity check\n    if (!arrayEquals(node.contacts[index].id, contact.id)) {\n      throw new Error('wrong index for _update')\n    }\n\n    const incumbent = node.contacts[index]\n    const selection = this.arbiter(incumbent, contact)\n    // if the selection is our old contact and the candidate is some new\n    // contact, then there is nothing to do\n    if (selection === incumbent && incumbent !== contact) return\n\n    node.contacts.splice(index, 1) // remove old contact\n    node.contacts.push(selection) // add more recent contact version\n    this.emit('updated', incumbent, selection)\n  }\n}\n\nmodule.exports = KBucket\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"dgram\" has been externalized for browser compatibility. Cannot access \"dgram.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "const util = module.exports\n\nutil.digitCount = function digitCount (value) {\n  // Add a digit for negative numbers, as the sign will be prefixed\n  const sign = value < 0 ? 1 : 0\n  // Guard against negative numbers & zero going into log10(),\n  // as that would return -Infinity\n  value = Math.abs(Number(value || 1))\n  return Math.floor(Math.log10(value)) + 1 + sign\n}\n\nutil.getType = function getType (value) {\n  if (Buffer.isBuffer(value)) return 'buffer'\n  if (ArrayBuffer.isView(value)) return 'arraybufferview'\n  if (Array.isArray(value)) return 'array'\n  if (value instanceof Number) return 'number'\n  if (value instanceof Boolean) return 'boolean'\n  if (value instanceof Set) return 'set'\n  if (value instanceof Map) return 'map'\n  if (value instanceof String) return 'string'\n  if (value instanceof ArrayBuffer) return 'arraybuffer'\n  return typeof value\n}\n", "const { getType } = require('./util.js')\n\n/**\n * Encodes data in bencode.\n *\n * @param  {Buffer|Array|String|Object|Number|Boolean} data\n * @return {Buffer}\n */\nfunction encode (data, buffer, offset) {\n  const buffers = []\n  let result = null\n\n  encode._encode(buffers, data)\n  result = Buffer.concat(buffers)\n  encode.bytes = result.length\n\n  if (Buffer.isBuffer(buffer)) {\n    result.copy(buffer, offset)\n    return buffer\n  }\n\n  return result\n}\n\nencode.bytes = -1\nencode._floatConversionDetected = false\n\nencode._encode = function (buffers, data) {\n  if (data == null) { return }\n\n  switch (getType(data)) {\n    case 'buffer': encode.buffer(buffers, data); break\n    case 'object': encode.dict(buffers, data); break\n    case 'map': encode.dictMap(buffers, data); break\n    case 'array': encode.list(buffers, data); break\n    case 'set': encode.listSet(buffers, data); break\n    case 'string': encode.string(buffers, data); break\n    case 'number': encode.number(buffers, data); break\n    case 'boolean': encode.number(buffers, data); break\n    case 'arraybufferview': encode.buffer(buffers, Buffer.from(data.buffer, data.byteOffset, data.byteLength)); break\n    case 'arraybuffer': encode.buffer(buffers, Buffer.from(data)); break\n  }\n}\n\nconst buffE = Buffer.from('e')\nconst buffD = Buffer.from('d')\nconst buffL = Buffer.from('l')\n\nencode.buffer = function (buffers, data) {\n  buffers.push(Buffer.from(data.length + ':'), data)\n}\n\nencode.string = function (buffers, data) {\n  buffers.push(Buffer.from(Buffer.byteLength(data) + ':' + data))\n}\n\nencode.number = function (buffers, data) {\n  const maxLo = 0x80000000\n  const hi = (data / maxLo) << 0\n  const lo = (data % maxLo) << 0\n  const val = hi * maxLo + lo\n\n  buffers.push(Buffer.from('i' + val + 'e'))\n\n  if (val !== data && !encode._floatConversionDetected) {\n    encode._floatConversionDetected = true\n    console.warn(\n      'WARNING: Possible data corruption detected with value \"' + data + '\":',\n      'Bencoding only defines support for integers, value was converted to \"' + val + '\"'\n    )\n    console.trace()\n  }\n}\n\nencode.dict = function (buffers, data) {\n  buffers.push(buffD)\n\n  let j = 0\n  let k\n  // fix for issue #13 - sorted dicts\n  const keys = Object.keys(data).sort()\n  const kl = keys.length\n\n  for (; j < kl; j++) {\n    k = keys[j]\n    if (data[k] == null) continue\n    encode.string(buffers, k)\n    encode._encode(buffers, data[k])\n  }\n\n  buffers.push(buffE)\n}\n\nencode.dictMap = function (buffers, data) {\n  buffers.push(buffD)\n\n  const keys = Array.from(data.keys()).sort()\n\n  for (const key of keys) {\n    if (data.get(key) == null) continue\n    Buffer.isBuffer(key)\n      ? encode._encode(buffers, key)\n      : encode.string(buffers, String(key))\n    encode._encode(buffers, data.get(key))\n  }\n\n  buffers.push(buffE)\n}\n\nencode.list = function (buffers, data) {\n  let i = 0\n  const c = data.length\n  buffers.push(buffL)\n\n  for (; i < c; i++) {\n    if (data[i] == null) continue\n    encode._encode(buffers, data[i])\n  }\n\n  buffers.push(buffE)\n}\n\nencode.listSet = function (buffers, data) {\n  buffers.push(buffL)\n\n  for (const item of data) {\n    if (item == null) continue\n    encode._encode(buffers, item)\n  }\n\n  buffers.push(buffE)\n}\n\nmodule.exports = encode\n", "const INTEGER_START = 0x69 // 'i'\nconst STRING_DELIM = 0x3A // ':'\nconst DICTIONARY_START = 0x64 // 'd'\nconst LIST_START = 0x6C // 'l'\nconst END_OF_TYPE = 0x65 // 'e'\n\n/**\n * replaces parseInt(buffer.toString('ascii', start, end)).\n * For strings with less then ~30 charachters, this is actually a lot faster.\n *\n * @param {Buffer} data\n * @param {Number} start\n * @param {Number} end\n * @return {Number} calculated number\n */\nfunction getIntFromBuffer (buffer, start, end) {\n  let sum = 0\n  let sign = 1\n\n  for (let i = start; i < end; i++) {\n    const num = buffer[i]\n\n    if (num < 58 && num >= 48) {\n      sum = sum * 10 + (num - 48)\n      continue\n    }\n\n    if (i === start && num === 43) { // +\n      continue\n    }\n\n    if (i === start && num === 45) { // -\n      sign = -1\n      continue\n    }\n\n    if (num === 46) { // .\n      // its a float. break here.\n      break\n    }\n\n    throw new Error('not a number: buffer[' + i + '] = ' + num)\n  }\n\n  return sum * sign\n}\n\n/**\n * Decodes bencoded data.\n *\n * @param  {Buffer} data\n * @param  {Number} start (optional)\n * @param  {Number} end (optional)\n * @param  {String} encoding (optional)\n * @return {Object|Array|Buffer|String|Number}\n */\nfunction decode (data, start, end, encoding) {\n  if (data == null || data.length === 0) {\n    return null\n  }\n\n  if (typeof start !== 'number' && encoding == null) {\n    encoding = start\n    start = undefined\n  }\n\n  if (typeof end !== 'number' && encoding == null) {\n    encoding = end\n    end = undefined\n  }\n\n  decode.position = 0\n  decode.encoding = encoding || null\n\n  decode.data = !(Buffer.isBuffer(data))\n    ? Buffer.from(data)\n    : data.slice(start, end)\n\n  decode.bytes = decode.data.length\n\n  return decode.next()\n}\n\ndecode.bytes = 0\ndecode.position = 0\ndecode.data = null\ndecode.encoding = null\n\ndecode.next = function () {\n  switch (decode.data[decode.position]) {\n    case DICTIONARY_START:\n      return decode.dictionary()\n    case LIST_START:\n      return decode.list()\n    case INTEGER_START:\n      return decode.integer()\n    default:\n      return decode.buffer()\n  }\n}\n\ndecode.find = function (chr) {\n  let i = decode.position\n  const c = decode.data.length\n  const d = decode.data\n\n  while (i < c) {\n    if (d[i] === chr) return i\n    i++\n  }\n\n  throw new Error(\n    'Invalid data: Missing delimiter \"' +\n    String.fromCharCode(chr) + '\" [0x' +\n    chr.toString(16) + ']'\n  )\n}\n\ndecode.dictionary = function () {\n  decode.position++\n\n  const dict = {}\n\n  while (decode.data[decode.position] !== END_OF_TYPE) {\n    dict[decode.buffer()] = decode.next()\n  }\n\n  decode.position++\n\n  return dict\n}\n\ndecode.list = function () {\n  decode.position++\n\n  const lst = []\n\n  while (decode.data[decode.position] !== END_OF_TYPE) {\n    lst.push(decode.next())\n  }\n\n  decode.position++\n\n  return lst\n}\n\ndecode.integer = function () {\n  const end = decode.find(END_OF_TYPE)\n  const number = getIntFromBuffer(decode.data, decode.position + 1, end)\n\n  decode.position += end + 1 - decode.position\n\n  return number\n}\n\ndecode.buffer = function () {\n  let sep = decode.find(STRING_DELIM)\n  const length = getIntFromBuffer(decode.data, decode.position, sep)\n  const end = ++sep + length\n\n  decode.position = end\n\n  return decode.encoding\n    ? decode.data.toString(decode.encoding, sep, end)\n    : decode.data.slice(sep, end)\n}\n\nmodule.exports = decode\n", "const { digitCount, getType } = require('./util.js')\n\nfunction listLength (list) {\n  let length = 1 + 1 // type marker + end-of-type marker\n\n  for (const value of list) {\n    length += encodingLength(value)\n  }\n\n  return length\n}\n\nfunction mapLength (map) {\n  let length = 1 + 1 // type marker + end-of-type marker\n\n  for (const [key, value] of map) {\n    const keyLength = Buffer.byteLength(key)\n    length += digitCount(keyLength) + 1 + keyLength\n    length += encodingLength(value)\n  }\n\n  return length\n}\n\nfunction objectLength (value) {\n  let length = 1 + 1 // type marker + end-of-type marker\n  const keys = Object.keys(value)\n\n  for (let i = 0; i < keys.length; i++) {\n    const keyLength = Buffer.byteLength(keys[i])\n    length += digitCount(keyLength) + 1 + keyLength\n    length += encodingLength(value[keys[i]])\n  }\n\n  return length\n}\n\nfunction stringLength (value) {\n  const length = Buffer.byteLength(value)\n  return digitCount(length) + 1 + length\n}\n\nfunction arrayBufferLength (value) {\n  const length = value.byteLength - value.byteOffset\n  return digitCount(length) + 1 + length\n}\n\nfunction encodingLength (value) {\n  const length = 0\n\n  if (value == null) return length\n\n  const type = getType(value)\n\n  switch (type) {\n    case 'buffer': return digitCount(value.length) + 1 + value.length\n    case 'arraybufferview': return arrayBufferLength(value)\n    case 'string': return stringLength(value)\n    case 'array': case 'set': return listLength(value)\n    case 'number': return 1 + digitCount(Math.floor(value)) + 1\n    case 'bigint': return 1 + value.toString().length + 1\n    case 'object': return objectLength(value)\n    case 'map': return mapLength(value)\n    default:\n      throw new TypeError(`Unsupported value of type \"${type}\"`)\n  }\n}\n\nmodule.exports = encodingLength\n", "const bencode = module.exports\n\nbencode.encode = require('./encode.js')\nbencode.decode = require('./decode.js')\n\n/**\n * Determines the amount of bytes\n * needed to encode the given value\n * @param  {Object|Array|Buffer|String|Number|Boolean} value\n * @return {Number} byteCount\n */\nbencode.byteLength = bencode.encodingLength = require('./encoding-length.js')\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"dns\" has been externalized for browser compatibility. Cannot access \"dns.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"util\" has been externalized for browser compatibility. Cannot access \"util.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "var dgram = require('dgram')\nvar bencode = require('bencode')\nvar isIP = require('net').isIP\nvar dns = require('dns')\nvar util = require('util')\nvar events = require('events')\n\nvar ETIMEDOUT = new Error('Query timed out')\nETIMEDOUT.code = 'ETIMEDOUT'\n\nvar EUNEXPECTEDNODE = new Error('Unexpected node id')\nEUNEXPECTEDNODE.code = 'EUNEXPECTEDNODE'\n\nmodule.exports = RPC\n\nfunction RPC (opts) {\n  if (!(this instanceof RPC)) return new RPC(opts)\n  if (!opts) opts = {}\n\n  var self = this\n\n  this.timeout = opts.timeout || 2000\n  this.inflight = 0\n  this.destroyed = false\n  this.isIP = opts.isIP || isIP\n  this.socket = opts.socket || dgram.createSocket('udp4')\n  this.socket.on('message', onmessage)\n  this.socket.on('error', onerror)\n  this.socket.on('listening', onlistening)\n\n  this._tick = 0\n  this._ids = []\n  this._reqs = []\n  this._timer = setInterval(check, Math.floor(this.timeout / 4))\n\n  events.EventEmitter.call(this)\n\n  function check () {\n    var missing = self.inflight\n    if (!missing) return\n    for (var i = 0; i < self._reqs.length; i++) {\n      var req = self._reqs[i]\n      if (!req) continue\n      if (req.ttl) req.ttl--\n      else self._cancel(i, ETIMEDOUT)\n      if (!--missing) return\n    }\n  }\n\n  function onlistening () {\n    self.emit('listening')\n  }\n\n  function onerror (err) {\n    if (err.code === 'EACCES' || err.code === 'EADDRINUSE') self.emit('error', err)\n    else self.emit('warning', err)\n  }\n\n  function onmessage (buf, rinfo) {\n    if (self.destroyed) return\n    if (!rinfo.port) return // seems like a node bug that this is nessesary?\n\n    try {\n      var message = bencode.decode(buf)\n    } catch (e) {\n      return self.emit('warning', e)\n    }\n\n    var type = message && message.y && message.y.toString()\n\n    if (type === 'r' || type === 'e') {\n      if (!Buffer.isBuffer(message.t)) return\n\n      try {\n        var tid = message.t.readUInt16BE(0)\n      } catch (err) {\n        return self.emit('warning', err)\n      }\n\n      var index = self._ids.indexOf(tid)\n      if (index === -1 || tid === 0) {\n        self.emit('response', message, rinfo)\n        self.emit('warning', new Error('Unexpected transaction id: ' + tid))\n        return\n      }\n\n      var req = self._reqs[index]\n      if (req.peer.host !== rinfo.address) {\n        self.emit('response', message, rinfo)\n        self.emit('warning', new Error('Out of order response'))\n        return\n      }\n\n      self._ids[index] = 0\n      self._reqs[index] = null\n      self.inflight--\n\n      if (type === 'e') {\n        var isArray = Array.isArray(message.e)\n        var err = new Error(isArray ? message.e.join(' ') : 'Unknown error')\n        err.code = isArray && message.e.length && typeof message.e[0] === 'number' ? message.e[0] : 0\n        req.callback(err, message, rinfo, req.message)\n        self.emit('update')\n        self.emit('postupdate')\n        return\n      }\n\n      var rid = message.r && message.r.id\n      if (req.peer && req.peer.id && rid && !req.peer.id.equals(rid)) {\n        req.callback(EUNEXPECTEDNODE, null, rinfo)\n        self.emit('update')\n        self.emit('postupdate')\n        return\n      }\n\n      req.callback(null, message, rinfo, req.message)\n      self.emit('update')\n      self.emit('postupdate')\n      self.emit('response', message, rinfo)\n    } else if (type === 'q') {\n      self.emit('query', message, rinfo)\n    } else {\n      self.emit('warning', new Error('Unknown type: ' + type))\n    }\n  }\n}\n\nutil.inherits(RPC, events.EventEmitter)\n\nRPC.prototype.address = function () {\n  return this.socket.address()\n}\n\nRPC.prototype.response = function (peer, req, res, cb) {\n  this.send(peer, { t: req.t, y: 'r', r: res }, cb)\n}\n\nRPC.prototype.error = function (peer, req, error, cb) {\n  this.send(peer, { t: req.t, y: 'e', e: [].concat(error.message || error) }, cb)\n}\n\nRPC.prototype.send = function (peer, message, cb) {\n  var buf = bencode.encode(message)\n  this.socket.send(buf, 0, buf.length, peer.port, peer.address || peer.host, cb || noop)\n}\n\n// bind([port], [address], [callback])\nRPC.prototype.bind = function () {\n  this.socket.bind.apply(this.socket, arguments)\n}\n\nRPC.prototype.destroy = function (cb) {\n  this.destroyed = true\n  clearInterval(this._timer)\n  if (cb) this.socket.on('close', cb)\n  for (var i = 0; i < this._ids.length; i++) this._cancel(i)\n  this.socket.close()\n}\n\nRPC.prototype.query = function (peer, query, cb) {\n  if (!cb) cb = noop\n  if (!this.isIP(peer.host)) return this._resolveAndQuery(peer, query, cb)\n\n  var message = {\n    t: Buffer.allocUnsafe(2),\n    y: 'q',\n    q: query.q,\n    a: query.a\n  }\n\n  var req = {\n    ttl: 4,\n    peer: peer,\n    message: message,\n    callback: cb\n  }\n\n  if (this._tick === 65535) this._tick = 0\n  var tid = ++this._tick\n\n  var free = this._ids.indexOf(0)\n  if (free === -1) free = this._ids.push(0) - 1\n  this._ids[free] = tid\n  while (this._reqs.length < free) this._reqs.push(null)\n  this._reqs[free] = req\n\n  this.inflight++\n  message.t.writeUInt16BE(tid, 0)\n  this.send(peer, message)\n  return tid\n}\n\nRPC.prototype.cancel = function (tid, err) {\n  var index = this._ids.indexOf(tid)\n  if (index > -1) this._cancel(index, err)\n}\n\nRPC.prototype._cancel = function (index, err) {\n  var req = this._reqs[index]\n  this._ids[index] = 0\n  this._reqs[index] = null\n  if (req) {\n    this.inflight--\n    req.callback(err || new Error('Query was cancelled'), null, req.peer)\n    this.emit('update')\n    this.emit('postupdate')\n  }\n}\n\nRPC.prototype._resolveAndQuery = function (peer, query, cb) {\n  var self = this\n\n  dns.lookup(peer.host, function (err, ip) {\n    if (err) return cb(err)\n    if (self.destroyed) return cb(new Error('k-rpc-socket is destroyed'))\n    self.query({ host: ip, port: peer.port }, query, cb)\n  })\n}\n\nfunction noop () {}\n", "var socket = require('k-rpc-socket')\nvar KBucket = require('k-bucket')\nvar events = require('events')\nvar randombytes = require('randombytes')\nvar util = require('util')\n\nvar K = 20\nvar MAX_CONCURRENCY = 16\nvar BOOTSTRAP_NODES = [\n  { host: 'router.bittorrent.com', port: 6881 },\n  { host: 'router.utorrent.com', port: 6881 },\n  { host: 'dht.transmissionbt.com', port: 6881 }\n]\n\nmodule.exports = RPC\n\nfunction RPC (opts) {\n  if (!(this instanceof RPC)) return new RPC(opts)\n  if (!opts) opts = {}\n\n  var self = this\n\n  this._idLength = opts.idLength || 20\n  this.id = toBuffer(opts.id || opts.nodeId || randombytes(this._idLength))\n  this.socket = opts.krpcSocket || socket(opts)\n  this.bootstrap = toBootstrapArray(opts.nodes || opts.bootstrap)\n  this.concurrency = opts.concurrency || MAX_CONCURRENCY\n  this.backgroundConcurrency = opts.backgroundConcurrency || (this.concurrency / 4) | 0\n  this.k = opts.k || K\n  this.destroyed = false\n\n  this.pending = []\n  this.nodes = null\n\n  this.socket.setMaxListeners(0)\n  this.socket.on('query', onquery)\n  this.socket.on('response', onresponse)\n  this.socket.on('warning', onwarning)\n  this.socket.on('error', onerror)\n  this.socket.on('update', onupdate)\n  this.socket.on('listening', onlistening)\n\n  events.EventEmitter.call(this)\n  this.clear()\n\n  function onupdate () {\n    while (self.pending.length && self.socket.inflight < self.concurrency) {\n      var next = self.pending.shift()\n      self.query(next[0], next[1], next[2])\n    }\n  }\n\n  function onerror (err) {\n    self.emit('error', err)\n  }\n\n  function onlistening () {\n    self.emit('listening')\n  }\n\n  function onwarning (err) {\n    self.emit('warning', err)\n  }\n\n  function onquery (query, peer) {\n    addNode(query.a, peer)\n    self.emit('query', query, peer)\n  }\n\n  function onresponse (reply, peer) {\n    addNode(reply.r, peer)\n  }\n\n  function addNode (data, peer) {\n    if (data && isNodeId(data.id, self._idLength) && !data.id.equals(self.id)) {\n      var old = self.nodes.get(data.id)\n      if (old) {\n        old.seen = Date.now()\n        return\n      }\n      self._addNode({\n        id: data.id,\n        host: peer.address || peer.host,\n        port: peer.port,\n        distance: 0,\n        seen: Date.now()\n      })\n    }\n  }\n}\n\nutil.inherits(RPC, events.EventEmitter)\n\nRPC.prototype.response = function (node, query, response, nodes, cb) {\n  if (typeof nodes === 'function') {\n    cb = nodes\n    nodes = null\n  }\n\n  if (!response.id) response.id = this.id\n  if (nodes) response.nodes = encodeNodes(nodes, this._idLength)\n  this.socket.response(node, query, response, cb)\n}\n\nRPC.prototype.error = function (node, query, error, cb) {\n  this.socket.error(node, query, error, cb)\n}\n\n// bind([port], [address], [callback])\nRPC.prototype.bind = function () {\n  this.socket.bind.apply(this.socket, arguments)\n}\n\nRPC.prototype.address = function () {\n  return this.socket.address()\n}\n\nRPC.prototype.queryAll = function (nodes, message, visit, cb) {\n  if (!message.a) message.a = {}\n  if (!message.a.id) message.a.id = this.id\n\n  var stop = false\n  var missing = nodes.length\n  var hits = 0\n  var error = null\n\n  if (!missing) return cb(new Error('No nodes to query'), 0)\n\n  for (var i = 0; i < nodes.length; i++) {\n    this.query(nodes[i], message, done)\n  }\n\n  function done (err, res, peer) {\n    if (!err) hits++\n    else if (err.code >= 300 && err.code < 400) error = err\n    if (!err && !stop) {\n      if (visit && visit(res, peer) === false) stop = true\n    }\n    if (!--missing) cb(hits ? null : error || new Error('All queries failed'), hits)\n  }\n}\n\nRPC.prototype.query = function (node, message, cb) {\n  if (this.socket.inflight >= this.concurrency) {\n    this.pending.push([node, message, cb])\n  } else {\n    if (!message.a) message.a = {}\n    if (!message.a.id) message.a.id = this.id\n    if (node.token) message.a.token = node.token\n    this.socket.query(node, message, cb)\n  }\n}\n\nRPC.prototype.destroy = function (cb) {\n  this.destroyed = true\n  this.socket.destroy(cb)\n}\n\nRPC.prototype.clear = function () {\n  var self = this\n\n  this.nodes = new KBucket({\n    localNodeId: this.id,\n    numberOfNodesPerKBucket: this.k,\n    numberOfNodesToPing: this.concurrency\n  })\n\n  this.nodes.on('ping', onping)\n\n  function onping (older, newer) {\n    self.emit('ping', older, function swap (deadNode) {\n      if (!deadNode) return\n      if (deadNode.id) self.nodes.remove(deadNode.id)\n      self._addNode(newer)\n    })\n  }\n}\n\nRPC.prototype.populate = function (target, message, cb) {\n  this._closest(target, message, true, null, cb)\n}\n\nRPC.prototype.closest = function (target, message, visit, cb) {\n  this._closest(target, message, false, visit, cb)\n}\n\nRPC.prototype._addNode = function (node) {\n  var old = this.nodes.get(node.id)\n  this.nodes.add(node)\n  if (!old) this.emit('node', node)\n}\n\nRPC.prototype._closest = function (target, message, background, visit, cb) {\n  if (!cb) cb = noop\n\n  var self = this\n  var count = 0\n  var queried = {}\n  var pending = 0\n  var once = true\n  var stop = false\n\n  if (!message.a) message.a = {}\n  if (!message.a.id) message.a.id = this.id\n\n  var table = new KBucket({\n    localNodeId: target,\n    numberOfNodesPerKBucket: this.k,\n    numberOfNodesToPing: this.concurrency\n  })\n\n  var evt = background ? 'postupdate' : 'update'\n  this.socket.on(evt, kick)\n  kick()\n\n  function kick () {\n    if (self.destroyed || self.socket.inflight >= self.concurrency) return\n\n    var otherInflight = self.pending.length + self.socket.inflight - pending\n    if (background && self.socket.inflight >= self.backgroundConcurrency && otherInflight) return\n\n    var closest = table.closest(target, self.k)\n    if (!closest.length || closest.length < self.bootstrap.length) {\n      closest = self.nodes.closest(target, self.k)\n      if (!closest.length || closest.length < self.bootstrap.length) bootstrap()\n    }\n\n    for (var i = 0; i < closest.length; i++) {\n      if (stop) break\n      if (self.socket.inflight >= self.concurrency) return\n\n      var peer = closest[i]\n      var id = peer.host + ':' + peer.port\n      if (queried[id]) continue\n      queried[id] = true\n\n      pending++\n      self.socket.query(peer, message, afterQuery)\n    }\n\n    if (!pending) {\n      self.socket.removeListener(evt, kick)\n      process.nextTick(done)\n    }\n  }\n\n  function done () {\n    cb(null, count)\n  }\n\n  function bootstrap () {\n    if (!once) return\n    once = false\n    self.bootstrap.forEach(function (peer) {\n      pending++\n      self.socket.query(peer, message, afterQuery)\n    })\n  }\n\n  function afterQuery (err, res, peer) {\n    pending--\n    if (peer) queried[(peer.address || peer.host) + ':' + peer.port] = true // need this for bootstrap nodes\n\n    if (peer && peer.id && self.nodes.get(peer.id)) {\n      if (err && (err.code === 'EUNEXPECTEDNODE' || err.code === 'ETIMEDOUT')) {\n        self.nodes.remove(peer.id)\n      }\n    }\n\n    var r = res && res.r\n    if (!r) return kick()\n\n    if (!err && isNodeId(r.id, self._idLength)) {\n      count++\n      add({\n        id: r.id,\n        port: peer.port,\n        host: peer.host || peer.address,\n        distance: 0\n      })\n    }\n\n    var nodes = r.nodes ? parseNodes(r.nodes, self._idLength) : []\n    for (var i = 0; i < nodes.length; i++) add(nodes[i])\n\n    if (visit && visit(res, peer) === false) stop = true\n\n    kick()\n  }\n\n  function add (node) {\n    if (node.id.equals(self.id)) return\n    table.add(node)\n  }\n}\n\nfunction toBootstrapArray (val) {\n  if (val === false) return []\n  if (val === true) return BOOTSTRAP_NODES\n  return [].concat(val || BOOTSTRAP_NODES).map(parsePeer)\n}\n\nfunction isNodeId (id, idLength) {\n  return id && Buffer.isBuffer(id) && id.length === idLength\n}\n\nfunction encodeNodes (nodes, idLength) {\n  var buf = Buffer.allocUnsafe(nodes.length * (idLength + 6))\n  var ptr = 0\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i]\n    if (!isNodeId(node.id, idLength)) continue\n    node.id.copy(buf, ptr)\n    ptr += idLength\n    var ip = (node.host || node.address).split('.')\n    for (var j = 0; j < 4; j++) buf[ptr++] = parseInt(ip[j] || 0, 10)\n    buf.writeUInt16BE(node.port, ptr)\n    ptr += 2\n  }\n\n  if (ptr === buf.length) return buf\n  return buf.slice(0, ptr)\n}\n\nfunction parseNodes (buf, idLength) {\n  var contacts = []\n\n  try {\n    for (var i = 0; i < buf.length; i += (idLength + 6)) {\n      var port = buf.readUInt16BE(i + (idLength + 4))\n      if (!port) continue\n      contacts.push({\n        id: buf.slice(i, i + idLength),\n        host: parseIp(buf, i + idLength),\n        port: port,\n        distance: 0,\n        token: null\n      })\n    }\n  } catch (err) {\n    // do nothing\n  }\n\n  return contacts\n}\n\nfunction parseIp (buf, offset) {\n  return buf[offset++] + '.' + buf[offset++] + '.' + buf[offset++] + '.' + buf[offset++]\n}\n\nfunction parsePeer (peer) {\n  if (typeof peer === 'string') return { host: peer.split(':')[0], port: Number(peer.split(':')[1]) }\n  return peer\n}\n\nfunction noop () {}\n\nfunction toBuffer (str) {\n  if (Buffer.isBuffer(str)) return str\n  if (ArrayBuffer.isView(str)) return Buffer.from(str.buffer, str.byteOffset, str.byteLength)\n  if (typeof str === 'string') return Buffer.from(str, 'hex')\n  throw new Error('Pass a buffer or a string')\n}\n", "module.exports = function (work) {\n  var pending = null\n  var callback = null\n  var callbacks = null\n  var next = null\n\n  return function (val, cb) {\n    next = val\n    update(cb || noop)\n  }\n\n  function update (cb) {\n    if (callback) {\n      if (!pending) pending = []\n      pending.push(cb)\n      return\n    }\n\n    var val = next\n    next = null\n    callback = cb\n    work(val, done)\n  }\n\n  function done (err) {\n    var cb = callback\n    var cbs = callbacks\n    callbacks = null\n    callback = null\n\n    if (pending) {\n      callbacks = pending\n      pending = null\n      update(noop)\n    }\n\n    if (cbs) {\n      for (var i = 0; i < cbs.length; i++) cbs[i](err)\n    }\n    cb(err)\n  }\n}\n\nfunction noop (_) {}\n", "function byteLength (string) {\n  return string.length\n}\n\nfunction toString (buffer) {\n  const len = buffer.byteLength\n\n  let result = ''\n\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buffer[i])\n  }\n\n  return result\n}\n\nfunction write (buffer, string, offset = 0, length = byteLength(string)) {\n  const len = Math.min(length, buffer.byteLength - offset)\n\n  for (let i = 0; i < len; i++) {\n    buffer[offset + i] = string.charCodeAt(i)\n  }\n\n  return len\n}\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n", "const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\nconst codes = new Uint8Array(256)\n\nfor (let i = 0; i < alphabet.length; i++) {\n  codes[alphabet.charCodeAt(i)] = i\n}\n\ncodes[/* - */ 0x2d] = 62\ncodes[/* _ */ 0x5f] = 63\n\nfunction byteLength (string) {\n  let len = string.length\n\n  if (string.charCodeAt(len - 1) === 0x3d) len--\n  if (len > 1 && string.charCodeAt(len - 1) === 0x3d) len--\n\n  return (len * 3) >>> 2\n}\n\nfunction toString (buffer) {\n  const len = buffer.byteLength\n\n  let result = ''\n\n  for (let i = 0; i < len; i += 3) {\n    result += (\n      alphabet[buffer[i] >> 2] +\n      alphabet[((buffer[i] & 3) << 4) | (buffer[i + 1] >> 4)] +\n      alphabet[((buffer[i + 1] & 15) << 2) | (buffer[i + 2] >> 6)] +\n      alphabet[buffer[i + 2] & 63]\n    )\n  }\n\n  if (len % 3 === 2) {\n    result = result.substring(0, result.length - 1) + '='\n  } else if (len % 3 === 1) {\n    result = result.substring(0, result.length - 2) + '=='\n  }\n\n  return result\n};\n\nfunction write (buffer, string, offset = 0, length = byteLength(string)) {\n  const len = Math.min(length, buffer.byteLength - offset)\n\n  for (let i = 0, j = 0; j < len; i += 4) {\n    const a = codes[string.charCodeAt(i)]\n    const b = codes[string.charCodeAt(i + 1)]\n    const c = codes[string.charCodeAt(i + 2)]\n    const d = codes[string.charCodeAt(i + 3)]\n\n    buffer[j++] = (a << 2) | (b >> 4)\n    buffer[j++] = ((b & 15) << 4) | (c >> 2)\n    buffer[j++] = ((c & 3) << 6) | (d & 63)\n  }\n\n  return len\n};\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n", "function byteLength (string) {\n  return string.length >>> 1\n}\n\nfunction toString (buffer) {\n  const len = buffer.byteLength\n\n  buffer = new DataView(buffer.buffer, buffer.byteOffset, len)\n\n  let result = ''\n  let i = 0\n\n  for (let n = len - (len % 4); i < n; i += 4) {\n    result += buffer.getUint32(i).toString(16).padStart(8, '0')\n  }\n\n  for (; i < len; i++) {\n    result += buffer.getUint8(i).toString(16).padStart(2, '0')\n  }\n\n  return result\n}\n\nfunction write (buffer, string, offset = 0, length = byteLength(string)) {\n  const len = Math.min(length, buffer.byteLength - offset)\n\n  for (let i = 0; i < len; i++) {\n    const a = hexValue(string.charCodeAt(i * 2))\n    const b = hexValue(string.charCodeAt(i * 2 + 1))\n\n    if (a === undefined || b === undefined) {\n      return buffer.subarray(0, i)\n    }\n\n    buffer[offset + i] = (a << 4) | b\n  }\n\n  return len\n}\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n\nfunction hexValue (char) {\n  if (char >= 0x30 && char <= 0x39) return char - 0x30\n  if (char >= 0x41 && char <= 0x46) return char - 0x41 + 10\n  if (char >= 0x61 && char <= 0x66) return char - 0x61 + 10\n}\n", "function byteLength (string) {\n  let length = 0\n\n  for (let i = 0, n = string.length; i < n; i++) {\n    const code = string.charCodeAt(i)\n\n    if (code >= 0xd800 && code <= 0xdbff && i + 1 < n) {\n      const code = string.charCodeAt(i + 1)\n\n      if (code >= 0xdc00 && code <= 0xdfff) {\n        length += 4\n        i++\n        continue\n      }\n    }\n\n    if (code <= 0x7f) length += 1\n    else if (code <= 0x7ff) length += 2\n    else length += 3\n  }\n\n  return length\n}\n\nlet toString\n\nif (typeof TextDecoder !== 'undefined') {\n  const decoder = new TextDecoder()\n\n  toString = function toString (buffer) {\n    return decoder.decode(buffer)\n  }\n} else {\n  toString = function toString (buffer) {\n    const len = buffer.byteLength\n\n    let output = ''\n    let i = 0\n\n    while (i < len) {\n      let byte = buffer[i]\n\n      if (byte <= 0x7f) {\n        output += String.fromCharCode(byte)\n        i++\n        continue\n      }\n\n      let bytesNeeded = 0\n      let codePoint = 0\n\n      if (byte <= 0xdf) {\n        bytesNeeded = 1\n        codePoint = byte & 0x1f\n      } else if (byte <= 0xef) {\n        bytesNeeded = 2\n        codePoint = byte & 0x0f\n      } else if (byte <= 0xf4) {\n        bytesNeeded = 3\n        codePoint = byte & 0x07\n      }\n\n      if (len - i - bytesNeeded > 0) {\n        let k = 0\n\n        while (k < bytesNeeded) {\n          byte = buffer[i + k + 1]\n          codePoint = (codePoint << 6) | (byte & 0x3f)\n          k += 1\n        }\n      } else {\n        codePoint = 0xfffd\n        bytesNeeded = len - i\n      }\n\n      output += String.fromCodePoint(codePoint)\n      i += bytesNeeded + 1\n    }\n\n    return output\n  }\n}\n\nlet write\n\nif (typeof TextEncoder !== 'undefined') {\n  const encoder = new TextEncoder()\n\n  write = function write (buffer, string, offset = 0, length = byteLength(string)) {\n    const len = Math.min(length, buffer.byteLength - offset)\n    encoder.encodeInto(string, buffer.subarray(offset, offset + len))\n    return len\n  }\n} else {\n  write = function write (buffer, string, offset = 0, length = byteLength(string)) {\n    const len = Math.min(length, buffer.byteLength - offset)\n\n    buffer = buffer.subarray(offset, offset + len)\n\n    let i = 0\n    let j = 0\n\n    while (i < string.length) {\n      const code = string.codePointAt(i)\n\n      if (code <= 0x7f) {\n        buffer[j++] = code\n        i++\n        continue\n      }\n\n      let count = 0\n      let bits = 0\n\n      if (code <= 0x7ff) {\n        count = 6\n        bits = 0xc0\n      } else if (code <= 0xffff) {\n        count = 12\n        bits = 0xe0\n      } else if (code <= 0x1fffff) {\n        count = 18\n        bits = 0xf0\n      }\n\n      buffer[j++] = bits | (code >> count)\n      count -= 6\n\n      while (count >= 0) {\n        buffer[j++] = 0x80 | ((code >> count) & 0x3f)\n        count -= 6\n      }\n\n      i += code >= 0x10000 ? 2 : 1\n    }\n\n    return len\n  }\n}\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n", "function byteLength (string) {\n  return string.length * 2\n}\n\nfunction toString (buffer) {\n  const len = buffer.byteLength\n\n  let result = ''\n\n  for (let i = 0; i < len - 1; i += 2) {\n    result += String.fromCharCode(buffer[i] + (buffer[i + 1] * 256))\n  }\n\n  return result\n}\n\nfunction write (buffer, string, offset = 0, length = byteLength(string)) {\n  const len = Math.min(length, buffer.byteLength - offset)\n\n  let units = len\n\n  for (let i = 0; i < string.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    const c = string.charCodeAt(i)\n    const hi = c >> 8\n    const lo = c % 256\n\n    buffer[offset + i * 2] = lo\n    buffer[offset + i * 2 + 1] = hi\n  }\n\n  return len\n}\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n", "const ascii = require('./lib/ascii')\nconst base64 = require('./lib/base64')\nconst hex = require('./lib/hex')\nconst utf8 = require('./lib/utf8')\nconst utf16le = require('./lib/utf16le')\n\nconst LE = new Uint8Array(Uint16Array.of(0xff).buffer)[0] === 0xff\n\nfunction codecFor (encoding) {\n  switch (encoding) {\n    case 'ascii':\n      return ascii\n    case 'base64':\n      return base64\n    case 'hex':\n      return hex\n    case 'utf8':\n    case 'utf-8':\n    case undefined:\n    case null:\n      return utf8\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return utf16le\n    default:\n      throw new Error(`Unknown encoding: ${encoding}`)\n  }\n}\n\nfunction isBuffer (value) {\n  return value instanceof Uint8Array\n}\n\nfunction isEncoding (encoding) {\n  try {\n    codecFor(encoding)\n    return true\n  } catch {\n    return false\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  const buffer = new Uint8Array(size)\n  if (fill !== undefined) exports.fill(buffer, fill, 0, buffer.byteLength, encoding)\n  return buffer\n}\n\nfunction allocUnsafe (size) {\n  return new Uint8Array(size)\n}\n\nfunction allocUnsafeSlow (size) {\n  return new Uint8Array(size)\n}\n\nfunction byteLength (string, encoding) {\n  return codecFor(encoding).byteLength(string)\n}\n\nfunction compare (a, b) {\n  if (a === b) return 0\n\n  const len = Math.min(a.byteLength, b.byteLength)\n\n  a = new DataView(a.buffer, a.byteOffset, a.byteLength)\n  b = new DataView(b.buffer, b.byteOffset, b.byteLength)\n\n  let i = 0\n\n  for (let n = len - (len % 4); i < n; i += 4) {\n    const x = a.getUint32(i, LE)\n    const y = b.getUint32(i, LE)\n    if (x !== y) break\n  }\n\n  for (; i < len; i++) {\n    const x = a.getUint8(i)\n    const y = b.getUint8(i)\n    if (x < y) return -1\n    if (x > y) return 1\n  }\n\n  return a.byteLength > b.byteLength ? 1 : a.byteLength < b.byteLength ? -1 : 0\n}\n\nfunction concat (buffers, totalLength) {\n  if (totalLength === undefined) {\n    totalLength = buffers.reduce((len, buffer) => len + buffer.byteLength, 0)\n  }\n\n  const result = new Uint8Array(totalLength)\n\n  let offset = 0\n  for (const buffer of buffers) {\n    if (offset + buffer.byteLength > result.byteLength) {\n      const sub = buffer.subarray(0, result.byteLength - offset)\n      result.set(sub, offset)\n      return result\n    }\n    result.set(buffer, offset)\n    offset += buffer.byteLength\n  }\n\n  return result\n}\n\nfunction copy (source, target, targetStart = 0, start = 0, end = source.byteLength) {\n  if (end > 0 && end < start) return 0\n  if (end === start) return 0\n  if (source.byteLength === 0 || target.byteLength === 0) return 0\n\n  if (targetStart < 0) throw new RangeError('targetStart is out of range')\n  if (start < 0 || start >= source.byteLength) throw new RangeError('sourceStart is out of range')\n  if (end < 0) throw new RangeError('sourceEnd is out of range')\n\n  if (targetStart >= target.byteLength) targetStart = target.byteLength\n  if (end > source.byteLength) end = source.byteLength\n  if (target.byteLength - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (source === target) {\n    target.copyWithin(targetStart, start, end)\n  } else {\n    target.set(source.subarray(start, end), targetStart)\n  }\n\n  return len\n}\n\nfunction equals (a, b) {\n  if (a === b) return true\n  if (a.byteLength !== b.byteLength) return false\n\n  const len = a.byteLength\n\n  a = new DataView(a.buffer, a.byteOffset, a.byteLength)\n  b = new DataView(b.buffer, b.byteOffset, b.byteLength)\n\n  let i = 0\n\n  for (let n = len - (len % 4); i < n; i += 4) {\n    if (a.getUint32(i, LE) !== b.getUint32(i, LE)) return false\n  }\n\n  for (; i < len; i++) {\n    if (a.getUint8(i) !== b.getUint8(i)) return false\n  }\n\n  return true\n}\n\nfunction fill (buffer, value, offset, end, encoding) {\n  if (typeof value === 'string') {\n    // fill(buffer, string, encoding)\n    if (typeof offset === 'string') {\n      encoding = offset\n      offset = 0\n      end = buffer.byteLength\n\n    // fill(buffer, string, offset, encoding)\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = buffer.byteLength\n    }\n  } else if (typeof value === 'number') {\n    value = value & 0xff\n  } else if (typeof value === 'boolean') {\n    value = +value\n  }\n\n  if (offset < 0 || buffer.byteLength < offset || buffer.byteLength < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (offset === undefined) offset = 0\n  if (end === undefined) end = buffer.byteLength\n\n  if (end <= offset) return buffer\n\n  if (!value) value = 0\n\n  if (typeof value === 'number') {\n    for (let i = offset; i < end; ++i) {\n      buffer[i] = value\n    }\n  } else {\n    value = isBuffer(value) ? value : from(value, encoding)\n\n    const len = value.byteLength\n\n    for (let i = 0; i < end - offset; ++i) {\n      buffer[i + offset] = value[i % len]\n    }\n  }\n\n  return buffer\n}\n\nfunction from (value, encodingOrOffset, length) {\n  // from(string, encoding)\n  if (typeof value === 'string') return fromString(value, encodingOrOffset)\n\n  // from(array)\n  if (Array.isArray(value)) return fromArray(value)\n\n  // from(buffer)\n  if (ArrayBuffer.isView(value)) return fromBuffer(value)\n\n  // from(arrayBuffer[, byteOffset[, length]])\n  return fromArrayBuffer(value, encodingOrOffset, length)\n}\n\nfunction fromString (string, encoding) {\n  const codec = codecFor(encoding)\n  const buffer = new Uint8Array(codec.byteLength(string))\n  codec.write(buffer, string, 0, buffer.byteLength)\n  return buffer\n}\n\nfunction fromArray (array) {\n  const buffer = new Uint8Array(array.length)\n  buffer.set(array)\n  return buffer\n}\n\nfunction fromBuffer (buffer) {\n  const copy = new Uint8Array(buffer.byteLength)\n  copy.set(buffer)\n  return copy\n}\n\nfunction fromArrayBuffer (arrayBuffer, byteOffset, length) {\n  return new Uint8Array(arrayBuffer, byteOffset, length)\n}\n\nfunction includes (buffer, value, byteOffset, encoding) {\n  return indexOf(buffer, value, byteOffset, encoding) !== -1\n}\n\nfunction bidirectionalIndexOf (buffer, value, byteOffset, encoding, first) {\n  if (buffer.byteLength === 0) return -1\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset === undefined) {\n    byteOffset = first ? 0 : (buffer.length - 1)\n  } else if (byteOffset < 0) {\n    byteOffset += buffer.byteLength\n  }\n\n  if (byteOffset >= buffer.byteLength) {\n    if (first) return -1\n    else byteOffset = buffer.byteLength - 1\n  } else if (byteOffset < 0) {\n    if (first) byteOffset = 0\n    else return -1\n  }\n\n  if (typeof value === 'string') {\n    value = from(value, encoding)\n  } else if (typeof value === 'number') {\n    value = value & 0xff\n\n    if (first) {\n      return buffer.indexOf(value, byteOffset)\n    } else {\n      return buffer.lastIndexOf(value, byteOffset)\n    }\n  }\n\n  if (value.byteLength === 0) return -1\n\n  if (first) {\n    let foundIndex = -1\n\n    for (let i = byteOffset; i < buffer.byteLength; i++) {\n      if (buffer[i] === value[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === value.byteLength) return foundIndex\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + value.byteLength > buffer.byteLength) {\n      byteOffset = buffer.byteLength - value.byteLength\n    }\n\n    for (let i = byteOffset; i >= 0; i--) {\n      let found = true\n\n      for (let j = 0; j < value.byteLength; j++) {\n        if (buffer[i + j] !== value[j]) {\n          found = false\n          break\n        }\n      }\n\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nfunction indexOf (buffer, value, byteOffset, encoding) {\n  return bidirectionalIndexOf(buffer, value, byteOffset, encoding, true /* first */)\n}\n\nfunction lastIndexOf (buffer, value, byteOffset, encoding) {\n  return bidirectionalIndexOf(buffer, value, byteOffset, encoding, false /* last */)\n}\n\nfunction swap (buffer, n, m) {\n  const i = buffer[n]\n  buffer[n] = buffer[m]\n  buffer[m] = i\n}\n\nfunction swap16 (buffer) {\n  const len = buffer.byteLength\n\n  if (len % 2 !== 0) throw new RangeError('Buffer size must be a multiple of 16-bits')\n\n  for (let i = 0; i < len; i += 2) swap(buffer, i, i + 1)\n\n  return buffer\n}\n\nfunction swap32 (buffer) {\n  const len = buffer.byteLength\n\n  if (len % 4 !== 0) throw new RangeError('Buffer size must be a multiple of 32-bits')\n\n  for (let i = 0; i < len; i += 4) {\n    swap(buffer, i, i + 3)\n    swap(buffer, i + 1, i + 2)\n  }\n\n  return buffer\n}\n\nfunction swap64 (buffer) {\n  const len = buffer.byteLength\n\n  if (len % 8 !== 0) throw new RangeError('Buffer size must be a multiple of 64-bits')\n\n  for (let i = 0; i < len; i += 8) {\n    swap(buffer, i, i + 7)\n    swap(buffer, i + 1, i + 6)\n    swap(buffer, i + 2, i + 5)\n    swap(buffer, i + 3, i + 4)\n  }\n\n  return buffer\n}\n\nfunction toBuffer (buffer) {\n  return buffer\n}\n\nfunction toString (buffer, encoding, start = 0, end = buffer.byteLength) {\n  const len = buffer.byteLength\n\n  if (start >= len) return ''\n  if (end <= start) return ''\n  if (start < 0) start = 0\n  if (end > len) end = len\n\n  if (start !== 0 || end < len) buffer = buffer.subarray(start, end)\n\n  return codecFor(encoding).toString(buffer)\n}\n\nfunction write (buffer, string, offset, length, encoding) {\n  // write(buffer, string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n\n  // write(buffer, string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    offset = undefined\n\n  // write(buffer, string, offset, encoding)\n  } else if (encoding === undefined && typeof length === 'string') {\n    encoding = length\n    length = undefined\n  }\n\n  return codecFor(encoding).write(buffer, string, offset, length)\n}\n\nfunction writeDoubleLE (buffer, value, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n  view.setFloat64(offset, value, true)\n\n  return offset + 8\n}\n\nfunction writeFloatLE (buffer, value, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n  view.setFloat32(offset, value, true)\n\n  return offset + 4\n}\n\nfunction writeUInt32LE (buffer, value, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n  view.setUint32(offset, value, true)\n\n  return offset + 4\n}\n\nfunction writeInt32LE (buffer, value, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n  view.setInt32(offset, value, true)\n\n  return offset + 4\n}\n\nfunction readDoubleLE (buffer, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\n  return view.getFloat64(offset, true)\n}\n\nfunction readFloatLE (buffer, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\n  return view.getFloat32(offset, true)\n}\n\nfunction readUInt32LE (buffer, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\n  return view.getUint32(offset, true)\n}\n\nfunction readInt32LE (buffer, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\n  return view.getInt32(offset, true)\n}\n\nfunction writeDoubleBE (buffer, value, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n  view.setFloat64(offset, value, false)\n\n  return offset + 8\n}\n\nfunction writeFloatBE (buffer, value, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n  view.setFloat32(offset, value, false)\n\n  return offset + 4\n}\n\nfunction writeUInt32BE (buffer, value, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n  view.setUint32(offset, value, false)\n\n  return offset + 4\n}\n\nfunction writeInt32BE (buffer, value, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n  view.setInt32(offset, value, false)\n\n  return offset + 4\n}\n\nfunction readDoubleBE (buffer, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\n  return view.getFloat64(offset, false)\n}\n\nfunction readFloatBE (buffer, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\n  return view.getFloat32(offset, false)\n}\n\nfunction readUInt32BE (buffer, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\n  return view.getUint32(offset, false)\n}\n\nfunction readInt32BE (buffer, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\n  return view.getInt32(offset, false)\n}\n\nmodule.exports = exports = {\n  isBuffer,\n  isEncoding,\n  alloc,\n  allocUnsafe,\n  allocUnsafeSlow,\n  byteLength,\n  compare,\n  concat,\n  copy,\n  equals,\n  fill,\n  from,\n  includes,\n  indexOf,\n  lastIndexOf,\n  swap16,\n  swap32,\n  swap64,\n  toBuffer,\n  toString,\n  write,\n  writeDoubleLE,\n  writeFloatLE,\n  writeUInt32LE,\n  writeInt32LE,\n  readDoubleLE,\n  readFloatLE,\n  readUInt32LE,\n  readInt32LE,\n  writeDoubleBE,\n  writeFloatBE,\n  writeUInt32BE,\n  writeInt32BE,\n  readDoubleBE,\n  readFloatBE,\n  readUInt32BE,\n  readInt32BE\n}\n", "const b4a = require('b4a')\n\nvar EMPTY = []\n\nmodule.exports = RecordCache\n\nfunction RecordSet () {\n  this.list = []\n  this.map = new Map()\n}\n\nRecordSet.prototype.add = function (record, value) {\n  var k = toString(record)\n  var r = this.map.get(k)\n  if (r) return false\n\n  r = {index: this.list.length, record: value || record}\n  this.list.push(r)\n  this.map.set(k, r)\n  return true\n}\n\nRecordSet.prototype.remove = function (record) {\n  var k = toString(record)\n  var r = this.map.get(k)\n  if (!r) return false\n\n  swap(this.list, r.index, this.list.length - 1)\n  this.list.pop()\n  this.map.delete(k)\n  return true\n}\n\nfunction RecordStore () {\n  this.records = new Map()\n  this.size = 0\n}\n\nRecordStore.prototype.add = function (name, record, value) {\n  var r = this.records.get(name)\n\n  if (!r) {\n    r = new RecordSet()\n    this.records.set(name, r)\n  }\n\n  if (r.add(record, value)) {\n    this.size++\n    return true\n  }\n\n  return false\n}\n\nRecordStore.prototype.remove = function (name, record, value) {\n  var r = this.records.get(name)\n  if (!r) return false\n\n  if (r.remove(record, value)) {\n    this.size--\n    if (!r.map.size) this.records.delete(name)\n    return true\n  }\n\n  return false\n}\n\nRecordStore.prototype.get = function (name) {\n  var r = this.records.get(name)\n  return r ? r.list : EMPTY\n}\n\nfunction RecordCache (opts) {\n  if (!(this instanceof RecordCache)) return new RecordCache(opts)\n  if (!opts) opts = {}\n\n  this.maxSize = opts.maxSize || Infinity\n  this.maxAge = opts.maxAge || 0\n\n  this._onstale = opts.onStale || opts.onstale || null\n  this._fresh = new RecordStore()\n  this._stale = new RecordStore()\n  this._interval = null\n  this._gced = false\n\n  if (this.maxAge && this.maxAge < Infinity) {\n    // 2/3 gives us a span of 0.66-1.33 maxAge or avg maxAge\n    var tick = Math.ceil(2 / 3 * this.maxAge)\n    this._interval = setInterval(this._gcAuto.bind(this), tick)\n    if (this._interval.unref) this._interval.unref()\n  }\n}\n\nObject.defineProperty(RecordCache.prototype, 'size', {\n  get: function () {\n    return this._fresh.size + this._stale.size\n  }\n})\n\nRecordCache.prototype.add = function (name, record, value) {\n  this._stale.remove(name, record, value)\n  if (this._fresh.add(name, record, value) && this._fresh.size > this.maxSize) {\n    this._gc()\n  }\n}\n\nRecordCache.prototype.remove = function (name, record, value) {\n  this._fresh.remove(name, record, value)\n  this._stale.remove(name, record, value)\n}\n\nRecordCache.prototype.get = function (name, n) {\n  var a = this._fresh.get(name)\n  var b = this._stale.get(name)\n  var aLen = a.length\n  var bLen = b.length\n  var len = aLen + bLen\n\n  if (n > len || !n) n = len\n  var result = new Array(n)\n\n  for (var i = 0; i < n; i++) {\n    var j = Math.floor(Math.random() * (aLen + bLen))\n    if (j < aLen) {\n      result[i] = a[j].record\n      swap(a, j, --aLen)\n    } else {\n      j -= aLen\n      result[i] = b[j].record\n      swap(b, j, --bLen)\n    }\n  }\n\n  return result\n}\n\nRecordCache.prototype._gcAuto = function () {\n  if (!this._gced) this._gc()\n  this._gced = false\n}\n\nRecordCache.prototype._gc = function () {\n  if (this._onstale && this._stale.size > 0) this._onstale(this._stale)\n  this._stale = this._fresh\n  this._fresh = new RecordStore()\n  this._gced = true\n}\n\nRecordCache.prototype.clear = function () {\n  this._gc()\n  this._gc()\n}\n\nRecordCache.prototype.destroy = function () {\n  this.clear()\n  clearInterval(this._interval)\n  this._interval = null\n}\n\nfunction toString (record) {\n  return b4a.isBuffer(record) ? b4a.toString(record, 'hex') : record\n}\n\nfunction swap (list, a, b) {\n  var tmp = list[a]\n  tmp.index = b\n  list[b].index = a\n  list[a] = list[b]\n  list[b] = tmp\n}\n", "// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n", "var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"ws\" has been externalized for browser compatibility. Cannot access \"ws.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"bittorrent-lsd\" has been externalized for browser compatibility. Cannot access \"bittorrent-lsd.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/*! immediate-chunk-store. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n// TODO: remove when window.queueMicrotask() is well supported\nconst queueMicrotask = require('queue-microtask')\n\nclass ImmediateStore {\n  constructor (store) {\n    this.store = store\n    this.chunkLength = store.chunkLength\n\n    if (!this.store || !this.store.get || !this.store.put) {\n      throw new Error('First argument must be abstract-chunk-store compliant')\n    }\n\n    this.mem = []\n  }\n\n  put (index, buf, cb = () => {}) {\n    this.mem[index] = buf\n    this.store.put(index, buf, err => {\n      this.mem[index] = null\n      cb(err)\n    })\n  }\n\n  get (index, opts, cb = () => {}) {\n    if (typeof opts === 'function') return this.get(index, null, opts)\n\n    let buf = this.mem[index]\n\n    // if the chunk isn't in the immediate memory cache\n    if (!buf) {\n      return this.store.get(index, opts, cb)\n    }\n\n    if (!opts) opts = {}\n\n    const offset = opts.offset || 0\n    const len = opts.length || (buf.length - offset)\n\n    if (offset !== 0 || len !== buf.length) {\n      buf = buf.slice(offset, len + offset)\n    }\n    queueMicrotask(() => cb(null, buf))\n  }\n\n  close (cb = () => {}) {\n    this.store.close(cb)\n  }\n\n  destroy (cb = () => {}) {\n    this.store.destroy(cb)\n  }\n}\n\nmodule.exports = ImmediateStore\n", "module.exports = Storage\n\nconst queueMicrotask = require('queue-microtask')\n\nfunction Storage (chunkLength, opts) {\n  if (!(this instanceof Storage)) return new Storage(chunkLength, opts)\n  if (!opts) opts = {}\n\n  this.chunkLength = Number(chunkLength)\n  if (!this.chunkLength) throw new Error('First argument must be a chunk length')\n\n  this.chunks = []\n  this.closed = false\n  this.length = Number(opts.length) || Infinity\n\n  if (this.length !== Infinity) {\n    this.lastChunkLength = (this.length % this.chunkLength) || this.chunkLength\n    this.lastChunkIndex = Math.ceil(this.length / this.chunkLength) - 1\n  }\n}\n\nStorage.prototype.put = function (index, buf, cb = () => {}) {\n  if (this.closed) return queueMicrotask(() => cb(new Error('Storage is closed')))\n\n  const isLastChunk = (index === this.lastChunkIndex)\n  if (isLastChunk && buf.length !== this.lastChunkLength) {\n    return queueMicrotask(() => cb(new Error('Last chunk length must be ' + this.lastChunkLength)))\n  }\n  if (!isLastChunk && buf.length !== this.chunkLength) {\n    return queueMicrotask(() => cb(new Error('Chunk length must be ' + this.chunkLength)))\n  }\n  this.chunks[index] = buf\n  queueMicrotask(() => cb(null))\n}\n\nStorage.prototype.get = function (index, opts, cb = () => {}) {\n  if (typeof opts === 'function') return this.get(index, null, opts)\n  if (this.closed) return queueMicrotask(() => cb(new Error('Storage is closed')))\n\n  let buf = this.chunks[index]\n\n  if (!buf) {\n    const err = new Error('Chunk not found')\n    err.notFound = true\n    return queueMicrotask(() => cb(err))\n  }\n\n  if (!opts) opts = {}\n\n  const offset = opts.offset || 0\n  const len = opts.length || (buf.length - offset)\n\n  if (offset !== 0 || len !== buf.length) {\n    buf = buf.slice(offset, len + offset)\n  }\n\n  queueMicrotask(() => cb(null, buf))\n}\n\nStorage.prototype.close = Storage.prototype.destroy = function (cb = () => {}) {\n  if (this.closed) return queueMicrotask(() => cb(new Error('Storage is closed')))\n  this.closed = true\n  this.chunks = null\n  queueMicrotask(() => cb(null))\n}\n", "/*! run-parallel-limit. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = runParallelLimit\n\nconst queueMicrotask = require('queue-microtask')\n\nfunction runParallelLimit (tasks, limit, cb) {\n  if (typeof limit !== 'number') throw new Error('second argument must be a Number')\n  let results, len, pending, keys, isErrored\n  let isSync = true\n  let next\n\n  if (Array.isArray(tasks)) {\n    results = []\n    pending = len = tasks.length\n  } else {\n    keys = Object.keys(tasks)\n    results = {}\n    pending = len = keys.length\n  }\n\n  function done (err) {\n    function end () {\n      if (cb) cb(err, results)\n      cb = null\n    }\n    if (isSync) queueMicrotask(end)\n    else end()\n  }\n\n  function each (i, err, result) {\n    results[i] = result\n    if (err) isErrored = true\n    if (--pending === 0 || err) {\n      done(err)\n    } else if (!isErrored && next < len) {\n      let key\n      if (keys) {\n        key = keys[next]\n        next += 1\n        tasks[key](function (err, result) { each(key, err, result) })\n      } else {\n        key = next\n        next += 1\n        tasks[key](function (err, result) { each(key, err, result) })\n      }\n    }\n  }\n\n  next = limit\n  if (!pending) {\n    // empty\n    done(null)\n  } else if (keys) {\n    // object\n    keys.some(function (key, i) {\n      tasks[key](function (err, result) { each(key, err, result) })\n      if (i === limit - 1) return true // early return\n      return false\n    })\n  } else {\n    // array\n    tasks.some(function (task, i) {\n      task(function (err, result) { each(i, err, result) })\n      if (i === limit - 1) return true // early return\n      return false\n    })\n  }\n\n  isSync = false\n}\n", "var iterate = function (list) {\n  var offset = 0\n  return function () {\n    if (offset === list.length) return null\n\n    var len = list.length - offset\n    var i = (Math.random() * len) | 0\n    var el = list[offset + i]\n\n    var tmp = list[offset]\n    list[offset] = el\n    list[offset + i] = tmp\n    offset++\n\n    return el\n  }\n}\n\nmodule.exports = iterate\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"ut_pex\" has been externalized for browser compatibility. Cannot access \"ut_pex.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict';\n\n/**\n * @param typeMap [Object] Map of MIME type -> Array[extensions]\n * @param ...\n */\nfunction Mime() {\n  this._types = Object.create(null);\n  this._extensions = Object.create(null);\n\n  for (let i = 0; i < arguments.length; i++) {\n    this.define(arguments[i]);\n  }\n\n  this.define = this.define.bind(this);\n  this.getType = this.getType.bind(this);\n  this.getExtension = this.getExtension.bind(this);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * If a type declares an extension that has already been defined, an error will\n * be thrown.  To suppress this error and force the extension to be associated\n * with the new type, pass `force`=true.  Alternatively, you may prefix the\n * extension with \"*\" to map the type to extension, without mapping the\n * extension to the type.\n *\n * e.g. mime.define({'audio/wav', ['wav']}, {'audio/x-wav', ['*wav']});\n *\n *\n * @param map (Object) type definitions\n * @param force (Boolean) if true, force overriding of existing definitions\n */\nMime.prototype.define = function(typeMap, force) {\n  for (let type in typeMap) {\n    let extensions = typeMap[type].map(function(t) {\n      return t.toLowerCase();\n    });\n    type = type.toLowerCase();\n\n    for (let i = 0; i < extensions.length; i++) {\n      const ext = extensions[i];\n\n      // '*' prefix = not the preferred type for this extension.  So fixup the\n      // extension, and skip it.\n      if (ext[0] === '*') {\n        continue;\n      }\n\n      if (!force && (ext in this._types)) {\n        throw new Error(\n          'Attempt to change mapping for \"' + ext +\n          '\" extension from \"' + this._types[ext] + '\" to \"' + type +\n          '\". Pass `force=true` to allow this, otherwise remove \"' + ext +\n          '\" from the list of extensions for \"' + type + '\".'\n        );\n      }\n\n      this._types[ext] = type;\n    }\n\n    // Use first extension as default\n    if (force || !this._extensions[type]) {\n      const ext = extensions[0];\n      this._extensions[type] = (ext[0] !== '*') ? ext : ext.substr(1);\n    }\n  }\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.getType = function(path) {\n  path = String(path);\n  let last = path.replace(/^.*[/\\\\]/, '').toLowerCase();\n  let ext = last.replace(/^.*\\./, '').toLowerCase();\n\n  let hasPath = last.length < path.length;\n  let hasDot = ext.length < last.length - 1;\n\n  return (hasDot || !hasPath) && this._types[ext] || null;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.getExtension = function(type) {\n  type = /^\\s*([^;\\s]*)/.test(type) && RegExp.$1;\n  return type && this._extensions[type.toLowerCase()] || null;\n};\n\nmodule.exports = Mime;\n", "module.exports = {\"application/andrew-inset\":[\"ez\"],\"application/applixware\":[\"aw\"],\"application/atom+xml\":[\"atom\"],\"application/atomcat+xml\":[\"atomcat\"],\"application/atomdeleted+xml\":[\"atomdeleted\"],\"application/atomsvc+xml\":[\"atomsvc\"],\"application/atsc-dwd+xml\":[\"dwd\"],\"application/atsc-held+xml\":[\"held\"],\"application/atsc-rsat+xml\":[\"rsat\"],\"application/bdoc\":[\"bdoc\"],\"application/calendar+xml\":[\"xcs\"],\"application/ccxml+xml\":[\"ccxml\"],\"application/cdfx+xml\":[\"cdfx\"],\"application/cdmi-capability\":[\"cdmia\"],\"application/cdmi-container\":[\"cdmic\"],\"application/cdmi-domain\":[\"cdmid\"],\"application/cdmi-object\":[\"cdmio\"],\"application/cdmi-queue\":[\"cdmiq\"],\"application/cu-seeme\":[\"cu\"],\"application/dash+xml\":[\"mpd\"],\"application/davmount+xml\":[\"davmount\"],\"application/docbook+xml\":[\"dbk\"],\"application/dssc+der\":[\"dssc\"],\"application/dssc+xml\":[\"xdssc\"],\"application/ecmascript\":[\"es\",\"ecma\"],\"application/emma+xml\":[\"emma\"],\"application/emotionml+xml\":[\"emotionml\"],\"application/epub+zip\":[\"epub\"],\"application/exi\":[\"exi\"],\"application/express\":[\"exp\"],\"application/fdt+xml\":[\"fdt\"],\"application/font-tdpfr\":[\"pfr\"],\"application/geo+json\":[\"geojson\"],\"application/gml+xml\":[\"gml\"],\"application/gpx+xml\":[\"gpx\"],\"application/gxf\":[\"gxf\"],\"application/gzip\":[\"gz\"],\"application/hjson\":[\"hjson\"],\"application/hyperstudio\":[\"stk\"],\"application/inkml+xml\":[\"ink\",\"inkml\"],\"application/ipfix\":[\"ipfix\"],\"application/its+xml\":[\"its\"],\"application/java-archive\":[\"jar\",\"war\",\"ear\"],\"application/java-serialized-object\":[\"ser\"],\"application/java-vm\":[\"class\"],\"application/javascript\":[\"js\",\"mjs\"],\"application/json\":[\"json\",\"map\"],\"application/json5\":[\"json5\"],\"application/jsonml+json\":[\"jsonml\"],\"application/ld+json\":[\"jsonld\"],\"application/lgr+xml\":[\"lgr\"],\"application/lost+xml\":[\"lostxml\"],\"application/mac-binhex40\":[\"hqx\"],\"application/mac-compactpro\":[\"cpt\"],\"application/mads+xml\":[\"mads\"],\"application/manifest+json\":[\"webmanifest\"],\"application/marc\":[\"mrc\"],\"application/marcxml+xml\":[\"mrcx\"],\"application/mathematica\":[\"ma\",\"nb\",\"mb\"],\"application/mathml+xml\":[\"mathml\"],\"application/mbox\":[\"mbox\"],\"application/mediaservercontrol+xml\":[\"mscml\"],\"application/metalink+xml\":[\"metalink\"],\"application/metalink4+xml\":[\"meta4\"],\"application/mets+xml\":[\"mets\"],\"application/mmt-aei+xml\":[\"maei\"],\"application/mmt-usd+xml\":[\"musd\"],\"application/mods+xml\":[\"mods\"],\"application/mp21\":[\"m21\",\"mp21\"],\"application/mp4\":[\"mp4s\",\"m4p\"],\"application/msword\":[\"doc\",\"dot\"],\"application/mxf\":[\"mxf\"],\"application/n-quads\":[\"nq\"],\"application/n-triples\":[\"nt\"],\"application/node\":[\"cjs\"],\"application/octet-stream\":[\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"],\"application/oda\":[\"oda\"],\"application/oebps-package+xml\":[\"opf\"],\"application/ogg\":[\"ogx\"],\"application/omdoc+xml\":[\"omdoc\"],\"application/onenote\":[\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"],\"application/oxps\":[\"oxps\"],\"application/p2p-overlay+xml\":[\"relo\"],\"application/patch-ops-error+xml\":[\"xer\"],\"application/pdf\":[\"pdf\"],\"application/pgp-encrypted\":[\"pgp\"],\"application/pgp-signature\":[\"asc\",\"sig\"],\"application/pics-rules\":[\"prf\"],\"application/pkcs10\":[\"p10\"],\"application/pkcs7-mime\":[\"p7m\",\"p7c\"],\"application/pkcs7-signature\":[\"p7s\"],\"application/pkcs8\":[\"p8\"],\"application/pkix-attr-cert\":[\"ac\"],\"application/pkix-cert\":[\"cer\"],\"application/pkix-crl\":[\"crl\"],\"application/pkix-pkipath\":[\"pkipath\"],\"application/pkixcmp\":[\"pki\"],\"application/pls+xml\":[\"pls\"],\"application/postscript\":[\"ai\",\"eps\",\"ps\"],\"application/provenance+xml\":[\"provx\"],\"application/pskc+xml\":[\"pskcxml\"],\"application/raml+yaml\":[\"raml\"],\"application/rdf+xml\":[\"rdf\",\"owl\"],\"application/reginfo+xml\":[\"rif\"],\"application/relax-ng-compact-syntax\":[\"rnc\"],\"application/resource-lists+xml\":[\"rl\"],\"application/resource-lists-diff+xml\":[\"rld\"],\"application/rls-services+xml\":[\"rs\"],\"application/route-apd+xml\":[\"rapd\"],\"application/route-s-tsid+xml\":[\"sls\"],\"application/route-usd+xml\":[\"rusd\"],\"application/rpki-ghostbusters\":[\"gbr\"],\"application/rpki-manifest\":[\"mft\"],\"application/rpki-roa\":[\"roa\"],\"application/rsd+xml\":[\"rsd\"],\"application/rss+xml\":[\"rss\"],\"application/rtf\":[\"rtf\"],\"application/sbml+xml\":[\"sbml\"],\"application/scvp-cv-request\":[\"scq\"],\"application/scvp-cv-response\":[\"scs\"],\"application/scvp-vp-request\":[\"spq\"],\"application/scvp-vp-response\":[\"spp\"],\"application/sdp\":[\"sdp\"],\"application/senml+xml\":[\"senmlx\"],\"application/sensml+xml\":[\"sensmlx\"],\"application/set-payment-initiation\":[\"setpay\"],\"application/set-registration-initiation\":[\"setreg\"],\"application/shf+xml\":[\"shf\"],\"application/sieve\":[\"siv\",\"sieve\"],\"application/smil+xml\":[\"smi\",\"smil\"],\"application/sparql-query\":[\"rq\"],\"application/sparql-results+xml\":[\"srx\"],\"application/srgs\":[\"gram\"],\"application/srgs+xml\":[\"grxml\"],\"application/sru+xml\":[\"sru\"],\"application/ssdl+xml\":[\"ssdl\"],\"application/ssml+xml\":[\"ssml\"],\"application/swid+xml\":[\"swidtag\"],\"application/tei+xml\":[\"tei\",\"teicorpus\"],\"application/thraud+xml\":[\"tfi\"],\"application/timestamped-data\":[\"tsd\"],\"application/toml\":[\"toml\"],\"application/trig\":[\"trig\"],\"application/ttml+xml\":[\"ttml\"],\"application/ubjson\":[\"ubj\"],\"application/urc-ressheet+xml\":[\"rsheet\"],\"application/urc-targetdesc+xml\":[\"td\"],\"application/voicexml+xml\":[\"vxml\"],\"application/wasm\":[\"wasm\"],\"application/widget\":[\"wgt\"],\"application/winhlp\":[\"hlp\"],\"application/wsdl+xml\":[\"wsdl\"],\"application/wspolicy+xml\":[\"wspolicy\"],\"application/xaml+xml\":[\"xaml\"],\"application/xcap-att+xml\":[\"xav\"],\"application/xcap-caps+xml\":[\"xca\"],\"application/xcap-diff+xml\":[\"xdf\"],\"application/xcap-el+xml\":[\"xel\"],\"application/xcap-ns+xml\":[\"xns\"],\"application/xenc+xml\":[\"xenc\"],\"application/xhtml+xml\":[\"xhtml\",\"xht\"],\"application/xliff+xml\":[\"xlf\"],\"application/xml\":[\"xml\",\"xsl\",\"xsd\",\"rng\"],\"application/xml-dtd\":[\"dtd\"],\"application/xop+xml\":[\"xop\"],\"application/xproc+xml\":[\"xpl\"],\"application/xslt+xml\":[\"*xsl\",\"xslt\"],\"application/xspf+xml\":[\"xspf\"],\"application/xv+xml\":[\"mxml\",\"xhvml\",\"xvml\",\"xvm\"],\"application/yang\":[\"yang\"],\"application/yin+xml\":[\"yin\"],\"application/zip\":[\"zip\"],\"audio/3gpp\":[\"*3gpp\"],\"audio/adpcm\":[\"adp\"],\"audio/amr\":[\"amr\"],\"audio/basic\":[\"au\",\"snd\"],\"audio/midi\":[\"mid\",\"midi\",\"kar\",\"rmi\"],\"audio/mobile-xmf\":[\"mxmf\"],\"audio/mp3\":[\"*mp3\"],\"audio/mp4\":[\"m4a\",\"mp4a\"],\"audio/mpeg\":[\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"],\"audio/ogg\":[\"oga\",\"ogg\",\"spx\",\"opus\"],\"audio/s3m\":[\"s3m\"],\"audio/silk\":[\"sil\"],\"audio/wav\":[\"wav\"],\"audio/wave\":[\"*wav\"],\"audio/webm\":[\"weba\"],\"audio/xm\":[\"xm\"],\"font/collection\":[\"ttc\"],\"font/otf\":[\"otf\"],\"font/ttf\":[\"ttf\"],\"font/woff\":[\"woff\"],\"font/woff2\":[\"woff2\"],\"image/aces\":[\"exr\"],\"image/apng\":[\"apng\"],\"image/avif\":[\"avif\"],\"image/bmp\":[\"bmp\"],\"image/cgm\":[\"cgm\"],\"image/dicom-rle\":[\"drle\"],\"image/emf\":[\"emf\"],\"image/fits\":[\"fits\"],\"image/g3fax\":[\"g3\"],\"image/gif\":[\"gif\"],\"image/heic\":[\"heic\"],\"image/heic-sequence\":[\"heics\"],\"image/heif\":[\"heif\"],\"image/heif-sequence\":[\"heifs\"],\"image/hej2k\":[\"hej2\"],\"image/hsj2\":[\"hsj2\"],\"image/ief\":[\"ief\"],\"image/jls\":[\"jls\"],\"image/jp2\":[\"jp2\",\"jpg2\"],\"image/jpeg\":[\"jpeg\",\"jpg\",\"jpe\"],\"image/jph\":[\"jph\"],\"image/jphc\":[\"jhc\"],\"image/jpm\":[\"jpm\"],\"image/jpx\":[\"jpx\",\"jpf\"],\"image/jxr\":[\"jxr\"],\"image/jxra\":[\"jxra\"],\"image/jxrs\":[\"jxrs\"],\"image/jxs\":[\"jxs\"],\"image/jxsc\":[\"jxsc\"],\"image/jxsi\":[\"jxsi\"],\"image/jxss\":[\"jxss\"],\"image/ktx\":[\"ktx\"],\"image/ktx2\":[\"ktx2\"],\"image/png\":[\"png\"],\"image/sgi\":[\"sgi\"],\"image/svg+xml\":[\"svg\",\"svgz\"],\"image/t38\":[\"t38\"],\"image/tiff\":[\"tif\",\"tiff\"],\"image/tiff-fx\":[\"tfx\"],\"image/webp\":[\"webp\"],\"image/wmf\":[\"wmf\"],\"message/disposition-notification\":[\"disposition-notification\"],\"message/global\":[\"u8msg\"],\"message/global-delivery-status\":[\"u8dsn\"],\"message/global-disposition-notification\":[\"u8mdn\"],\"message/global-headers\":[\"u8hdr\"],\"message/rfc822\":[\"eml\",\"mime\"],\"model/3mf\":[\"3mf\"],\"model/gltf+json\":[\"gltf\"],\"model/gltf-binary\":[\"glb\"],\"model/iges\":[\"igs\",\"iges\"],\"model/mesh\":[\"msh\",\"mesh\",\"silo\"],\"model/mtl\":[\"mtl\"],\"model/obj\":[\"obj\"],\"model/step+xml\":[\"stpx\"],\"model/step+zip\":[\"stpz\"],\"model/step-xml+zip\":[\"stpxz\"],\"model/stl\":[\"stl\"],\"model/vrml\":[\"wrl\",\"vrml\"],\"model/x3d+binary\":[\"*x3db\",\"x3dbz\"],\"model/x3d+fastinfoset\":[\"x3db\"],\"model/x3d+vrml\":[\"*x3dv\",\"x3dvz\"],\"model/x3d+xml\":[\"x3d\",\"x3dz\"],\"model/x3d-vrml\":[\"x3dv\"],\"text/cache-manifest\":[\"appcache\",\"manifest\"],\"text/calendar\":[\"ics\",\"ifb\"],\"text/coffeescript\":[\"coffee\",\"litcoffee\"],\"text/css\":[\"css\"],\"text/csv\":[\"csv\"],\"text/html\":[\"html\",\"htm\",\"shtml\"],\"text/jade\":[\"jade\"],\"text/jsx\":[\"jsx\"],\"text/less\":[\"less\"],\"text/markdown\":[\"markdown\",\"md\"],\"text/mathml\":[\"mml\"],\"text/mdx\":[\"mdx\"],\"text/n3\":[\"n3\"],\"text/plain\":[\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"],\"text/richtext\":[\"rtx\"],\"text/rtf\":[\"*rtf\"],\"text/sgml\":[\"sgml\",\"sgm\"],\"text/shex\":[\"shex\"],\"text/slim\":[\"slim\",\"slm\"],\"text/spdx\":[\"spdx\"],\"text/stylus\":[\"stylus\",\"styl\"],\"text/tab-separated-values\":[\"tsv\"],\"text/troff\":[\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"],\"text/turtle\":[\"ttl\"],\"text/uri-list\":[\"uri\",\"uris\",\"urls\"],\"text/vcard\":[\"vcard\"],\"text/vtt\":[\"vtt\"],\"text/xml\":[\"*xml\"],\"text/yaml\":[\"yaml\",\"yml\"],\"video/3gpp\":[\"3gp\",\"3gpp\"],\"video/3gpp2\":[\"3g2\"],\"video/h261\":[\"h261\"],\"video/h263\":[\"h263\"],\"video/h264\":[\"h264\"],\"video/iso.segment\":[\"m4s\"],\"video/jpeg\":[\"jpgv\"],\"video/jpm\":[\"*jpm\",\"jpgm\"],\"video/mj2\":[\"mj2\",\"mjp2\"],\"video/mp2t\":[\"ts\"],\"video/mp4\":[\"mp4\",\"mp4v\",\"mpg4\"],\"video/mpeg\":[\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"],\"video/ogg\":[\"ogv\"],\"video/quicktime\":[\"qt\",\"mov\"],\"video/webm\":[\"webm\"]};", "'use strict';\n\nlet Mime = require('./Mime');\nmodule.exports = new Mime(require('./types/standard'));\n", "{\n  \"name\": \"webtorrent\",\n  \"description\": \"Streaming torrent client\",\n  \"version\": \"2.5.6\",\n  \"author\": {\n    \"name\": \"WebTorrent LLC\",\n    \"email\": \"feross@webtorrent.io\",\n    \"url\": \"https://webtorrent.io\"\n  },\n  \"type\": \"module\",\n  \"browser\": {\n    \"./lib/conn-pool.js\": false,\n    \"./lib/utp.cjs\": false,\n    \"@silentbot1/nat-api\": false,\n    \"bittorrent-dht\": false,\n    \"crypto\": false,\n    \"fs\": false,\n    \"fs-chunk-store\": \"fsa-chunk-store\",\n    \"http\": false,\n    \"load-ip-set\": false,\n    \"net\": false,\n    \"os\": false,\n    \"ut_pex\": false\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/webtorrent/webtorrent/issues\"\n  },\n  \"chromeapp\": {\n    \"./lib/utp.cjs\": false,\n    \"@silentbot1/nat-api\": false,\n    \"fs\": false,\n    \"fs-chunk-store\": \"memory-chunk-store\",\n    \"http\": \"@webtorrent/http-node\",\n    \"https\": \"@webtorrent/http-node\",\n    \"load-ip-set\": false,\n    \"net\": \"chrome-net\",\n    \"os\": false\n  },\n  \"dependencies\": {\n    \"@silentbot1/nat-api\": \"^0.4.7\",\n    \"@thaunknown/simple-peer\": \"^10.0.11\",\n    \"@webtorrent/http-node\": \"^1.3.0\",\n    \"addr-to-ip-port\": \"^2.0.0\",\n    \"bitfield\": \"^4.2.0\",\n    \"bittorrent-dht\": \"^11.0.8\",\n    \"bittorrent-protocol\": \"^4.1.15\",\n    \"cache-chunk-store\": \"^3.2.2\",\n    \"chunk-store-iterator\": \"^1.0.3\",\n    \"cpus\": \"^1.0.3\",\n    \"create-torrent\": \"^6.0.18\",\n    \"cross-fetch-ponyfill\": \"^1.0.3\",\n    \"debug\": \"^4.3.7\",\n    \"escape-html\": \"^1.0.3\",\n    \"fs-chunk-store\": \"^4.1.0\",\n    \"fsa-chunk-store\": \"^1.3.0\",\n    \"immediate-chunk-store\": \"^2.2.0\",\n    \"join-async-iterator\": \"^1.1.1\",\n    \"load-ip-set\": \"^3.0.1\",\n    \"lt_donthave\": \"^2.0.3\",\n    \"memory-chunk-store\": \"^1.3.5\",\n    \"mime\": \"^3.0.0\",\n    \"once\": \"^1.4.0\",\n    \"parse-torrent\": \"^11.0.17\",\n    \"pump\": \"^3.0.2\",\n    \"queue-microtask\": \"^1.2.3\",\n    \"random-iterate\": \"^1.0.1\",\n    \"range-parser\": \"^1.2.1\",\n    \"run-parallel\": \"^1.2.0\",\n    \"run-parallel-limit\": \"^1.1.0\",\n    \"speed-limiter\": \"^1.0.2\",\n    \"streamx\": \"2.20.1\",\n    \"throughput\": \"^1.0.1\",\n    \"torrent-discovery\": \"^11.0.11\",\n    \"torrent-piece\": \"^3.0.0\",\n    \"uint8-util\": \"^2.2.5\",\n    \"unordered-array-remove\": \"^1.0.2\",\n    \"ut_metadata\": \"^4.0.3\",\n    \"ut_pex\": \"^4.0.4\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"7.26.0\",\n    \"@babel/eslint-parser\": \"^7.25.9\",\n    \"@babel/plugin-syntax-import-assertions\": \"7.26.0\",\n    \"@babel/preset-env\": \"7.26.0\",\n    \"@webtorrent/semantic-release-config\": \"1.0.10\",\n    \"airtap\": \"4.0.4\",\n    \"airtap-manual\": \"1.0.0\",\n    \"airtap-sauce\": \"1.1.2\",\n    \"airtap-system\": \"^0.1.0\",\n    \"babelify\": \"10.0.0\",\n    \"bittorrent-tracker\": \"11.1.2\",\n    \"buffer\": \"^6.0.3\",\n    \"chrome-net\": \"^3.3.4\",\n    \"crypto-browserify\": \"^3.12.1\",\n    \"disc\": \"1.3.3\",\n    \"eslint\": \"^8.57.1\",\n    \"eslint-config-standard\": \"^17.1.0\",\n    \"eslint-plugin-import\": \"^2.31.0\",\n    \"eslint-plugin-n\": \"^16.6.2\",\n    \"eslint-plugin-promise\": \"^6.6.0\",\n    \"finalhandler\": \"1.3.1\",\n    \"network-address\": \"1.1.2\",\n    \"pako\": \"^2.1.0\",\n    \"path-esm\": \"^1.0.0\",\n    \"querystring\": \"^0.2.1\",\n    \"run-series\": \"1.1.9\",\n    \"semantic-release\": \"22.0.12\",\n    \"serve-static\": \"1.16.2\",\n    \"stream-browserify\": \"^3.0.0\",\n    \"tap-parser\": \"^16.0.1\",\n    \"tap-spec\": \"^5.0.0\",\n    \"tape\": \"^5.9.0\",\n    \"terser-webpack-plugin\": \"^5.3.10\",\n    \"timers-browserify\": \"^2.0.12\",\n    \"webpack\": \"^5.96.1\",\n    \"webpack-cli\": \"^5.1.4\",\n    \"webtorrent-fixtures\": \"1.7.5\"\n  },\n  \"optionalDependencies\": {\n    \"utp-native\": \"^2.5.3\"\n  },\n  \"engines\": {\n    \"node\": \">=16\"\n  },\n  \"funding\": [\n    {\n      \"type\": \"github\",\n      \"url\": \"https://github.com/sponsors/feross\"\n    },\n    {\n      \"type\": \"patreon\",\n      \"url\": \"https://www.patreon.com/feross\"\n    },\n    {\n      \"type\": \"consulting\",\n      \"url\": \"https://feross.org/support\"\n    }\n  ],\n  \"homepage\": \"https://webtorrent.io\",\n  \"keywords\": [\n    \"bittorrent\",\n    \"bittorrent client\",\n    \"download\",\n    \"mad science\",\n    \"p2p\",\n    \"peer-to-peer\",\n    \"peers\",\n    \"streaming\",\n    \"swarm\",\n    \"torrent\",\n    \"web torrent\",\n    \"webrtc\",\n    \"webrtc data\",\n    \"webtorrent\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"index.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/webtorrent/webtorrent.git\"\n  },\n  \"scripts\": {\n    \"build\": \"npm run build-js && npm run build-js-worker && npm run build-chromeapp\",\n    \"build-chromeapp\": \"webpack --config ./scripts/chromeapp.webpack.js\",\n    \"build-js\": \"webpack --config ./scripts/browser.webpack.js\",\n    \"build-js-worker\": \"webpack --config ./scripts/worker.webpack.js\",\n    \"prepublishOnly\": \"npm run build && npm run update-authors\",\n    \"preversion\": \"npm run build && npm run update-authors\",\n    \"size\": \"npm run size-js && npm run size-disc\",\n    \"size-disc\": \"npm run build-js && cat ./dist/webtorrent.min.js | discify --open\",\n    \"size-js\": \"npm run build-js && cat ./dist/webtorrent.min.js | gzip | wc -c\",\n    \"test\": \"eslint . && npm run test-node && npm run test-browser\",\n    \"test-browser\": \"airtap --concurrency 1 --all -- test/*.js test/browser/*.js | tap-spec\",\n    \"test-browser-local\": \"airtap --preset local -- test/*.js test/browser/*.js | tap-spec\",\n    \"test-node\": \"tape test/*.js test/node/*.js | tap-spec\",\n    \"update-authors\": \"./scripts/update-authors.sh\"\n  },\n  \"renovate\": {\n    \"extends\": [\n      \"github>webtorrent/renovate-config\"\n    ],\n    \"rangeStrategy\": \"bump\"\n  },\n  \"release\": {\n    \"extends\": \"@webtorrent/semantic-release-config\"\n  }\n}\n", "// Exports package.json to work around \"with\" and \"assert\" for backwards compatability.\nmodule.exports = require('./package.json').version\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"http\" has been externalized for browser compatibility. Cannot access \"http.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n", "var once = require('once');\n\nvar noop = function() {};\n\nvar isRequest = function(stream) {\n\treturn stream.setHeader && typeof stream.abort === 'function';\n};\n\nvar isChildProcess = function(stream) {\n\treturn stream.stdio && Array.isArray(stream.stdio) && stream.stdio.length === 3\n};\n\nvar eos = function(stream, opts, callback) {\n\tif (typeof opts === 'function') return eos(stream, null, opts);\n\tif (!opts) opts = {};\n\n\tcallback = once(callback || noop);\n\n\tvar ws = stream._writableState;\n\tvar rs = stream._readableState;\n\tvar readable = opts.readable || (opts.readable !== false && stream.readable);\n\tvar writable = opts.writable || (opts.writable !== false && stream.writable);\n\tvar cancelled = false;\n\n\tvar onlegacyfinish = function() {\n\t\tif (!stream.writable) onfinish();\n\t};\n\n\tvar onfinish = function() {\n\t\twritable = false;\n\t\tif (!readable) callback.call(stream);\n\t};\n\n\tvar onend = function() {\n\t\treadable = false;\n\t\tif (!writable) callback.call(stream);\n\t};\n\n\tvar onexit = function(exitCode) {\n\t\tcallback.call(stream, exitCode ? new Error('exited with error code: ' + exitCode) : null);\n\t};\n\n\tvar onerror = function(err) {\n\t\tcallback.call(stream, err);\n\t};\n\n\tvar onclose = function() {\n\t\tprocess.nextTick(onclosenexttick);\n\t};\n\n\tvar onclosenexttick = function() {\n\t\tif (cancelled) return;\n\t\tif (readable && !(rs && (rs.ended && !rs.destroyed))) return callback.call(stream, new Error('premature close'));\n\t\tif (writable && !(ws && (ws.ended && !ws.destroyed))) return callback.call(stream, new Error('premature close'));\n\t};\n\n\tvar onrequest = function() {\n\t\tstream.req.on('finish', onfinish);\n\t};\n\n\tif (isRequest(stream)) {\n\t\tstream.on('complete', onfinish);\n\t\tstream.on('abort', onclose);\n\t\tif (stream.req) onrequest();\n\t\telse stream.on('request', onrequest);\n\t} else if (writable && !ws) { // legacy streams\n\t\tstream.on('end', onlegacyfinish);\n\t\tstream.on('close', onlegacyfinish);\n\t}\n\n\tif (isChildProcess(stream)) stream.on('exit', onexit);\n\n\tstream.on('end', onend);\n\tstream.on('finish', onfinish);\n\tif (opts.error !== false) stream.on('error', onerror);\n\tstream.on('close', onclose);\n\n\treturn function() {\n\t\tcancelled = true;\n\t\tstream.removeListener('complete', onfinish);\n\t\tstream.removeListener('abort', onclose);\n\t\tstream.removeListener('request', onrequest);\n\t\tif (stream.req) stream.req.removeListener('finish', onfinish);\n\t\tstream.removeListener('end', onlegacyfinish);\n\t\tstream.removeListener('close', onlegacyfinish);\n\t\tstream.removeListener('finish', onfinish);\n\t\tstream.removeListener('exit', onexit);\n\t\tstream.removeListener('end', onend);\n\t\tstream.removeListener('error', onerror);\n\t\tstream.removeListener('close', onclose);\n\t};\n};\n\nmodule.exports = eos;\n", "var once = require('once')\nvar eos = require('end-of-stream')\nvar fs\n\ntry {\n  fs = require('fs') // we only need fs to get the ReadStream and WriteStream prototypes\n} catch (e) {}\n\nvar noop = function () {}\nvar ancient = /^v?\\.0/.test(process.version)\n\nvar isFn = function (fn) {\n  return typeof fn === 'function'\n}\n\nvar isFS = function (stream) {\n  if (!ancient) return false // newer node version do not need to care about fs is a special way\n  if (!fs) return false // browser\n  return (stream instanceof (fs.ReadStream || noop) || stream instanceof (fs.WriteStream || noop)) && isFn(stream.close)\n}\n\nvar isRequest = function (stream) {\n  return stream.setHeader && isFn(stream.abort)\n}\n\nvar destroyer = function (stream, reading, writing, callback) {\n  callback = once(callback)\n\n  var closed = false\n  stream.on('close', function () {\n    closed = true\n  })\n\n  eos(stream, {readable: reading, writable: writing}, function (err) {\n    if (err) return callback(err)\n    closed = true\n    callback()\n  })\n\n  var destroyed = false\n  return function (err) {\n    if (closed) return\n    if (destroyed) return\n    destroyed = true\n\n    if (isFS(stream)) return stream.close(noop) // use close for fs streams to avoid fd leaks\n    if (isRequest(stream)) return stream.abort() // request.destroy just do .end - .abort is what we want\n\n    if (isFn(stream.destroy)) return stream.destroy()\n\n    callback(err || new Error('stream was destroyed'))\n  }\n}\n\nvar call = function (fn) {\n  fn()\n}\n\nvar pipe = function (from, to) {\n  return from.pipe(to)\n}\n\nvar pump = function () {\n  var streams = Array.prototype.slice.call(arguments)\n  var callback = isFn(streams[streams.length - 1] || noop) && streams.pop() || noop\n\n  if (Array.isArray(streams[0])) streams = streams[0]\n  if (streams.length < 2) throw new Error('pump requires two streams per minimum')\n\n  var error\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1\n    var writing = i > 0\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err\n      if (err) destroys.forEach(call)\n      if (reading) return\n      destroys.forEach(call)\n      callback(error)\n    })\n  })\n\n  return streams.reduce(pipe)\n}\n\nmodule.exports = pump\n", "/*!\n * range-parser\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = rangeParser\n\n/**\n * Parse \"Range\" header `str` relative to the given file `size`.\n *\n * @param {Number} size\n * @param {String} str\n * @param {Object} [options]\n * @return {Array}\n * @public\n */\n\nfunction rangeParser (size, str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string')\n  }\n\n  var index = str.indexOf('=')\n\n  if (index === -1) {\n    return -2\n  }\n\n  // split the range string\n  var arr = str.slice(index + 1).split(',')\n  var ranges = []\n\n  // add ranges type\n  ranges.type = str.slice(0, index)\n\n  // parse all ranges\n  for (var i = 0; i < arr.length; i++) {\n    var range = arr[i].split('-')\n    var start = parseInt(range[0], 10)\n    var end = parseInt(range[1], 10)\n\n    // -nnn\n    if (isNaN(start)) {\n      start = size - end\n      end = size - 1\n    // nnn-\n    } else if (isNaN(end)) {\n      end = size - 1\n    }\n\n    // limit last-byte-pos to current length\n    if (end > size - 1) {\n      end = size - 1\n    }\n\n    // invalid or unsatisifiable\n    if (isNaN(start) || isNaN(end) || start > end || start < 0) {\n      continue\n    }\n\n    // add range\n    ranges.push({\n      start: start,\n      end: end\n    })\n  }\n\n  if (ranges.length < 1) {\n    // unsatisifiable\n    return -1\n  }\n\n  return options && options.combine\n    ? combineRanges(ranges)\n    : ranges\n}\n\n/**\n * Combine overlapping & adjacent ranges.\n * @private\n */\n\nfunction combineRanges (ranges) {\n  var ordered = ranges.map(mapWithIndex).sort(sortByRangeStart)\n\n  for (var j = 0, i = 1; i < ordered.length; i++) {\n    var range = ordered[i]\n    var current = ordered[j]\n\n    if (range.start > current.end + 1) {\n      // next range\n      ordered[++j] = range\n    } else if (range.end > current.end) {\n      // extend range\n      current.end = range.end\n      current.index = Math.min(current.index, range.index)\n    }\n  }\n\n  // trim ordered array\n  ordered.length = j + 1\n\n  // generate combined range\n  var combined = ordered.sort(sortByRangeIndex).map(mapWithoutIndex)\n\n  // copy ranges type\n  combined.type = ranges.type\n\n  return combined\n}\n\n/**\n * Map function to add index value to ranges.\n * @private\n */\n\nfunction mapWithIndex (range, index) {\n  return {\n    start: range.start,\n    end: range.end,\n    index: index\n  }\n}\n\n/**\n * Map function to remove index value from ranges.\n * @private\n */\n\nfunction mapWithoutIndex (range) {\n  return {\n    start: range.start,\n    end: range.end\n  }\n}\n\n/**\n * Sort function to sort ranges by index.\n * @private\n */\n\nfunction sortByRangeIndex (a, b) {\n  return a.index - b.index\n}\n\n/**\n * Sort function to sort ranges by start position.\n * @private\n */\n\nfunction sortByRangeStart (a, b) {\n  return a.start - b.start\n}\n", "/*! webtorrent. MIT License. WebTorrent LLC <https://webtorrent.io/opensource> */\nimport EventEmitter from 'events'\nimport path from 'path'\nimport createTorrent, { parseInput } from 'create-torrent'\nimport debugFactory from 'debug'\nimport { Client as DHT } from 'bittorrent-dht' // browser exclude\nimport loadIPSet from 'load-ip-set' // browser exclude\nimport parallel from 'run-parallel'\nimport parseTorrent from 'parse-torrent'\nimport Peer from '@thaunknown/simple-peer/lite.js'\nimport queueMicrotask from 'queue-microtask'\nimport { hash, hex2arr, arr2hex, arr2base, text2arr, randomBytes, concat } from 'uint8-util'\nimport throughput from 'throughput'\nimport { ThrottleGroup } from 'speed-limiter'\nimport NatAPI from '@silentbot1/nat-api' // browser exclude\nimport ConnPool from './lib/conn-pool.js' // browser exclude\nimport Torrent from './lib/torrent.js'\nimport { NodeServer, BrowserServer } from './lib/server.js'\n\nimport VERSION from './version.cjs'\n\nconst debug = debugFactory('webtorrent')\n\n/**\n * Version number in Azureus-style. Generated from major and minor semver version.\n * For example:\n *   '0.16.1' -> '0016'\n *   '1.2.5' -> '0102'\n */\nconst VERSION_STR = VERSION\n  .replace(/\\d*./g, v => `0${v % 100}`.slice(-2))\n  .slice(0, 4)\n\n/**\n * Version prefix string (used in peer ID). WebTorrent uses the Azureus-style\n * encoding: '-', two characters for client id ('WW'), four ascii digits for version\n * number, '-', followed by random numbers.\n * For example:\n *   '-WW0102-'...\n */\nconst VERSION_PREFIX = `-WW${VERSION_STR}-`\n\n/**\n * WebTorrent Client\n * @param {Object=} opts\n */\nexport default class WebTorrent extends EventEmitter {\n  constructor (opts = {}) {\n    super()\n\n    if (typeof opts.peerId === 'string') {\n      this.peerId = opts.peerId\n    } else if (ArrayBuffer.isView(opts.peerId)) {\n      this.peerId = arr2hex(opts.peerId)\n    } else {\n      this.peerId = arr2hex(text2arr(VERSION_PREFIX + arr2base(randomBytes(9))))\n    }\n    this.peerIdBuffer = hex2arr(this.peerId)\n\n    if (typeof opts.nodeId === 'string') {\n      this.nodeId = opts.nodeId\n    } else if (ArrayBuffer.isView(opts.nodeId)) {\n      this.nodeId = arr2hex(opts.nodeId)\n    } else {\n      this.nodeId = arr2hex(randomBytes(20))\n    }\n    this.nodeIdBuffer = hex2arr(this.nodeId)\n\n    this._debugId = this.peerId.substring(0, 7)\n\n    this.destroyed = false\n    this.listening = false\n    this.torrentPort = opts.torrentPort || 0\n    this.dhtPort = opts.dhtPort || 0\n    this.tracker = opts.tracker !== undefined ? opts.tracker : {}\n    this.lsd = opts.lsd !== false\n    this.utPex = opts.utPex !== false\n    this.natUpnp = opts.natUpnp ?? true\n    this.natPmp = opts.natPmp ?? true\n    this.torrents = []\n    this.maxConns = Number(opts.maxConns) || 55\n    this.utp = WebTorrent.UTP_SUPPORT && opts.utp !== false\n    this.seedOutgoingConnections = opts.seedOutgoingConnections ?? true\n\n    this._downloadLimit = Math.max((typeof opts.downloadLimit === 'number') ? opts.downloadLimit : -1, -1)\n    this._uploadLimit = Math.max((typeof opts.uploadLimit === 'number') ? opts.uploadLimit : -1, -1)\n\n    if ((this.natUpnp || this.natPmp) && typeof NatAPI === 'function') {\n      this.natTraversal = new NatAPI({\n        enableUPNP: this.natUpnp,\n        enablePMP: this.natPmp,\n        upnpPermanentFallback: opts.natUpnp === 'permanent'\n      })\n    }\n\n    if (opts.secure === true) {\n      import('./lib/peer.js').then(({ enableSecure }) => enableSecure())\n    }\n\n    this._debug(\n      'new webtorrent (peerId %s, nodeId %s, port %s)',\n      this.peerId, this.nodeId, this.torrentPort\n    )\n\n    this.throttleGroups = {\n      down: new ThrottleGroup({ rate: Math.max(this._downloadLimit, 0), enabled: this._downloadLimit >= 0 }),\n      up: new ThrottleGroup({ rate: Math.max(this._uploadLimit, 0), enabled: this._uploadLimit >= 0 })\n    }\n\n    if (this.tracker) {\n      if (typeof this.tracker !== 'object') this.tracker = {}\n      if (globalThis.WRTC && !this.tracker.wrtc) this.tracker.wrtc = globalThis.WRTC\n    }\n\n    if (typeof ConnPool === 'function') {\n      this._connPool = new ConnPool(this)\n    } else {\n      queueMicrotask(() => {\n        this._onListening()\n      })\n    }\n\n    // stats\n    this._downloadSpeed = throughput()\n    this._uploadSpeed = throughput()\n\n    if (opts.dht !== false && typeof DHT === 'function' /* browser exclude */) {\n      // use a single DHT instance for all torrents, so the routing table can be reused\n      this.dht = new DHT(Object.assign({}, { nodeId: this.nodeId }, opts.dht))\n\n      this.dht.once('error', err => {\n        this._destroy(err)\n      })\n\n      this.dht.once('listening', () => {\n        const address = this.dht.address()\n        if (address) {\n          this.dhtPort = address.port\n          if (this.natTraversal) {\n            this.natTraversal.map({\n              publicPort: this.dhtPort,\n              privatePort: this.dhtPort,\n              protocol: 'udp',\n              description: 'WebTorrent DHT'\n            }).catch(err => {\n              debug('error mapping DHT port via UPnP/PMP: %o', err)\n            })\n          }\n        }\n      })\n\n      // Ignore warning when there are > 10 torrents in the client\n      this.dht.setMaxListeners(0)\n\n      this.dht.listen(this.dhtPort)\n    } else {\n      this.dht = false\n    }\n\n    // Enable or disable BEP19 (Web Seeds). Enabled by default:\n    this.enableWebSeeds = opts.webSeeds !== false\n\n    const ready = () => {\n      if (this.destroyed) return\n      this.ready = true\n      this.emit('ready')\n    }\n\n    if (typeof loadIPSet === 'function' && opts.blocklist != null) {\n      loadIPSet(opts.blocklist, {\n        headers: {\n          'user-agent': `WebTorrent/${VERSION} (https://webtorrent.io)`\n        }\n      }, (err, ipSet) => {\n        if (err) return console.error(`Failed to load blocklist: ${err.message}`)\n        this.blocked = ipSet\n        ready()\n      })\n    } else {\n      queueMicrotask(ready)\n    }\n  }\n\n  /**\n   * Creates an http server to serve the contents of this torrent,\n   * dynamically fetching the needed torrent pieces to satisfy http requests.\n   * Range requests are supported.\n   *\n   * @param {Object} options\n   * @param {String} force\n   * @return {BrowserServer||NodeServer}\n   */\n  createServer (options, force) {\n    if (this.destroyed) throw new Error('torrent is destroyed')\n    if (this._server) throw new Error('server already created')\n    if ((typeof window === 'undefined' || force === 'node') && force !== 'browser') {\n      // node implementation\n      this._server = new NodeServer(this, options)\n      return this._server\n    } else {\n      // browser implementation\n      if (!(options?.controller instanceof ServiceWorkerRegistration)) throw new Error('Invalid worker registration')\n      if (options.controller.active.state !== 'activated') throw new Error('Worker isn\\'t activated')\n      this._server = new BrowserServer(this, options)\n      return this._server\n    }\n  }\n\n  get downloadSpeed () { return this._downloadSpeed() }\n\n  get uploadSpeed () { return this._uploadSpeed() }\n\n  get progress () {\n    const torrents = this.torrents.filter(torrent => torrent.progress !== 1)\n    const downloaded = torrents.reduce((total, torrent) => total + torrent.downloaded, 0)\n    const length = torrents.reduce((total, torrent) => total + (torrent.length || 0), 0) || 1\n    return downloaded / length\n  }\n\n  get ratio () {\n    const uploaded = this.torrents.reduce((total, torrent) => total + torrent.uploaded, 0)\n    const received = this.torrents.reduce((total, torrent) => total + torrent.received, 0) || 1\n    return uploaded / received\n  }\n\n  /**\n   * Returns the torrent with the given `torrentId`. Convenience method. Easier than\n   * searching through the `client.torrents` array. Returns `null` if no matching torrent\n   * found.\n   *\n   * @param  {string|Buffer|Object|Torrent} torrentId\n   * @return {Promise<Torrent|null>}\n   */\n  async get (torrentId) {\n    if (torrentId instanceof Torrent) {\n      if (this.torrents.includes(torrentId)) return torrentId\n    } else {\n      const torrents = this.torrents\n      let parsed\n      try { parsed = await parseTorrent(torrentId) } catch (err) {}\n      if (!parsed) return null\n      if (!parsed.infoHash) throw new Error('Invalid torrent identifier')\n\n      for (const torrent of torrents) {\n        if (torrent.infoHash === parsed.infoHash) return torrent\n      }\n    }\n    return null\n  }\n\n  /**\n   * Start downloading a new torrent. Aliased as `client.download`.\n   * @param {string|Buffer|Object} torrentId\n   * @param {Object} opts torrent-specific options\n   * @param {function=} ontorrent called when the torrent is ready (has metadata)\n   */\n  add (torrentId, opts = {}, ontorrent = () => {}) {\n    if (this.destroyed) throw new Error('client is destroyed')\n    if (typeof opts === 'function') [opts, ontorrent] = [{}, opts]\n\n    const onInfoHash = () => {\n      if (this.destroyed) return\n      for (const t of this.torrents) {\n        if (t.infoHash === torrent.infoHash && t !== torrent) {\n          torrent._destroy(new Error(`Cannot add duplicate torrent ${torrent.infoHash}`))\n          ontorrent(t)\n          return\n        }\n      }\n    }\n\n    const onReady = () => {\n      if (this.destroyed) return\n      ontorrent(torrent)\n      this.emit('torrent', torrent)\n    }\n\n    function onClose () {\n      torrent.removeListener('_infoHash', onInfoHash)\n      torrent.removeListener('ready', onReady)\n      torrent.removeListener('close', onClose)\n    }\n\n    this._debug('add')\n    opts = opts ? Object.assign({}, opts) : {}\n\n    const torrent = new Torrent(torrentId, this, opts)\n    this.torrents.push(torrent)\n\n    torrent.once('_infoHash', onInfoHash)\n    torrent.once('ready', onReady)\n    torrent.once('close', onClose)\n\n    this.emit('add', torrent)\n    return torrent\n  }\n\n  /**\n   * Start seeding a new file/folder.\n   * @param  {string|File|FileList|Buffer|Array.<string|File|Buffer>} input\n   * @param  {Object=} opts\n   * @param  {function=} onseed called when torrent is seeding\n   */\n  seed (input, opts, onseed) {\n    if (this.destroyed) throw new Error('client is destroyed')\n    if (typeof opts === 'function') [opts, onseed] = [{}, opts]\n\n    this._debug('seed')\n    opts = opts ? Object.assign({}, opts) : {}\n\n    // no need to verify the hashes we create\n    opts.skipVerify = true\n\n    const isFilePath = typeof input === 'string'\n\n    // When seeding from fs path, initialize store from that path to avoid a copy\n    if (isFilePath) opts.path = path.dirname(input)\n    if (!opts.createdBy) opts.createdBy = `WebTorrent/${VERSION_STR}`\n\n    const onTorrent = torrent => {\n      const tasks = [\n        cb => {\n          // when a filesystem path is specified or the store is preloaded, files are already in the FS store\n          if (isFilePath || opts.preloadedStore) return cb()\n          torrent.load(streams, cb)\n        }\n      ]\n      if (this.dht) {\n        tasks.push(cb => {\n          torrent.once('dhtAnnounce', cb)\n        })\n      }\n      parallel(tasks, err => {\n        if (this.destroyed) return\n        if (err) return torrent._destroy(err)\n        _onseed(torrent)\n      })\n    }\n\n    const _onseed = torrent => {\n      this._debug('on seed')\n      if (typeof onseed === 'function') onseed(torrent)\n      torrent.emit('seed')\n      this.emit('seed', torrent)\n    }\n\n    const torrent = this.add(null, opts, onTorrent)\n    let streams\n\n    if (isFileList(input)) input = Array.from(input)\n    else if (!Array.isArray(input)) input = [input]\n\n    parallel(input.map(item => async cb => {\n      if (!opts.preloadedStore && isReadable(item)) {\n        const chunks = []\n        try {\n          for await (const chunk of item) {\n            chunks.push(chunk)\n          }\n        } catch (err) {\n          return cb(err)\n        }\n        const buf = concat(chunks)\n        buf.name = item.name\n        cb(null, buf)\n      } else {\n        cb(null, item)\n      }\n    }), (err, input) => {\n      if (this.destroyed) return\n      if (err) return torrent._destroy(err)\n\n      parseInput(input, opts, (err, files) => {\n        if (this.destroyed) return\n        if (err) return torrent._destroy(err)\n\n        streams = files.map(file => file.getStream)\n\n        createTorrent(input, opts, async (err, torrentBuf) => {\n          if (this.destroyed) return\n          if (err) return torrent._destroy(err)\n\n          const existingTorrent = await this.get(torrentBuf)\n          if (existingTorrent) {\n            console.warn('A torrent with the same id is already being seeded')\n            torrent._destroy()\n            if (typeof onseed === 'function') onseed(existingTorrent)\n          } else {\n            torrent._onTorrentId(torrentBuf)\n          }\n        })\n      })\n    })\n\n    return torrent\n  }\n\n  /**\n   * Remove a torrent from the client.\n   * @param  {string|Buffer|Torrent}   torrentId\n   * @param  {function} cb\n   */\n  async remove (torrentId, opts, cb) {\n    if (typeof opts === 'function') return this.remove(torrentId, null, opts)\n\n    this._debug('remove')\n    const torrent = await this.get(torrentId)\n    if (!torrent) throw new Error(`No torrent with id ${torrentId}`)\n    this._remove(torrent, opts, cb)\n  }\n\n  _remove (torrent, opts, cb) {\n    if (!torrent) return\n    if (typeof opts === 'function') return this._remove(torrent, null, opts)\n    const index = this.torrents.indexOf(torrent)\n    if (index === -1) return\n    this.torrents.splice(index, 1)\n    torrent.destroy(opts, cb)\n    if (this.dht) {\n      this.dht._tables.remove(torrent.infoHash)\n    }\n    this.emit('remove', torrent)\n  }\n\n  address () {\n    if (!this.listening) return null\n    return this._connPool\n      ? this._connPool.tcpServer.address()\n      : { address: '0.0.0.0', family: 'IPv4', port: 0 }\n  }\n\n  /**\n   * Set global download throttle rate.\n   * @param  {Number} rate (must be bigger or equal than zero, or -1 to disable throttling)\n   */\n  throttleDownload (rate) {\n    rate = Number(rate)\n    if (isNaN(rate) || !isFinite(rate) || rate < -1) return false\n    this._downloadLimit = rate\n    if (this._downloadLimit < 0) return this.throttleGroups.down.setEnabled(false)\n    this.throttleGroups.down.setEnabled(true)\n    this.throttleGroups.down.setRate(this._downloadLimit)\n  }\n\n  /**\n   * Set global upload throttle rate\n   * @param  {Number} rate (must be bigger or equal than zero, or -1 to disable throttling)\n   */\n  throttleUpload (rate) {\n    rate = Number(rate)\n    if (isNaN(rate) || !isFinite(rate) || rate < -1) return false\n    this._uploadLimit = rate\n    if (this._uploadLimit < 0) return this.throttleGroups.up.setEnabled(false)\n    this.throttleGroups.up.setEnabled(true)\n    this.throttleGroups.up.setRate(this._uploadLimit)\n  }\n\n  /**\n   * Destroy the client, including all torrents and connections to peers.\n   * @param  {function} cb\n   */\n  destroy (cb) {\n    if (this.destroyed) throw new Error('client already destroyed')\n    this._destroy(null, cb)\n  }\n\n  _destroy (err, cb) {\n    this._debug('client destroy')\n    this.destroyed = true\n\n    const tasks = this.torrents.map(torrent => cb => {\n      torrent.destroy(cb)\n    })\n\n    if (this._connPool) {\n      tasks.push(cb => {\n        this._connPool.destroy(cb)\n      })\n    }\n\n    if (this.dht) {\n      tasks.push(cb => {\n        this.dht.destroy(cb)\n      })\n    }\n\n    if (this._server) {\n      tasks.push(cb => {\n        this._server.destroy(cb)\n      })\n    }\n\n    if (this.natTraversal) {\n      tasks.push(cb => {\n        this.natTraversal.destroy()\n          .then(() => cb())\n      })\n    }\n\n    parallel(tasks, cb)\n\n    if (err) this.emit('error', err)\n\n    this.torrents = []\n    this._connPool = null\n    this.dht = null\n\n    this.throttleGroups.down.destroy()\n    this.throttleGroups.up.destroy()\n  }\n\n  _onListening () {\n    this._debug('listening')\n    this.listening = true\n\n    if (this._connPool) {\n      // Sometimes server.address() returns `null` in Docker.\n      const address = this._connPool.tcpServer.address()\n      if (address) {\n        this.torrentPort = address.port\n        if (this.natTraversal) {\n          this.natTraversal.map({\n            publicPort: this.torrentPort,\n            privatePort: this.torrentPort,\n            protocol: this.utp ? null : 'tcp',\n            description: 'WebTorrent Torrent'\n          }).catch(err => {\n            debug('error mapping WebTorrent port via UPnP/PMP: %o', err)\n          })\n        }\n      }\n    }\n\n    this.emit('listening')\n  }\n\n  _debug () {\n    const args = [].slice.call(arguments)\n    args[0] = `[${this._debugId}] ${args[0]}`\n    debug(...args)\n  }\n\n  async _getByHash (infoHashHash) {\n    for (const torrent of this.torrents) {\n      if (!torrent.infoHashHash) {\n        torrent.infoHashHash = await hash(hex2arr('72657132' /* 'req2' */ + torrent.infoHash), 'hex')\n      }\n      if (infoHashHash === torrent.infoHashHash) {\n        return torrent\n      }\n    }\n\n    return null\n  }\n}\n\nWebTorrent.WEBRTC_SUPPORT = Peer.WEBRTC_SUPPORT\nWebTorrent.UTP_SUPPORT = ConnPool.UTP_SUPPORT\nWebTorrent.VERSION = VERSION\n\n/**\n * Check if `obj` is a node Readable stream\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isReadable (obj) {\n  return typeof obj === 'object' && obj != null && typeof obj.pipe === 'function'\n}\n\n/**\n * Check if `obj` is a W3C `FileList` object\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isFileList (obj) {\n  return typeof FileList !== 'undefined' && obj instanceof FileList\n}\n", "/*! create-torrent. MIT License. WebTorrent LLC <https://webtorrent.io/opensource> */\nimport bencode from 'bencode'\nimport blockIterator from 'block-iterator'\nimport calcPieceLength from 'piece-length'\nimport corePath from 'path'\nimport isFile from 'is-file'\nimport { isJunk } from 'junk'\nimport joinIterator from 'join-async-iterator'\nimport parallel from 'run-parallel'\nimport queueMicrotask from 'queue-microtask'\nimport { hash, hex2arr } from 'uint8-util'\nimport 'fast-readable-async-iterator'\n\nimport getFiles from './get-files.js' // browser exclude\n\nconst announceList = [\n  ['udp://tracker.leechers-paradise.org:6969'],\n  ['udp://tracker.coppersurfer.tk:6969'],\n  ['udp://tracker.opentrackr.org:1337'],\n  ['udp://explodie.org:6969'],\n  ['udp://tracker.empire-js.us:1337'],\n  ['wss://tracker.btorrent.xyz'],\n  ['wss://tracker.openwebtorrent.com'],\n  ['wss://tracker.webtorrent.dev']\n]\n\n/**\n * Create a torrent.\n * @param  {string|File|FileList|Buffer|Stream|Array.<string|File|Buffer|Stream>} input\n * @param  {Object} opts\n * @param  {string=} opts.name\n * @param  {Date=} opts.creationDate\n * @param  {string=} opts.comment\n * @param  {string=} opts.createdBy\n * @param  {boolean|number=} opts.private\n * @param  {number=} opts.pieceLength\n * @param  {Array.<Array.<string>>=} opts.announceList\n * @param  {Array.<string>=} opts.urlList\n * @param  {Object=} opts.info\n * @param  {Function} opts.onProgress\n * @param  {function} cb\n * @return {Buffer} buffer of .torrent file data\n */\nfunction createTorrent (input, opts, cb) {\n  if (typeof opts === 'function') [opts, cb] = [cb, opts]\n  opts = opts ? Object.assign({}, opts) : {}\n\n  _parseInput(input, opts, (err, files, singleFileTorrent) => {\n    if (err) return cb(err)\n    opts.singleFileTorrent = singleFileTorrent\n    onFiles(files, opts, cb)\n  })\n}\n\nfunction parseInput (input, opts, cb) {\n  if (typeof opts === 'function') [opts, cb] = [cb, opts]\n  opts = opts ? Object.assign({}, opts) : {}\n  _parseInput(input, opts, cb)\n}\n\nconst pathSymbol = Symbol('itemPath')\n\n/**\n * Parse input file and return file information.\n */\nfunction _parseInput (input, opts, cb) {\n  if (isFileList(input)) input = Array.from(input)\n  if (!Array.isArray(input)) input = [input]\n\n  if (input.length === 0) throw new Error('invalid input type')\n\n  input.forEach(item => {\n    if (item == null) throw new Error(`invalid input type: ${item}`)\n  })\n\n  // In Electron, use the true file path\n  input = input.map(item => {\n    if (isBlob(item) && typeof item.path === 'string' && typeof getFiles === 'function') return item.path\n    return item\n  })\n\n  // If there's just one file, allow the name to be set by `opts.name`\n  if (input.length === 1 && typeof input[0] !== 'string' && !input[0].name) input[0].name = opts.name\n\n  let commonPrefix = null\n  input.forEach((item, i) => {\n    if (typeof item === 'string') {\n      return\n    }\n\n    let path = item.fullPath || item.name\n    if (!path) {\n      path = `Unknown File ${i + 1}`\n      item.unknownName = true\n    }\n\n    item[pathSymbol] = path.split('/')\n\n    // Remove initial slash\n    if (!item[pathSymbol][0]) {\n      item[pathSymbol].shift()\n    }\n\n    if (item[pathSymbol].length < 2) { // No real prefix\n      commonPrefix = null\n    } else if (i === 0 && input.length > 1) { // The first file has a prefix\n      commonPrefix = item[pathSymbol][0]\n    } else if (item[pathSymbol][0] !== commonPrefix) { // The prefix doesn't match\n      commonPrefix = null\n    }\n  })\n\n  const filterJunkFiles = opts.filterJunkFiles === undefined ? true : opts.filterJunkFiles\n  if (filterJunkFiles) {\n    // Remove junk files\n    input = input.filter(item => {\n      if (typeof item === 'string') {\n        return true\n      }\n      return !isJunkPath(item[pathSymbol])\n    })\n  }\n\n  if (commonPrefix) {\n    input.forEach(item => {\n      const pathless = (ArrayBuffer.isView(item) || isReadable(item)) && !item[pathSymbol]\n      if (typeof item === 'string' || pathless) return\n      item[pathSymbol].shift()\n    })\n  }\n\n  if (!opts.name && commonPrefix) {\n    opts.name = commonPrefix\n  }\n\n  if (!opts.name) {\n    // use first user-set file name\n    input.some(item => {\n      if (typeof item === 'string') {\n        opts.name = corePath.basename(item)\n        return true\n      } else if (!item.unknownName) {\n        opts.name = item[pathSymbol][item[pathSymbol].length - 1]\n        return true\n      }\n      return false\n    })\n  }\n\n  if (!opts.name) {\n    opts.name = `Unnamed Torrent ${Date.now()}`\n  }\n\n  const numPaths = input.reduce((sum, item) => sum + Number(typeof item === 'string'), 0)\n\n  let isSingleFileTorrent = (input.length === 1)\n\n  if (input.length === 1 && typeof input[0] === 'string') {\n    if (typeof getFiles !== 'function') {\n      throw new Error('filesystem paths do not work in the browser')\n    }\n    // If there's a single path, verify it's a file before deciding this is a single\n    // file torrent\n    isFile(input[0], (err, pathIsFile) => {\n      if (err) return cb(err)\n      isSingleFileTorrent = pathIsFile\n      processInput()\n    })\n  } else {\n    queueMicrotask(processInput)\n  }\n\n  function processInput () {\n    parallel(input.map(item => cb => {\n      const file = {}\n\n      if (isBlob(item)) {\n        file.getStream = item.stream()\n        file.length = item.size\n      } else if (ArrayBuffer.isView(item)) {\n        file.getStream = [item] // wrap in iterable to write entire buffer at once instead of unwrapping all bytes\n        file.length = item.length\n      } else if (isReadable(item)) {\n        file.getStream = getStreamStream(item, file)\n        file.length = 0\n      } else if (typeof item === 'string') {\n        if (typeof getFiles !== 'function') {\n          throw new Error('filesystem paths do not work in the browser')\n        }\n        const keepRoot = numPaths > 1 || isSingleFileTorrent\n        getFiles(item, keepRoot, cb)\n        return // early return!\n      } else {\n        throw new Error('invalid input type')\n      }\n      file.path = item[pathSymbol]\n      cb(null, file)\n    }), (err, files) => {\n      if (err) return cb(err)\n      files = files.flat()\n      cb(null, files, isSingleFileTorrent)\n    })\n  }\n}\n\nconst MAX_OUTSTANDING_HASHES = 5\n\nasync function getPieceList (files, pieceLength, estimatedTorrentLength, opts, cb) {\n  const pieces = []\n  let length = 0\n  let hashedLength = 0\n\n  const streams = files.map(file => file.getStream)\n\n  const onProgress = opts.onProgress\n\n  let remainingHashes = 0\n  let pieceNum = 0\n  let ended = false\n\n  const iterator = blockIterator(joinIterator(streams), pieceLength, { zeroPadding: false })\n  try {\n    for await (const chunk of iterator) {\n      await new Promise(resolve => {\n        length += chunk.length\n        const i = pieceNum\n        ++pieceNum\n        if (++remainingHashes < MAX_OUTSTANDING_HASHES) resolve()\n        hash(chunk, 'hex').then(hash => {\n          pieces[i] = hash\n          --remainingHashes\n          hashedLength += chunk.length\n          if (onProgress) onProgress(hashedLength, estimatedTorrentLength)\n          resolve()\n          if (ended && remainingHashes === 0) cb(null, hex2arr(pieces.join('')), length)\n        })\n      })\n    }\n    if (remainingHashes === 0) return cb(null, hex2arr(pieces.join('')), length)\n    ended = true\n  } catch (err) {\n    cb(err)\n  }\n}\n\nfunction onFiles (files, opts, cb) {\n  let _announceList = opts.announceList\n\n  if (!_announceList) {\n    if (typeof opts.announce === 'string') _announceList = [[opts.announce]]\n    else if (Array.isArray(opts.announce)) {\n      _announceList = opts.announce.map(u => [u])\n    }\n  }\n\n  if (!_announceList) _announceList = []\n\n  if (globalThis.WEBTORRENT_ANNOUNCE) {\n    if (typeof globalThis.WEBTORRENT_ANNOUNCE === 'string') {\n      _announceList.push([[globalThis.WEBTORRENT_ANNOUNCE]])\n    } else if (Array.isArray(globalThis.WEBTORRENT_ANNOUNCE)) {\n      _announceList = _announceList.concat(globalThis.WEBTORRENT_ANNOUNCE.map(u => [u]))\n    }\n  }\n\n  // When no trackers specified, use some reasonable defaults\n  if (opts.announce === undefined && opts.announceList === undefined) {\n    _announceList = _announceList.concat(announceList)\n  }\n\n  if (typeof opts.urlList === 'string') opts.urlList = [opts.urlList]\n\n  const torrent = {\n    info: {\n      name: opts.name\n    },\n    'creation date': Math.ceil((Number(opts.creationDate) || Date.now()) / 1000),\n    encoding: 'UTF-8'\n  }\n\n  if (_announceList.length !== 0) {\n    torrent.announce = _announceList[0][0]\n    torrent['announce-list'] = _announceList\n  }\n\n  if (opts.comment !== undefined) torrent.comment = opts.comment\n\n  if (opts.createdBy !== undefined) torrent['created by'] = opts.createdBy\n\n  if (opts.private !== undefined) torrent.info.private = Number(opts.private)\n\n  if (opts.info !== undefined) Object.assign(torrent.info, opts.info)\n\n  // \"ssl-cert\" key is for SSL torrents, see:\n  //   - http://blog.libtorrent.org/2012/01/bittorrent-over-ssl/\n  //   - http://www.libtorrent.org/manual-ref.html#ssl-torrents\n  //   - http://www.libtorrent.org/reference-Create_Torrents.html\n  if (opts.sslCert !== undefined) torrent.info['ssl-cert'] = opts.sslCert\n\n  if (opts.urlList !== undefined) torrent['url-list'] = opts.urlList\n\n  const estimatedTorrentLength = files.reduce(sumLength, 0)\n  const pieceLength = opts.pieceLength || calcPieceLength(estimatedTorrentLength)\n  torrent.info['piece length'] = pieceLength\n\n  getPieceList(\n    files,\n    pieceLength,\n    estimatedTorrentLength,\n    opts,\n    (err, pieces, torrentLength) => {\n      if (err) return cb(err)\n      torrent.info.pieces = pieces\n\n      files.forEach(file => {\n        delete file.getStream\n      })\n\n      if (opts.singleFileTorrent) {\n        torrent.info.length = torrentLength\n      } else {\n        torrent.info.files = files\n      }\n\n      cb(null, bencode.encode(torrent))\n    }\n  )\n}\n\n/**\n * Determine if a a file is junk based on its path\n * (defined as hidden OR recognized by the `junk` package)\n *\n * @param  {string} path\n * @return {boolean}\n */\nfunction isJunkPath (path) {\n  const filename = path[path.length - 1]\n  return filename[0] === '.' && isJunk(filename)\n}\n\n/**\n * Accumulator to sum file lengths\n * @param  {number} sum\n * @param  {Object} file\n * @return {number}\n */\nfunction sumLength (sum, file) {\n  return sum + file.length\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob (obj) {\n  return typeof Blob !== 'undefined' && obj instanceof Blob\n}\n\n/**\n * Check if `obj` is a W3C `FileList` object\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isFileList (obj) {\n  return typeof FileList !== 'undefined' && obj instanceof FileList\n}\n\n/**\n * Check if `obj` is a node Readable stream\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isReadable (obj) {\n  return typeof obj === 'object' && obj != null && typeof obj.pipe === 'function'\n}\n\n/**\n * Convert a readable stream to a lazy async iterator. Adds instrumentation to track\n * the number of bytes in the stream and set `file.length`.\n *\n * @generator\n * @param  {Stream} readable\n * @param  {Object} file\n * @return {Uint8Array} stream data/chunk\n */\nasync function * getStreamStream (readable, file) {\n  for await (const chunk of readable) {\n    file.length += chunk.length\n    yield chunk\n  }\n}\n\nexport default createTorrent\nexport { parseInput, announceList, isJunkPath }\n", "const ignoreList = [\n\t// # All\n\t'^npm-debug\\\\.log$', // Error log for npm\n\t'^\\\\..*\\\\.swp$', // Swap file for vim state\n\n\t// # macOS\n\t'^\\\\.DS_Store$', // Stores custom folder attributes\n\t'^\\\\.AppleDouble$', // Stores additional file resources\n\t'^\\\\.LSOverride$', // Contains the absolute path to the app to be used\n\t'^Icon\\\\r$', // Custom Finder icon: http://superuser.com/questions/298785/icon-file-on-os-x-desktop\n\t'^\\\\._.*', // Thumbnail\n\t'^\\\\.Spotlight-V100(?:$|\\\\/)', // Directory that might appear on external disk\n\t'\\\\.Trashes', // File that might appear on external disk\n\t'^__MACOSX$', // Resource fork\n\n\t// # Linux\n\t'~$', // Backup file\n\n\t// # Windows\n\t'^Thumbs\\\\.db$', // Image file cache\n\t'^ehthumbs\\\\.db$', // Folder config file\n\t'^[Dd]esktop\\\\.ini$', // Stores custom folder attributes\n\t'@eaDir$', // Synology Diskstation \"hidden\" folder where the server stores thumbnails\n];\n\nexport const junkRegex = new RegExp(ignoreList.join('|'));\n\nexport function isJunk(filename) {\n\treturn junkRegex.test(filename);\n}\n\nexport function isNotJunk(filename) {\n\treturn !isJunk(filename);\n}\n", "if (typeof ReadableStream !== 'undefined') {\r\n  if (!ReadableStream.prototype[Symbol.asyncIterator]) {\r\n    ReadableStream.prototype[Symbol.asyncIterator] = function ({ preventCancel } = {}) {\r\n      const reader = this.getReader()\r\n      const stream = this\r\n      let last = reader.read()\r\n      return {\r\n        next () {\r\n          const temp = last\r\n          last = reader.read()\r\n          return temp\r\n        },\r\n        async return (value) {\r\n          await last\r\n          reader.releaseLock()\r\n          if (!preventCancel) stream.cancel()\r\n          return { done: true, value }\r\n        },\r\n        async throw (err) {\r\n          await this.return()\r\n          throw err\r\n        },\r\n        [Symbol.asyncIterator] () {\r\n          return this\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (!ReadableStream.prototype.getIterator) {\r\n    ReadableStream.prototype.getIterator = function ({ preventCancel } = {}) {\r\n      return this[Symbol.asyncIterator]({ preventCancel })\r\n    }\r\n  }\r\n}\r\n", "/*! parse-torrent. MIT License. WebTorrent LLC <https://webtorrent.io/opensource> */\n\nimport bencode from 'bencode'\nimport fs from 'fs' // browser exclude\nimport fetch from 'cross-fetch-ponyfill'\nimport magnet, { encode } from 'magnet-uri'\nimport path from 'path'\nimport { hash, arr2hex, text2arr, arr2text } from 'uint8-util'\nimport queueMicrotask from 'queue-microtask'\n\n/**\n * Parse a torrent identifier (magnet uri, .torrent file, info hash)\n * @param  {string|ArrayBufferView|Object} torrentId\n * @return {Object}\n */\nasync function parseTorrent (torrentId) {\n  if (typeof torrentId === 'string' && /^(stream-)?magnet:/.test(torrentId)) {\n    // if magnet uri (string)\n    const torrentObj = magnet(torrentId)\n\n    // infoHash won't be defined if a non-bittorrent magnet is passed\n    if (!torrentObj.infoHash) {\n      throw new Error('Invalid torrent identifier')\n    }\n\n    return torrentObj\n  } else if (typeof torrentId === 'string' && (/^[a-f0-9]{40}$/i.test(torrentId) || /^[a-z2-7]{32}$/i.test(torrentId))) {\n    // if info hash (hex/base-32 string)\n    return magnet(`magnet:?xt=urn:btih:${torrentId}`)\n  } else if (ArrayBuffer.isView(torrentId) && torrentId.length === 20) {\n    // if info hash (buffer)\n    return magnet(`magnet:?xt=urn:btih:${arr2hex(torrentId)}`)\n  } else if (ArrayBuffer.isView(torrentId)) {\n    // if .torrent file (buffer)\n    return await decodeTorrentFile(torrentId) // might throw\n  } else if (torrentId && torrentId.infoHash) {\n    // if parsed torrent (from `parse-torrent` or `magnet-uri`)\n    torrentId.infoHash = torrentId.infoHash.toLowerCase()\n\n    if (!torrentId.announce) torrentId.announce = []\n\n    if (typeof torrentId.announce === 'string') {\n      torrentId.announce = [torrentId.announce]\n    }\n\n    if (!torrentId.urlList) torrentId.urlList = []\n\n    return torrentId\n  } else {\n    throw new Error('Invalid torrent identifier')\n  }\n}\n\nasync function parseTorrentRemote (torrentId, opts, cb) {\n  if (typeof opts === 'function') return parseTorrentRemote(torrentId, {}, opts)\n  if (typeof cb !== 'function') throw new Error('second argument must be a Function')\n\n  let parsedTorrent\n  try {\n    parsedTorrent = await parseTorrent(torrentId)\n  } catch (err) {\n    // If torrent fails to parse, it could be a Blob, http/https URL or\n    // filesystem path, so don't consider it an error yet.\n  }\n\n  if (parsedTorrent && parsedTorrent.infoHash) {\n    queueMicrotask(() => {\n      cb(null, parsedTorrent)\n    })\n  } else if (isBlob(torrentId)) {\n    try {\n      const torrentBuf = new Uint8Array(await torrentId.arrayBuffer())\n      parseOrThrow(torrentBuf)\n    } catch (err) {\n      return cb(new Error(`Error converting Blob: ${err.message}`))\n    }\n  } else if (/^https?:/.test(torrentId)) {\n    try {\n      const res = await fetch(torrentId, {\n        headers: { 'user-agent': 'WebTorrent (https://webtorrent.io)' },\n        signal: AbortSignal.timeout(30 * 1000),\n        ...opts\n      })\n      const torrentBuf = new Uint8Array(await res.arrayBuffer())\n      parseOrThrow(torrentBuf)\n    } catch (err) {\n      return cb(new Error(`Error downloading torrent: ${err.message}`))\n    }\n  } else if (typeof fs.readFile === 'function' && typeof torrentId === 'string') {\n    // assume it's a filesystem path\n    fs.readFile(torrentId, (err, torrentBuf) => {\n      if (err) return cb(new Error('Invalid torrent identifier'))\n      parseOrThrow(torrentBuf)\n    })\n  } else {\n    queueMicrotask(() => {\n      cb(new Error('Invalid torrent identifier'))\n    })\n  }\n\n  async function parseOrThrow (torrentBuf) {\n    try {\n      parsedTorrent = await parseTorrent(torrentBuf)\n    } catch (err) {\n      return cb(err)\n    }\n    if (parsedTorrent && parsedTorrent.infoHash) cb(null, parsedTorrent)\n    else cb(new Error('Invalid torrent identifier'))\n  }\n}\n\n/**\n * Parse a torrent. Throws an exception if the torrent is missing required fields.\n * @param  {ArrayBufferView|Object} torrent\n * @return {Object}        parsed torrent\n */\nasync function decodeTorrentFile (torrent) {\n  if (ArrayBuffer.isView(torrent)) {\n    torrent = bencode.decode(torrent)\n  }\n\n  // sanity check\n  ensure(torrent.info, 'info')\n  ensure(torrent.info['name.utf-8'] || torrent.info.name, 'info.name')\n  ensure(torrent.info['piece length'], 'info[\\'piece length\\']')\n  ensure(torrent.info.pieces, 'info.pieces')\n\n  if (torrent.info.files) {\n    torrent.info.files.forEach(file => {\n      ensure(typeof file.length === 'number', 'info.files[0].length')\n      ensure(file['path.utf-8'] || file.path, 'info.files[0].path')\n    })\n  } else {\n    ensure(typeof torrent.info.length === 'number', 'info.length')\n  }\n\n  const result = {\n    info: torrent.info,\n    infoBuffer: bencode.encode(torrent.info),\n    name: arr2text(torrent.info['name.utf-8'] || torrent.info.name),\n    announce: []\n  }\n\n  result.infoHashBuffer = await hash(result.infoBuffer)\n  result.infoHash = arr2hex(result.infoHashBuffer)\n\n  if (torrent.info.private !== undefined) result.private = !!torrent.info.private\n\n  if (torrent['creation date']) result.created = new Date(torrent['creation date'] * 1000)\n  if (torrent['created by']) result.createdBy = arr2text(torrent['created by'])\n\n  if (ArrayBuffer.isView(torrent.comment)) result.comment = arr2text(torrent.comment)\n\n  // announce and announce-list will be missing if metadata fetched via ut_metadata\n  if (Array.isArray(torrent['announce-list']) && torrent['announce-list'].length > 0) {\n    torrent['announce-list'].forEach(urls => {\n      urls.forEach(url => {\n        result.announce.push(arr2text(url))\n      })\n    })\n  } else if (torrent.announce) {\n    result.announce.push(arr2text(torrent.announce))\n  }\n\n  // handle url-list (BEP19 / web seeding)\n  if (ArrayBuffer.isView(torrent['url-list'])) {\n    // some clients set url-list to empty string\n    torrent['url-list'] = torrent['url-list'].length > 0\n      ? [torrent['url-list']]\n      : []\n  }\n  result.urlList = (torrent['url-list'] || []).map(url => arr2text(url))\n\n  // remove duplicates by converting to Set and back\n  result.announce = Array.from(new Set(result.announce))\n  result.urlList = Array.from(new Set(result.urlList))\n\n  const files = torrent.info.files || [torrent.info]\n  result.files = files.map((file, i) => {\n    const parts = [].concat(result.name, file['path.utf-8'] || file.path || []).map(p => ArrayBuffer.isView(p) ? arr2text(p) : p)\n    return {\n      path: path.join.apply(null, [path.sep].concat(parts)).slice(1),\n      name: parts[parts.length - 1],\n      length: file.length,\n      offset: files.slice(0, i).reduce(sumLength, 0)\n    }\n  })\n\n  result.length = files.reduce(sumLength, 0)\n\n  const lastFile = result.files[result.files.length - 1]\n\n  result.pieceLength = torrent.info['piece length']\n  result.lastPieceLength = ((lastFile.offset + lastFile.length) % result.pieceLength) || result.pieceLength\n  result.pieces = splitPieces(torrent.info.pieces)\n\n  return result\n}\n\n/**\n * Convert a parsed torrent object back into a .torrent file buffer.\n * @param  {Object} parsed parsed torrent\n * @return {Uint8Array}\n */\nfunction encodeTorrentFile (parsed) {\n  const torrent = {\n    info: parsed.info\n  }\n\n  torrent['announce-list'] = (parsed.announce || []).map(url => {\n    if (!torrent.announce) torrent.announce = url\n    url = text2arr(url)\n    return [url]\n  })\n\n  torrent['url-list'] = parsed.urlList || []\n\n  if (parsed.private !== undefined) {\n    torrent.private = Number(parsed.private)\n  }\n\n  if (parsed.created) {\n    torrent['creation date'] = (parsed.created.getTime() / 1000) | 0\n  }\n\n  if (parsed.createdBy) {\n    torrent['created by'] = parsed.createdBy\n  }\n\n  if (parsed.comment) {\n    torrent.comment = parsed.comment\n  }\n\n  return bencode.encode(torrent)\n}\n\n/**\n * Check if `obj` is a W3C `Blob` or `File` object\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob (obj) {\n  return typeof Blob !== 'undefined' && obj instanceof Blob\n}\n\nfunction sumLength (sum, file) {\n  return sum + file.length\n}\n\nfunction splitPieces (buf) {\n  const pieces = []\n  for (let i = 0; i < buf.length; i += 20) {\n    pieces.push(arr2hex(buf.slice(i, i + 20)))\n  }\n  return pieces\n}\n\nfunction ensure (bool, fieldName) {\n  if (!bool) throw new Error(`Torrent is missing required field: ${fieldName}`)\n}\n\nexport default parseTorrent\nconst toMagnetURI = encode\nexport { parseTorrentRemote as remote, encodeTorrentFile as toTorrentFile, toMagnetURI }\n", "export const Blob = self.Blob\r\nexport const File = self.File\r\nexport const FormData = self.FormData\r\nexport const Headers = self.Headers\r\nexport const Request = self.Request\r\nexport const Response = self.Response\r\nexport const AbortController = self.AbortController\r\nexport const AbortSignal = self.AbortSignal\r\n\r\nexport const fetch = self.fetch || (() => { throw new Error('global fetch is not available!') })\r\nexport default fetch\r\n", "import { text2arr } from 'uint8-util'\r\n/*\r\nCopyright (c) 2011, Chris Umbel\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n*/\r\nconst charTable = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'\r\nconst byteTable = [\r\n  0xff, 0xff, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,\r\n  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n  0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06,\r\n  0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e,\r\n  0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16,\r\n  0x17, 0x18, 0x19, 0xff, 0xff, 0xff, 0xff, 0xff,\r\n  0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06,\r\n  0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e,\r\n  0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16,\r\n  0x17, 0x18, 0x19, 0xff, 0xff, 0xff, 0xff, 0xff\r\n]\r\nfunction quintetCount (buff) {\r\n  const quintets = Math.floor(buff.length / 5)\r\n  return buff.length % 5 === 0 ? quintets : quintets + 1\r\n}\r\nconst encode = function (plain) {\r\n  if (!ArrayBuffer.isView(plain) && typeof plain !== 'string') {\r\n    throw new TypeError('base32.encode only takes Buffer or string as parameter')\r\n  }\r\n  if (!ArrayBuffer.isView(plain)) {\r\n    plain = text2arr(plain)\r\n  }\r\n  let i = 0\r\n  let j = 0\r\n  let shiftIndex = 0\r\n  let digit = 0\r\n  const encoded = new Uint8Array(quintetCount(plain) * 8)\r\n  /* byte by byte isn't as pretty as quintet by quintet but tests a bit\r\n        faster. will have to revisit. */\r\n  while (i < plain.length) {\r\n    const current = plain[i]\r\n    if (shiftIndex > 3) {\r\n      digit = current & (0xff >> shiftIndex)\r\n      shiftIndex = (shiftIndex + 5) % 8\r\n      digit = (digit << shiftIndex) | ((i + 1 < plain.length)\r\n        ? plain[i + 1]\r\n        : 0) >> (8 - shiftIndex)\r\n      i++\r\n    } else {\r\n      digit = (current >> (8 - (shiftIndex + 5))) & 0x1f\r\n      shiftIndex = (shiftIndex + 5) % 8\r\n      if (shiftIndex === 0) { i++ }\r\n    }\r\n    encoded[j] = charTable.charCodeAt(digit)\r\n    j++\r\n  }\r\n  for (i = j; i < encoded.length; i++) {\r\n    encoded[i] = 0x3d // '='.charCodeAt(0)\r\n  }\r\n  return encoded\r\n}\r\nconst decode = function (encoded) {\r\n  if (!ArrayBuffer.isView(encoded) && typeof encoded !== 'string') {\r\n    throw new TypeError('base32.decode only takes Buffer or string as parameter')\r\n  }\r\n  let shiftIndex = 0\r\n  let plainDigit = 0\r\n  let plainChar\r\n  let plainPos = 0\r\n  if (!ArrayBuffer.isView(encoded)) {\r\n    encoded = text2arr(encoded)\r\n  }\r\n  const decoded = new Uint8Array(Math.ceil(encoded.length * 5 / 8))\r\n  /* byte by byte isn't as pretty as octet by octet but tests a bit\r\n        faster. will have to revisit. */\r\n  for (let i = 0; i < encoded.length; i++) {\r\n    if (encoded[i] === 0x3d) { // '='\r\n      break\r\n    }\r\n    const encodedByte = encoded[i] - 0x30\r\n    if (encodedByte < byteTable.length) {\r\n      plainDigit = byteTable[encodedByte]\r\n      if (shiftIndex <= 3) {\r\n        shiftIndex = (shiftIndex + 5) % 8\r\n        if (shiftIndex === 0) {\r\n          plainChar |= plainDigit\r\n          decoded[plainPos] = plainChar\r\n          plainPos++\r\n          plainChar = 0\r\n        } else {\r\n          plainChar |= 0xff & (plainDigit << (8 - shiftIndex))\r\n        }\r\n      } else {\r\n        shiftIndex = (shiftIndex + 5) % 8\r\n        plainChar |= 0xff & (plainDigit >>> shiftIndex)\r\n        decoded[plainPos] = plainChar\r\n        plainPos++\r\n        plainChar = 0xff & (plainDigit << (8 - shiftIndex))\r\n      }\r\n    } else {\r\n      throw new Error('Invalid input - it is not base32 encoded string')\r\n    }\r\n  }\r\n  return decoded.subarray(0, plainPos)\r\n}\r\nexport default { encode, decode }\r\nexport { encode, decode }\r\n", "function composeRange (range) {\n  return range\n    .reduce((acc, cur, idx, arr) => {\n      if (idx === 0 || cur !== arr[idx - 1] + 1) acc.push([])\n      acc[acc.length - 1].push(cur)\n      return acc\n    }, [])\n    .map((cur) => {\n      return cur.length > 1 ? `${cur[0]}-${cur[cur.length - 1]}` : `${cur[0]}`\n    })\n}\n\nfunction parseRange (range) {\n  const generateRange = (start, end = start) => Array.from({ length: end - start + 1 }, (cur, idx) => idx + start)\n\n  return range\n    .reduce((acc, cur, idx, arr) => {\n      const r = cur.split('-').map(cur => parseInt(cur))\n      return acc.concat(generateRange(...r))\n    }, [])\n}\n\nexport default parseRange\n\nexport {\n  parseRange as parse,\n  composeRange as compose\n}\n", "/*! magnet-uri. MIT License. WebTorrent LLC <https://webtorrent.io/opensource> */\nimport { decode } from '@thaunknown/thirty-two'\nimport { parse, compose } from 'bep53-range'\nimport { hex2arr, arr2hex } from 'uint8-util'\n\n/**\n * Parse a magnet URI and return an object of keys/values\n *\n * @param  {string} uri\n * @return {Object} parsed uri\n */\nfunction magnetURIDecode (uri) {\n  const result = {}\n\n  // Support 'magnet:' and 'stream-magnet:' uris\n  const data = uri.split('magnet:?')[1]\n\n  const params = (data && data.length >= 0)\n    ? data.split('&')\n    : []\n\n  params.forEach(param => {\n    const keyval = param.split('=')\n\n    // This keyval is invalid, skip it\n    if (keyval.length !== 2) return\n\n    const key = keyval[0]\n    let val = keyval[1]\n\n    // Clean up torrent name\n    if (key === 'dn') val = decodeURIComponent(val).replace(/\\+/g, ' ')\n\n    // Address tracker (tr), exact source (xs), and acceptable source (as) are encoded\n    // URIs, so decode them\n    if (key === 'tr' || key === 'xs' || key === 'as' || key === 'ws') {\n      val = decodeURIComponent(val)\n    }\n\n    // Return keywords as an array\n    if (key === 'kt') val = decodeURIComponent(val).split('+')\n\n    // Cast file index (ix) to a number\n    if (key === 'ix') val = Number(val)\n\n    // bep53\n    if (key === 'so') val = parse(decodeURIComponent(val).split(','))\n\n    // If there are repeated parameters, return an array of values\n    if (result[key]) {\n      if (!Array.isArray(result[key])) {\n        result[key] = [result[key]]\n      }\n\n      result[key].push(val)\n    } else {\n      result[key] = val\n    }\n  })\n\n  // Convenience properties for parity with `parse-torrent-file` module\n  let m\n  if (result.xt) {\n    const xts = Array.isArray(result.xt) ? result.xt : [result.xt]\n    xts.forEach(xt => {\n      if ((m = xt.match(/^urn:btih:(.{40})/))) {\n        result.infoHash = m[1].toLowerCase()\n      } else if ((m = xt.match(/^urn:btih:(.{32})/))) {\n        result.infoHash = arr2hex(decode(m[1]))\n      } else if ((m = xt.match(/^urn:btmh:1220(.{64})/))) {\n        result.infoHashV2 = m[1].toLowerCase()\n      }\n    })\n  }\n\n  if (result.xs) {\n    const xss = Array.isArray(result.xs) ? result.xs : [result.xs]\n    xss.forEach(xs => {\n      if ((m = xs.match(/^urn:btpk:(.{64})/))) {\n        result.publicKey = m[1].toLowerCase()\n      }\n    })\n  }\n\n  if (result.infoHash) result.infoHashBuffer = hex2arr(result.infoHash)\n  if (result.infoHashV2) result.infoHashV2Buffer = hex2arr(result.infoHashV2)\n  if (result.publicKey) result.publicKeyBuffer = hex2arr(result.publicKey)\n\n  if (result.dn) result.name = result.dn\n  if (result.kt) result.keywords = result.kt\n\n  result.announce = []\n  if (typeof result.tr === 'string' || Array.isArray(result.tr)) {\n    result.announce = result.announce.concat(result.tr)\n  }\n\n  result.urlList = []\n  if (typeof result.as === 'string' || Array.isArray(result.as)) {\n    result.urlList = result.urlList.concat(result.as)\n  }\n  if (typeof result.ws === 'string' || Array.isArray(result.ws)) {\n    result.urlList = result.urlList.concat(result.ws)\n  }\n\n  result.peerAddresses = []\n  if (typeof result['x.pe'] === 'string' || Array.isArray(result['x.pe'])) {\n    result.peerAddresses = result.peerAddresses.concat(result['x.pe'])\n  }\n\n  // remove duplicates by converting to Set and back\n  result.announce = Array.from(new Set(result.announce))\n  result.urlList = Array.from(new Set(result.urlList))\n  result.peerAddresses = Array.from(new Set(result.peerAddresses))\n\n  return result\n}\n\nfunction magnetURIEncode (obj) {\n  obj = Object.assign({}, obj) // clone obj, so we can mutate it\n\n  // support using convenience names, in addition to spec names\n  // (example: `infoHash` for `xt`, `name` for `dn`)\n\n  // Deduplicate xt by using a set\n  let xts = new Set()\n  if (obj.xt && typeof obj.xt === 'string') xts.add(obj.xt)\n  if (obj.xt && Array.isArray(obj.xt)) xts = new Set(obj.xt)\n  if (obj.infoHashBuffer) xts.add(`urn:btih:${arr2hex(obj.infoHashBuffer)}`)\n  if (obj.infoHash) xts.add(`urn:btih:${obj.infoHash}`)\n  if (obj.infoHashV2Buffer) xts.add(obj.xt = `urn:btmh:1220${arr2hex(obj.infoHashV2Buffer)}`)\n  if (obj.infoHashV2) xts.add(`urn:btmh:1220${obj.infoHashV2}`)\n  const xtsDeduped = Array.from(xts)\n  if (xtsDeduped.length === 1) obj.xt = xtsDeduped[0]\n  if (xtsDeduped.length > 1) obj.xt = xtsDeduped\n\n  if (obj.publicKeyBuffer) obj.xs = `urn:btpk:${arr2hex(obj.publicKeyBuffer)}`\n  if (obj.publicKey) obj.xs = `urn:btpk:${obj.publicKey}`\n  if (obj.name) obj.dn = obj.name\n  if (obj.keywords) obj.kt = obj.keywords\n  if (obj.announce) obj.tr = obj.announce\n  if (obj.urlList) {\n    obj.ws = obj.urlList\n    delete obj.as\n  }\n  if (obj.peerAddresses) obj['x.pe'] = obj.peerAddresses\n\n  let result = 'magnet:?'\n  Object.keys(obj)\n    .filter(key => key.length === 2 || key === 'x.pe')\n    .forEach((key, i) => {\n      const values = Array.isArray(obj[key]) ? obj[key] : [obj[key]]\n      values.forEach((val, j) => {\n        if ((i > 0 || j > 0) && ((key !== 'kt' && key !== 'so') || j === 0)) result += '&'\n\n        if (key === 'dn') val = encodeURIComponent(val).replace(/%20/g, '+')\n        if (key === 'tr' || key === 'as' || key === 'ws') {\n          val = encodeURIComponent(val)\n        }\n        // Don't URI encode BEP46 keys\n        if (key === 'xs' && !val.startsWith('urn:btpk:')) {\n          val = encodeURIComponent(val)\n        }\n        if (key === 'kt') val = encodeURIComponent(val)\n        if (key === 'so') return\n\n        if (key === 'kt' && j > 0) result += `+${val}`\n        else result += `${key}=${val}`\n      })\n      if (key === 'so') result += `${key}=${compose(values)}`\n    })\n\n  return result\n}\n\nexport default magnetURIDecode\nexport { magnetURIDecode as decode, magnetURIEncode as encode }\n", "/*! simple-peer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\r\nimport debug from 'debug'\r\nimport { RTCPeerConnection, RTCSessionDescription, RTCIceCandidate } from 'webrtc-polyfill'\r\nimport { Duplex } from 'streamx'\r\nimport errCode from 'err-code'\r\nimport { randomBytes, arr2hex, text2arr } from 'uint8-util'\r\n\r\nconst Debug = debug('simple-peer')\r\n\r\nconst MAX_BUFFERED_AMOUNT = 64 * 1024\r\nconst ICECOMPLETE_TIMEOUT = 5 * 1000\r\nconst CHANNEL_CLOSING_TIMEOUT = 5 * 1000\r\n\r\n// HACK: Filter trickle lines when trickle is disabled #354\r\nfunction filterTrickle (sdp) {\r\n  return sdp.replace(/a=ice-options:trickle\\s\\n/g, '')\r\n}\r\n\r\nfunction warn (message) {\r\n  console.warn(message)\r\n}\r\n\r\n/**\r\n * WebRTC peer connection. Same API as node core `net.Socket`, plus a few extra methods.\r\n * Duplex stream.\r\n * @param {Object} opts\r\n */\r\nclass Peer extends Duplex {\r\n  /** @type {RTCPeerConnection} */\r\n  _pc\r\n  constructor (opts) {\r\n    opts = Object.assign({\r\n      allowHalfOpen: false\r\n    }, opts)\r\n\r\n    super(opts)\r\n\r\n    this.__objectMode = !!opts.objectMode // streamx is objectMode by default, so implement readable's fuctionality\r\n\r\n    this._id = arr2hex(randomBytes(4)).slice(0, 7)\r\n    this._debug('new peer %o', opts)\r\n\r\n    this.channelName = opts.initiator\r\n      ? opts.channelName || arr2hex(randomBytes(20))\r\n      : null\r\n\r\n    this.initiator = opts.initiator || false\r\n    this.channelConfig = opts.channelConfig || Peer.channelConfig\r\n    this.channelNegotiated = this.channelConfig.negotiated\r\n    this.config = Object.assign({}, Peer.config, opts.config)\r\n    this.offerOptions = opts.offerOptions || {}\r\n    this.answerOptions = opts.answerOptions || {}\r\n    this.sdpTransform = opts.sdpTransform || (sdp => sdp)\r\n    this.trickle = opts.trickle !== undefined ? opts.trickle : true\r\n    this.allowHalfTrickle = opts.allowHalfTrickle !== undefined ? opts.allowHalfTrickle : false\r\n    this.iceCompleteTimeout = opts.iceCompleteTimeout || ICECOMPLETE_TIMEOUT\r\n\r\n    this._destroying = false\r\n    this._connected = false\r\n\r\n    this.remoteAddress = undefined\r\n    this.remoteFamily = undefined\r\n    this.remotePort = undefined\r\n    this.localAddress = undefined\r\n    this.localFamily = undefined\r\n    this.localPort = undefined\r\n\r\n    if (!RTCPeerConnection) {\r\n      if (typeof window === 'undefined') {\r\n        throw errCode(new Error('No WebRTC support: Specify `opts.wrtc` option in this environment'), 'ERR_WEBRTC_SUPPORT')\r\n      } else {\r\n        throw errCode(new Error('No WebRTC support: Not a supported browser'), 'ERR_WEBRTC_SUPPORT')\r\n      }\r\n    }\r\n\r\n    this._pcReady = false\r\n    this._channelReady = false\r\n    this._iceComplete = false // ice candidate trickle done (got null candidate)\r\n    this._iceCompleteTimer = null // send an offer/answer anyway after some timeout\r\n    this._channel = null\r\n    this._pendingCandidates = []\r\n\r\n    this._isNegotiating = false // is this peer waiting for negotiation to complete?\r\n    this._firstNegotiation = true\r\n    this._batchedNegotiation = false // batch synchronous negotiations\r\n    this._queuedNegotiation = false // is there a queued negotiation request?\r\n    this._sendersAwaitingStable = []\r\n    this._closingInterval = null\r\n\r\n    this._remoteTracks = []\r\n    this._remoteStreams = []\r\n\r\n    this._chunk = null\r\n    this._cb = null\r\n    this._interval = null\r\n\r\n    try {\r\n      this._pc = new RTCPeerConnection(this.config)\r\n    } catch (err) {\r\n      this.__destroy(errCode(err, 'ERR_PC_CONSTRUCTOR'))\r\n      return\r\n    }\r\n\r\n    // We prefer feature detection whenever possible, but sometimes that's not\r\n    // possible for certain implementations.\r\n    this._isReactNativeWebrtc = typeof this._pc._peerConnectionId === 'number'\r\n\r\n    this._pc.oniceconnectionstatechange = () => {\r\n      this._onIceStateChange()\r\n    }\r\n    this._pc.onicegatheringstatechange = () => {\r\n      this._onIceStateChange()\r\n    }\r\n    this._pc.onconnectionstatechange = () => {\r\n      this._onConnectionStateChange()\r\n    }\r\n    this._pc.onsignalingstatechange = () => {\r\n      this._onSignalingStateChange()\r\n    }\r\n    this._pc.onicecandidate = event => {\r\n      this._onIceCandidate(event)\r\n    }\r\n\r\n    // HACK: Fix for odd Firefox behavior, see: https://github.com/feross/simple-peer/pull/783\r\n    if (typeof this._pc.peerIdentity === 'object') {\r\n      this._pc.peerIdentity.catch(err => {\r\n        this.__destroy(errCode(err, 'ERR_PC_PEER_IDENTITY'))\r\n      })\r\n    }\r\n\r\n    // Other spec events, unused by this implementation:\r\n    // - onconnectionstatechange\r\n    // - onicecandidateerror\r\n    // - onfingerprintfailure\r\n    // - onnegotiationneeded\r\n\r\n    if (this.initiator || this.channelNegotiated) {\r\n      this._setupData({\r\n        channel: this._pc.createDataChannel(this.channelName, this.channelConfig)\r\n      })\r\n    } else {\r\n      this._pc.ondatachannel = event => {\r\n        this._setupData(event)\r\n      }\r\n    }\r\n\r\n    this._debug('initial negotiation')\r\n    this._needsNegotiation()\r\n\r\n    this._onFinishBound = () => {\r\n      this._onFinish()\r\n    }\r\n    this.once('finish', this._onFinishBound)\r\n  }\r\n\r\n  get bufferSize () {\r\n    return (this._channel && this._channel.bufferedAmount) || 0\r\n  }\r\n\r\n  // HACK: it's possible channel.readyState is \"closing\" before peer.destroy() fires\r\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\r\n  get connected () {\r\n    return (this._connected && this._channel.readyState === 'open')\r\n  }\r\n\r\n  address () {\r\n    return { port: this.localPort, family: this.localFamily, address: this.localAddress }\r\n  }\r\n\r\n  signal (data) {\r\n    if (this._destroying) return\r\n    if (this.destroyed) throw errCode(new Error('cannot signal after peer is destroyed'), 'ERR_DESTROYED')\r\n    if (typeof data === 'string') {\r\n      try {\r\n        data = JSON.parse(data)\r\n      } catch (err) {\r\n        data = {}\r\n      }\r\n    }\r\n    this._debug('signal()')\r\n\r\n    if (data.renegotiate && this.initiator) {\r\n      this._debug('got request to renegotiate')\r\n      this._needsNegotiation()\r\n    }\r\n    if (data.transceiverRequest && this.initiator) {\r\n      this._debug('got request for transceiver')\r\n      this.addTransceiver(data.transceiverRequest.kind, data.transceiverRequest.init)\r\n    }\r\n    if (data.candidate) {\r\n      if (this._pc.remoteDescription && this._pc.remoteDescription.type) {\r\n        this._addIceCandidate(data.candidate)\r\n      } else {\r\n        this._pendingCandidates.push(data.candidate)\r\n      }\r\n    }\r\n    if (data.sdp) {\r\n      this._pc.setRemoteDescription(new RTCSessionDescription(data))\r\n        .then(() => {\r\n          if (this.destroyed) return\r\n\r\n          this._pendingCandidates.forEach(candidate => {\r\n            this._addIceCandidate(candidate)\r\n          })\r\n          this._pendingCandidates = []\r\n\r\n          if (this._pc.remoteDescription.type === 'offer') this._createAnswer()\r\n        })\r\n        .catch(err => {\r\n          this.__destroy(errCode(err, 'ERR_SET_REMOTE_DESCRIPTION'))\r\n        })\r\n    }\r\n    if (!data.sdp && !data.candidate && !data.renegotiate && !data.transceiverRequest) {\r\n      this.__destroy(errCode(new Error('signal() called with invalid signal data'), 'ERR_SIGNALING'))\r\n    }\r\n  }\r\n\r\n  _addIceCandidate (candidate) {\r\n    const iceCandidateObj = new RTCIceCandidate(candidate)\r\n    this._pc.addIceCandidate(iceCandidateObj)\r\n      .catch(err => {\r\n        if (!iceCandidateObj.address || iceCandidateObj.address.endsWith('.local')) {\r\n          warn('Ignoring unsupported ICE candidate.')\r\n        } else {\r\n          this.__destroy(errCode(err, 'ERR_ADD_ICE_CANDIDATE'))\r\n        }\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Send text/binary data to the remote peer.\r\n   * @param {ArrayBufferView|ArrayBuffer|Uint8Array|string|Blob} chunk\r\n   */\r\n  send (chunk) {\r\n    if (this._destroying) return\r\n    if (this.destroyed) throw errCode(new Error('cannot send after peer is destroyed'), 'ERR_DESTROYED')\r\n    this._channel.send(chunk)\r\n  }\r\n\r\n  _needsNegotiation () {\r\n    this._debug('_needsNegotiation')\r\n    if (this._batchedNegotiation) return // batch synchronous renegotiations\r\n    this._batchedNegotiation = true\r\n    queueMicrotask(() => {\r\n      this._batchedNegotiation = false\r\n      if (this.initiator || !this._firstNegotiation) {\r\n        this._debug('starting batched negotiation')\r\n        this.negotiate()\r\n      } else {\r\n        this._debug('non-initiator initial negotiation request discarded')\r\n      }\r\n      this._firstNegotiation = false\r\n    })\r\n  }\r\n\r\n  negotiate () {\r\n    if (this._destroying) return\r\n    if (this.destroyed) throw errCode(new Error('cannot negotiate after peer is destroyed'), 'ERR_DESTROYED')\r\n\r\n    if (this.initiator) {\r\n      if (this._isNegotiating) {\r\n        this._queuedNegotiation = true\r\n        this._debug('already negotiating, queueing')\r\n      } else {\r\n        this._debug('start negotiation')\r\n        setTimeout(() => { // HACK: Chrome crashes if we immediately call createOffer\r\n          this._createOffer()\r\n        }, 0)\r\n      }\r\n    } else {\r\n      if (this._isNegotiating) {\r\n        this._queuedNegotiation = true\r\n        this._debug('already negotiating, queueing')\r\n      } else {\r\n        this._debug('requesting negotiation from initiator')\r\n        this.emit('signal', { // request initiator to renegotiate\r\n          type: 'renegotiate',\r\n          renegotiate: true\r\n        })\r\n      }\r\n    }\r\n    this._isNegotiating = true\r\n  }\r\n\r\n  _final (cb) {\r\n    if (!this._readableState.ended) this.push(null)\r\n    cb(null)\r\n  }\r\n\r\n  __destroy (err) {\r\n    this.end()\r\n    this._destroy(() => {}, err)\r\n  }\r\n\r\n  _destroy (cb, err) {\r\n    if (this.destroyed || this._destroying) return\r\n    this._destroying = true\r\n\r\n    this._debug('destroying (error: %s)', err && (err.message || err))\r\n\r\n    setTimeout(() => { // allow events concurrent with the call to _destroy() to fire (see #692)\r\n      this._connected = false\r\n      this._pcReady = false\r\n      this._channelReady = false\r\n      this._remoteTracks = null\r\n      this._remoteStreams = null\r\n      this._senderMap = null\r\n\r\n      clearInterval(this._closingInterval)\r\n      this._closingInterval = null\r\n\r\n      clearInterval(this._interval)\r\n      this._interval = null\r\n      this._chunk = null\r\n      this._cb = null\r\n\r\n      if (this._onFinishBound) this.removeListener('finish', this._onFinishBound)\r\n      this._onFinishBound = null\r\n\r\n      if (this._channel) {\r\n        try {\r\n          this._channel.close()\r\n        } catch (err) {}\r\n\r\n        // allow events concurrent with destruction to be handled\r\n        this._channel.onmessage = null\r\n        this._channel.onopen = null\r\n        this._channel.onclose = null\r\n        this._channel.onerror = null\r\n      }\r\n      if (this._pc) {\r\n        try {\r\n          this._pc.close()\r\n        } catch (err) {}\r\n\r\n        // allow events concurrent with destruction to be handled\r\n        this._pc.oniceconnectionstatechange = null\r\n        this._pc.onicegatheringstatechange = null\r\n        this._pc.onsignalingstatechange = null\r\n        this._pc.onicecandidate = null\r\n        this._pc.ontrack = null\r\n        this._pc.ondatachannel = null\r\n      }\r\n      this._pc = null\r\n      this._channel = null\r\n      if (err) this.emit('error', err)\r\n      cb()\r\n    }, 0)\r\n  }\r\n\r\n  _setupData (event) {\r\n    if (!event.channel) {\r\n      // In some situations `pc.createDataChannel()` returns `undefined` (in wrtc),\r\n      // which is invalid behavior. Handle it gracefully.\r\n      // See: https://github.com/feross/simple-peer/issues/163\r\n      return this.__destroy(errCode(new Error('Data channel event is missing `channel` property'), 'ERR_DATA_CHANNEL'))\r\n    }\r\n\r\n    this._channel = event.channel\r\n    this._channel.binaryType = 'arraybuffer'\r\n\r\n    if (typeof this._channel.bufferedAmountLowThreshold === 'number') {\r\n      this._channel.bufferedAmountLowThreshold = MAX_BUFFERED_AMOUNT\r\n    }\r\n\r\n    this.channelName = this._channel.label\r\n\r\n    this._channel.onmessage = event => {\r\n      this._onChannelMessage(event)\r\n    }\r\n    this._channel.onbufferedamountlow = () => {\r\n      this._onChannelBufferedAmountLow()\r\n    }\r\n    this._channel.onopen = () => {\r\n      this._onChannelOpen()\r\n    }\r\n    this._channel.onclose = () => {\r\n      this._onChannelClose()\r\n    }\r\n    this._channel.onerror = event => {\r\n      const err = event.error instanceof Error\r\n        ? event.error\r\n        : new Error(`Datachannel error: ${event.message} ${event.filename}:${event.lineno}:${event.colno}`)\r\n      this.__destroy(errCode(err, 'ERR_DATA_CHANNEL'))\r\n    }\r\n\r\n    // HACK: Chrome will sometimes get stuck in readyState \"closing\", let's check for this condition\r\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\r\n    let isClosing = false\r\n    this._closingInterval = setInterval(() => { // No \"onclosing\" event\r\n      if (this._channel && this._channel.readyState === 'closing') {\r\n        if (isClosing) this._onChannelClose() // closing timed out: equivalent to onclose firing\r\n        isClosing = true\r\n      } else {\r\n        isClosing = false\r\n      }\r\n    }, CHANNEL_CLOSING_TIMEOUT)\r\n  }\r\n\r\n  _write (chunk, cb) {\r\n    if (this.destroyed) return cb(errCode(new Error('cannot write after peer is destroyed'), 'ERR_DATA_CHANNEL'))\r\n\r\n    if (this._connected) {\r\n      try {\r\n        this.send(chunk)\r\n      } catch (err) {\r\n        return this.__destroy(errCode(err, 'ERR_DATA_CHANNEL'))\r\n      }\r\n      if (this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\r\n        this._debug('start backpressure: bufferedAmount %d', this._channel.bufferedAmount)\r\n        this._cb = cb\r\n      } else {\r\n        cb(null)\r\n      }\r\n    } else {\r\n      this._debug('write before connect')\r\n      this._chunk = chunk\r\n      this._cb = cb\r\n    }\r\n  }\r\n\r\n  // When stream finishes writing, close socket. Half open connections are not\r\n  // supported.\r\n  _onFinish () {\r\n    if (this.destroyed) return\r\n\r\n    // Wait a bit before destroying so the socket flushes.\r\n    // TODO: is there a more reliable way to accomplish this?\r\n    const destroySoon = () => {\r\n      setTimeout(() => this.__destroy(), 1000)\r\n    }\r\n\r\n    if (this._connected) {\r\n      destroySoon()\r\n    } else {\r\n      this.once('connect', destroySoon)\r\n    }\r\n  }\r\n\r\n  _startIceCompleteTimeout () {\r\n    if (this.destroyed) return\r\n    if (this._iceCompleteTimer) return\r\n    this._debug('started iceComplete timeout')\r\n    this._iceCompleteTimer = setTimeout(() => {\r\n      if (!this._iceComplete) {\r\n        this._iceComplete = true\r\n        this._debug('iceComplete timeout completed')\r\n        this.emit('iceTimeout')\r\n        this.emit('_iceComplete')\r\n      }\r\n    }, this.iceCompleteTimeout)\r\n  }\r\n\r\n  _createOffer () {\r\n    if (this.destroyed) return\r\n\r\n    this._pc.createOffer(this.offerOptions)\r\n      .then(offer => {\r\n        if (this.destroyed) return\r\n        if (!this.trickle && !this.allowHalfTrickle) offer.sdp = filterTrickle(offer.sdp)\r\n        offer.sdp = this.sdpTransform(offer.sdp)\r\n\r\n        const sendOffer = () => {\r\n          if (this.destroyed) return\r\n          const signal = this._pc.localDescription || offer\r\n          this._debug('signal')\r\n          this.emit('signal', {\r\n            type: signal.type,\r\n            sdp: signal.sdp\r\n          })\r\n        }\r\n\r\n        const onSuccess = () => {\r\n          this._debug('createOffer success')\r\n          if (this.destroyed) return\r\n          if (this.trickle || this._iceComplete) sendOffer()\r\n          else this.once('_iceComplete', sendOffer) // wait for candidates\r\n        }\r\n\r\n        const onError = err => {\r\n          this.__destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'))\r\n        }\r\n\r\n        this._pc.setLocalDescription(offer)\r\n          .then(onSuccess)\r\n          .catch(onError)\r\n      })\r\n      .catch(err => {\r\n        this.__destroy(errCode(err, 'ERR_CREATE_OFFER'))\r\n      })\r\n  }\r\n\r\n  _createAnswer () {\r\n    if (this.destroyed) return\r\n\r\n    this._pc.createAnswer(this.answerOptions)\r\n      .then(answer => {\r\n        if (this.destroyed) return\r\n        if (!this.trickle && !this.allowHalfTrickle) answer.sdp = filterTrickle(answer.sdp)\r\n        answer.sdp = this.sdpTransform(answer.sdp)\r\n\r\n        const sendAnswer = () => {\r\n          if (this.destroyed) return\r\n          const signal = this._pc.localDescription || answer\r\n          this._debug('signal')\r\n          this.emit('signal', {\r\n            type: signal.type,\r\n            sdp: signal.sdp\r\n          })\r\n          if (!this.initiator) this._requestMissingTransceivers?.()\r\n        }\r\n\r\n        const onSuccess = () => {\r\n          if (this.destroyed) return\r\n          if (this.trickle || this._iceComplete) sendAnswer()\r\n          else this.once('_iceComplete', sendAnswer)\r\n        }\r\n\r\n        const onError = err => {\r\n          this.__destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'))\r\n        }\r\n\r\n        this._pc.setLocalDescription(answer)\r\n          .then(onSuccess)\r\n          .catch(onError)\r\n      })\r\n      .catch(err => {\r\n        this.__destroy(errCode(err, 'ERR_CREATE_ANSWER'))\r\n      })\r\n  }\r\n\r\n  _onConnectionStateChange () {\r\n    if (this.destroyed || this._destroying) return\r\n    if (this._pc.connectionState === 'failed') {\r\n      this.__destroy(errCode(new Error('Connection failed.'), 'ERR_CONNECTION_FAILURE'))\r\n    }\r\n  }\r\n\r\n  _onIceStateChange () {\r\n    if (this.destroyed) return\r\n    const iceConnectionState = this._pc.iceConnectionState\r\n    const iceGatheringState = this._pc.iceGatheringState\r\n\r\n    this._debug(\r\n      'iceStateChange (connection: %s) (gathering: %s)',\r\n      iceConnectionState,\r\n      iceGatheringState\r\n    )\r\n    this.emit('iceStateChange', iceConnectionState, iceGatheringState)\r\n\r\n    if (iceConnectionState === 'connected' || iceConnectionState === 'completed') {\r\n      this._pcReady = true\r\n      this._maybeReady()\r\n    }\r\n    if (iceConnectionState === 'failed') {\r\n      this.__destroy(errCode(new Error('Ice connection failed.'), 'ERR_ICE_CONNECTION_FAILURE'))\r\n    }\r\n    if (iceConnectionState === 'closed') {\r\n      this.__destroy(errCode(new Error('Ice connection closed.'), 'ERR_ICE_CONNECTION_CLOSED'))\r\n    }\r\n  }\r\n\r\n  getStats (cb) {\r\n    // statreports can come with a value array instead of properties\r\n    const flattenValues = report => {\r\n      if (Object.prototype.toString.call(report.values) === '[object Array]') {\r\n        report.values.forEach(value => {\r\n          Object.assign(report, value)\r\n        })\r\n      }\r\n      return report\r\n    }\r\n\r\n    // Promise-based getStats() (standard)\r\n    if (this._pc.getStats.length === 0 || this._isReactNativeWebrtc) {\r\n      this._pc.getStats()\r\n        .then(res => {\r\n          const reports = []\r\n          res.forEach(report => {\r\n            reports.push(flattenValues(report))\r\n          })\r\n          cb(null, reports)\r\n        }, err => cb(err))\r\n\r\n    // Single-parameter callback-based getStats() (non-standard)\r\n    } else if (this._pc.getStats.length > 0) {\r\n      this._pc.getStats(res => {\r\n        // If we destroy connection in `connect` callback this code might happen to run when actual connection is already closed\r\n        if (this.destroyed) return\r\n\r\n        const reports = []\r\n        res.result().forEach(result => {\r\n          const report = {}\r\n          result.names().forEach(name => {\r\n            report[name] = result.stat(name)\r\n          })\r\n          report.id = result.id\r\n          report.type = result.type\r\n          report.timestamp = result.timestamp\r\n          reports.push(flattenValues(report))\r\n        })\r\n        cb(null, reports)\r\n      }, err => cb(err))\r\n\r\n    // Unknown browser, skip getStats() since it's anyone's guess which style of\r\n    // getStats() they implement.\r\n    } else {\r\n      cb(null, [])\r\n    }\r\n  }\r\n\r\n  _maybeReady () {\r\n    this._debug('maybeReady pc %s channel %s', this._pcReady, this._channelReady)\r\n    if (this._connected || this._connecting || !this._pcReady || !this._channelReady) return\r\n\r\n    this._connecting = true\r\n\r\n    // HACK: We can't rely on order here, for details see https://github.com/js-platform/node-webrtc/issues/339\r\n    const findCandidatePair = () => {\r\n      if (this.destroyed || this._destroying) return\r\n\r\n      this.getStats((err, items) => {\r\n        if (this.destroyed || this._destroying) return\r\n\r\n        // Treat getStats error as non-fatal. It's not essential.\r\n        if (err) items = []\r\n\r\n        const remoteCandidates = {}\r\n        const localCandidates = {}\r\n        const candidatePairs = {}\r\n        let foundSelectedCandidatePair = false\r\n\r\n        items.forEach(item => {\r\n          // TODO: Once all browsers support the hyphenated stats report types, remove\r\n          // the non-hypenated ones\r\n          if (item.type === 'remotecandidate' || item.type === 'remote-candidate') {\r\n            remoteCandidates[item.id] = item\r\n          }\r\n          if (item.type === 'localcandidate' || item.type === 'local-candidate') {\r\n            localCandidates[item.id] = item\r\n          }\r\n          if (item.type === 'candidatepair' || item.type === 'candidate-pair') {\r\n            candidatePairs[item.id] = item\r\n          }\r\n        })\r\n\r\n        const setSelectedCandidatePair = selectedCandidatePair => {\r\n          foundSelectedCandidatePair = true\r\n\r\n          let local = localCandidates[selectedCandidatePair.localCandidateId]\r\n\r\n          if (local && (local.ip || local.address)) {\r\n            // Spec\r\n            this.localAddress = local.ip || local.address\r\n            this.localPort = Number(local.port)\r\n          } else if (local && local.ipAddress) {\r\n            // Firefox\r\n            this.localAddress = local.ipAddress\r\n            this.localPort = Number(local.portNumber)\r\n          } else if (typeof selectedCandidatePair.googLocalAddress === 'string') {\r\n            // TODO: remove this once Chrome 58 is released\r\n            local = selectedCandidatePair.googLocalAddress.split(':')\r\n            this.localAddress = local[0]\r\n            this.localPort = Number(local[1])\r\n          }\r\n          if (this.localAddress) {\r\n            this.localFamily = this.localAddress.includes(':') ? 'IPv6' : 'IPv4'\r\n          }\r\n\r\n          let remote = remoteCandidates[selectedCandidatePair.remoteCandidateId]\r\n\r\n          if (remote && (remote.ip || remote.address)) {\r\n            // Spec\r\n            this.remoteAddress = remote.ip || remote.address\r\n            this.remotePort = Number(remote.port)\r\n          } else if (remote && remote.ipAddress) {\r\n            // Firefox\r\n            this.remoteAddress = remote.ipAddress\r\n            this.remotePort = Number(remote.portNumber)\r\n          } else if (typeof selectedCandidatePair.googRemoteAddress === 'string') {\r\n            // TODO: remove this once Chrome 58 is released\r\n            remote = selectedCandidatePair.googRemoteAddress.split(':')\r\n            this.remoteAddress = remote[0]\r\n            this.remotePort = Number(remote[1])\r\n          }\r\n          if (this.remoteAddress) {\r\n            this.remoteFamily = this.remoteAddress.includes(':') ? 'IPv6' : 'IPv4'\r\n          }\r\n\r\n          this._debug(\r\n            'connect local: %s:%s remote: %s:%s',\r\n            this.localAddress,\r\n            this.localPort,\r\n            this.remoteAddress,\r\n            this.remotePort\r\n          )\r\n        }\r\n\r\n        items.forEach(item => {\r\n          // Spec-compliant\r\n          if (item.type === 'transport' && item.selectedCandidatePairId) {\r\n            setSelectedCandidatePair(candidatePairs[item.selectedCandidatePairId])\r\n          }\r\n\r\n          // Old implementations\r\n          if (\r\n            (item.type === 'googCandidatePair' && item.googActiveConnection === 'true') ||\r\n            ((item.type === 'candidatepair' || item.type === 'candidate-pair') && item.selected)\r\n          ) {\r\n            setSelectedCandidatePair(item)\r\n          }\r\n        })\r\n\r\n        // Ignore candidate pair selection in browsers like Safari 11 that do not have any local or remote candidates\r\n        // But wait until at least 1 candidate pair is available\r\n        if (!foundSelectedCandidatePair && (!Object.keys(candidatePairs).length || Object.keys(localCandidates).length)) {\r\n          setTimeout(findCandidatePair, 100)\r\n          return\r\n        } else {\r\n          this._connecting = false\r\n          this._connected = true\r\n        }\r\n\r\n        if (this._chunk) {\r\n          try {\r\n            this.send(this._chunk)\r\n          } catch (err) {\r\n            return this.__destroy(errCode(err, 'ERR_DATA_CHANNEL'))\r\n          }\r\n          this._chunk = null\r\n          this._debug('sent chunk from \"write before connect\"')\r\n\r\n          const cb = this._cb\r\n          this._cb = null\r\n          cb(null)\r\n        }\r\n\r\n        // If `bufferedAmountLowThreshold` and 'onbufferedamountlow' are unsupported,\r\n        // fallback to using setInterval to implement backpressure.\r\n        if (typeof this._channel.bufferedAmountLowThreshold !== 'number') {\r\n          this._interval = setInterval(() => this._onInterval(), 150)\r\n          if (this._interval.unref) this._interval.unref()\r\n        }\r\n\r\n        this._debug('connect')\r\n        this.emit('connect')\r\n      })\r\n    }\r\n    findCandidatePair()\r\n  }\r\n\r\n  _onInterval () {\r\n    if (!this._cb || !this._channel || this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\r\n      return\r\n    }\r\n    this._onChannelBufferedAmountLow()\r\n  }\r\n\r\n  _onSignalingStateChange () {\r\n    if (this.destroyed) return\r\n\r\n    if (this._pc.signalingState === 'stable') {\r\n      this._isNegotiating = false\r\n\r\n      // HACK: Firefox doesn't yet support removing tracks when signalingState !== 'stable'\r\n      this._debug('flushing sender queue', this._sendersAwaitingStable)\r\n      this._sendersAwaitingStable.forEach(sender => {\r\n        this._pc.removeTrack(sender)\r\n        this._queuedNegotiation = true\r\n      })\r\n      this._sendersAwaitingStable = []\r\n\r\n      if (this._queuedNegotiation) {\r\n        this._debug('flushing negotiation queue')\r\n        this._queuedNegotiation = false\r\n        this._needsNegotiation() // negotiate again\r\n      } else {\r\n        this._debug('negotiated')\r\n        this.emit('negotiated')\r\n      }\r\n    }\r\n\r\n    this._debug('signalingStateChange %s', this._pc.signalingState)\r\n    this.emit('signalingStateChange', this._pc.signalingState)\r\n  }\r\n\r\n  _onIceCandidate (event) {\r\n    if (this.destroyed) return\r\n    if (event.candidate && this.trickle) {\r\n      this.emit('signal', {\r\n        type: 'candidate',\r\n        candidate: {\r\n          candidate: event.candidate.candidate,\r\n          sdpMLineIndex: event.candidate.sdpMLineIndex,\r\n          sdpMid: event.candidate.sdpMid\r\n        }\r\n      })\r\n    } else if (!event.candidate && !this._iceComplete) {\r\n      this._iceComplete = true\r\n      this.emit('_iceComplete')\r\n    }\r\n    // as soon as we've received one valid candidate start timeout\r\n    if (event.candidate) {\r\n      this._startIceCompleteTimeout()\r\n    }\r\n  }\r\n\r\n  _onChannelMessage (event) {\r\n    if (this.destroyed) return\r\n    let data = event.data\r\n    if (data instanceof ArrayBuffer) {\r\n      data = new Uint8Array(data)\r\n    } else if (this.__objectMode === false) {\r\n      data = text2arr(data)\r\n    }\r\n    this.push(data)\r\n  }\r\n\r\n  _onChannelBufferedAmountLow () {\r\n    if (this.destroyed || !this._cb) return\r\n    this._debug('ending backpressure: bufferedAmount %d', this._channel.bufferedAmount)\r\n    const cb = this._cb\r\n    this._cb = null\r\n    cb(null)\r\n  }\r\n\r\n  _onChannelOpen () {\r\n    if (this._connected || this.destroyed) return\r\n    this._debug('on channel open')\r\n    this._channelReady = true\r\n    this._maybeReady()\r\n  }\r\n\r\n  _onChannelClose () {\r\n    if (this.destroyed) return\r\n    this._debug('on channel close')\r\n    this.__destroy()\r\n  }\r\n\r\n  _debug () {\r\n    const args = [].slice.call(arguments)\r\n    args[0] = '[' + this._id + '] ' + args[0]\r\n    Debug.apply(null, args)\r\n  }\r\n}\r\n\r\nPeer.WEBRTC_SUPPORT = !!RTCPeerConnection\r\n\r\n/**\r\n * Expose peer and data channel config for overriding all Peer\r\n * instances. Otherwise, just set opts.config or opts.channelConfig\r\n * when constructing a Peer.\r\n */\r\nPeer.config = {\r\n  iceServers: [\r\n    {\r\n      urls: [\r\n        'stun:stun.l.google.com:19302',\r\n        'stun:global.stun.twilio.com:3478'\r\n      ]\r\n    }\r\n  ],\r\n  sdpSemantics: 'unified-plan'\r\n}\r\n\r\nPeer.channelConfig = {}\r\n\r\nexport default Peer\r\n", "const scope = typeof window !== 'undefined' ? window : self\r\n\r\n// @ts-ignore\r\nexport const RTCPeerConnection = scope.RTCPeerConnection || scope.mozRTCPeerConnection || scope.webkitRTCPeerConnection\r\n// @ts-ignore\r\nexport const RTCSessionDescription = scope.RTCSessionDescription || scope.mozRTCSessionDescription || scope.webkitRTCSessionDescription\r\n// @ts-ignore\r\nexport const RTCIceCandidate = scope.RTCIceCandidate || scope.mozRTCIceCandidate || scope.webkitRTCIceCandidate\r\nexport const RTCIceTransport = scope.RTCIceTransport\r\nexport const RTCDataChannel = scope.RTCDataChannel\r\nexport const RTCSctpTransport = scope.RTCSctpTransport\r\nexport const RTCDtlsTransport = scope.RTCDtlsTransport\r\nexport const RTCCertificate = scope.RTCCertificate\r\nexport const MediaStream = scope.MediaStream\r\nexport const MediaStreamTrack = scope.MediaStreamTrack\r\nexport const MediaStreamTrackEvent = scope.MediaStreamTrackEvent\r\nexport const RTCPeerConnectionIceEvent = scope.RTCPeerConnectionIceEvent\r\nexport const RTCDataChannelEvent = scope.RTCDataChannelEvent\r\nexport const RTCTrackEvent = scope.RTCTrackEvent\r\nexport const RTCError = scope.RTCError\r\nexport const RTCErrorEvent = scope.RTCErrorEvent\r\nexport const RTCRtpTransceiver = scope.RTCRtpTransceiver\r\nexport const RTCRtpReceiver = scope.RTCRtpReceiver\r\nexport const RTCRtpSender = scope.RTCRtpSender\r\n\r\nexport * as default from './browser.js'\r\n", "import EventEmitter from 'events'\nimport fs from 'fs'\nimport net from 'net' // browser exclude\nimport os from 'os' // browser exclude\nimport path from 'path'\nimport addrToIPPort from 'addr-to-ip-port'\nimport BitField from 'bitfield'\nimport CacheChunkStore from 'cache-chunk-store'\nimport { chunkStoreWrite } from 'chunk-store-iterator'\nimport cpus from 'cpus'\nimport debugFactory from 'debug'\nimport Discovery from 'torrent-discovery'\nimport FSChunkStore from 'fs-chunk-store' // browser: `fsa-chunk-store`\nimport fetch from 'cross-fetch-ponyfill'\nimport ImmediateChunkStore from 'immediate-chunk-store'\nimport ltDontHave from 'lt_donthave'\nimport MemoryChunkStore from 'memory-chunk-store'\nimport joinIterator from 'join-async-iterator'\nimport parallel from 'run-parallel'\nimport parallelLimit from 'run-parallel-limit'\nimport parseTorrent, { toMagnetURI, toTorrentFile, remote } from 'parse-torrent'\nimport Piece from 'torrent-piece'\nimport queueMicrotask from 'queue-microtask'\nimport randomIterate from 'random-iterate'\nimport { hash, arr2hex } from 'uint8-util'\nimport throughput from 'throughput'\nimport utMetadata from 'ut_metadata'\nimport utPex from 'ut_pex' // browser exclude\n\nimport File from './file.js'\nimport Peer from './peer.js'\nimport RarityMap from './rarity-map.js'\nimport utp from './utp.cjs' // browser exclude\nimport WebConn from './webconn.js'\nimport { Selections } from './selections.js'\n\nimport VERSION from '../version.cjs'\n\nconst debug = debugFactory('webtorrent:torrent')\nconst MAX_BLOCK_LENGTH = 128 * 1024\nconst PIECE_TIMEOUT = 30_000\nconst CHOKE_TIMEOUT = 5_000\nconst SPEED_THRESHOLD = 3 * Piece.BLOCK_LENGTH\n\nconst PIPELINE_MIN_DURATION = 0.5\nconst PIPELINE_MAX_DURATION = 1\n\nconst RECHOKE_INTERVAL = 10_000 // 10 seconds\nconst RECHOKE_OPTIMISTIC_DURATION = 2 // 30 seconds\n\nconst DEFAULT_NO_PEERS_INTERVAL = 30_000 // 30 seconds\n\n// IndexedDB chunk stores used in the browser benefit from high concurrency\nconst FILESYSTEM_CONCURRENCY = process.browser ? cpus().length : 2\n\nconst RECONNECT_WAIT = [1_000, 5_000, 15_000]\n\nconst USER_AGENT = `WebTorrent/${VERSION} (https://webtorrent.io)`\n\n// if nodejs or browser that supports FSA\nconst SUPPORTS_FSA = globalThis.navigator?.storage?.getDirectory && globalThis.FileSystemFileHandle?.prototype?.createWritable\nconst FALLBACK_STORE = !process.browser || SUPPORTS_FSA\n  ? FSChunkStore // Node or browser with FSA\n  : MemoryChunkStore\n\nlet TMP\ntry {\n  TMP = path.join(fs.statSync('/tmp') && '/tmp', 'webtorrent')\n} catch (err) {\n  TMP = path.join(typeof os.tmpdir === 'function' ? os.tmpdir() : '/', 'webtorrent')\n}\n\nconst IDLE_CALLBACK = typeof window !== 'undefined' && typeof window.requestIdleCallback === 'function' && window.requestIdleCallback\n\nexport default class Torrent extends EventEmitter {\n  constructor (torrentId, client, opts) {\n    super()\n\n    this._debugId = 'unknown infohash'\n    this.client = client\n\n    this.announce = opts.announce\n    this.urlList = opts.urlList\n\n    this.path = opts.path || TMP\n    this.addUID = opts.addUID || false\n    this.rootDir = opts.rootDir || null\n    this.skipVerify = !!opts.skipVerify\n    this._store = opts.store || FALLBACK_STORE\n    this._preloadedStore = opts.preloadedStore || null\n    this._storeCacheSlots = opts.storeCacheSlots !== undefined ? opts.storeCacheSlots : 20\n    this._destroyStoreOnDestroy = opts.destroyStoreOnDestroy || false\n    this.store = null\n    this.storeOpts = opts.storeOpts\n    this.alwaysChokeSeeders = opts.alwaysChokeSeeders ?? true\n\n    this._getAnnounceOpts = opts.getAnnounceOpts\n\n    // if defined, `opts.private` overrides default privacy of torrent\n    if (typeof opts.private === 'boolean') this.private = opts.private\n\n    this.strategy = opts.strategy || 'sequential'\n\n    this.maxWebConns = opts.maxWebConns || 4\n\n    this._rechokeNumSlots = (opts.uploads === false || opts.uploads === 0)\n      ? 0\n      : (+opts.uploads || 10)\n    this._rechokeOptimisticWire = null\n    this._rechokeOptimisticTime = 0\n    this._rechokeIntervalId = null\n    this._noPeersIntervalId = null\n    this._noPeersIntervalTime = opts.noPeersIntervalTime ? opts.noPeersIntervalTime * 1000 : DEFAULT_NO_PEERS_INTERVAL\n    this._startAsDeselected = opts.deselect || false\n\n    this.ready = false\n    this.destroyed = false\n    this.paused = opts.paused || false\n    this.done = false\n\n    this.metadata = null\n    this.files = []\n\n    // Pieces that need to be downloaded, indexed by piece index\n    this.pieces = []\n\n    this._amInterested = false\n    this._selections = new Selections()\n    this._critical = []\n\n    this.wires = [] // open wires (added *after* handshake)\n\n    this._queue = [] // queue of outgoing tcp peers to connect to\n    this._peers = {} // connected peers (addr/peerId -> Peer)\n    this._peersLength = 0 // number of elements in `this._peers` (cache, for perf)\n\n    // stats\n    this.received = 0\n    this.uploaded = 0\n    this._downloadSpeed = throughput()\n    this._uploadSpeed = throughput()\n\n    // for cleanup\n    this._servers = []\n    this._xsRequests = []\n\n    // TODO: remove this and expose a hook instead\n    // optimization: don't recheck every file if it hasn't changed\n    this._fileModtimes = opts.fileModtimes\n\n    if (torrentId !== null) this._onTorrentId(torrentId)\n\n    this._debug('new torrent')\n  }\n\n  get timeRemaining () {\n    if (this.done) return 0\n    if (this.downloadSpeed === 0) return Infinity\n    return ((this.length - this.downloaded) / this.downloadSpeed) * 1000\n  }\n\n  get downloaded () {\n    if (!this.bitfield) return 0\n    let downloaded = 0\n    for (let index = 0, len = this.pieces.length; index < len; ++index) {\n      if (this.bitfield.get(index)) { // verified data\n        downloaded += (index === len - 1) ? this.lastPieceLength : this.pieceLength\n      } else { // \"in progress\" data\n        const piece = this.pieces[index]\n        downloaded += (piece.length - piece.missing)\n      }\n    }\n    return downloaded\n  }\n\n  // TODO: re-enable this. The number of missing pieces. Used to implement 'end game' mode.\n  // Object.defineProperty(Storage.prototype, 'numMissing', {\n  //   get: function () {\n  //     var self = this\n  //     var numMissing = self.pieces.length\n  //     for (var index = 0, len = self.pieces.length; index < len; index++) {\n  //       numMissing -= self.bitfield.get(index)\n  //     }\n  //     return numMissing\n  //   }\n  // })\n\n  get downloadSpeed () { return this._downloadSpeed() }\n\n  get uploadSpeed () { return this._uploadSpeed() }\n\n  get progress () { return this.length ? this.downloaded / this.length : 0 }\n\n  get ratio () { return this.uploaded / (this.received || this.length) }\n\n  get numPeers () { return this.wires.length }\n\n  get torrentFileBlob () {\n    if (!this.torrentFile) return null\n    return new Blob([this.torrentFile], { type: 'application/x-bittorrent' })\n  }\n\n  get _numQueued () {\n    return this._queue.length + (this._peersLength - this._numConns)\n  }\n\n  get _numConns () {\n    let numConns = 0\n    for (const id in this._peers) {\n      if (this._peers[id].connected) numConns += 1\n    }\n    return numConns\n  }\n\n  async _onTorrentId (torrentId) {\n    if (this.destroyed) return\n\n    let parsedTorrent\n    try { parsedTorrent = await parseTorrent(torrentId) } catch (err) {}\n    if (parsedTorrent) {\n      // Attempt to set infoHash property synchronously\n      this.infoHash = parsedTorrent.infoHash\n      this._debugId = arr2hex(parsedTorrent.infoHash).substring(0, 7)\n      queueMicrotask(() => {\n        if (this.destroyed) return\n        this._onParsedTorrent(parsedTorrent)\n      })\n    } else {\n      // If torrentId failed to parse, it could be in a form that requires an async\n      // operation, i.e. http/https link, filesystem path, or Blob.\n      remote(torrentId, (err, parsedTorrent) => {\n        if (this.destroyed) return\n        if (err) return this._destroy(err)\n        this._onParsedTorrent(parsedTorrent)\n      })\n    }\n  }\n\n  _onParsedTorrent (parsedTorrent) {\n    if (this.destroyed) return\n\n    this._processParsedTorrent(parsedTorrent)\n\n    if (!this.infoHash) {\n      return this._destroy(new Error('Malformed torrent data: No info hash'))\n    }\n\n    this._rechokeIntervalId = setInterval(() => {\n      this._rechoke()\n    }, RECHOKE_INTERVAL)\n    if (this._rechokeIntervalId.unref) this._rechokeIntervalId.unref()\n\n    // Private 'infoHash' event allows client.add to check for duplicate torrents and\n    // destroy them before the normal 'infoHash' event is emitted. Prevents user\n    // applications from needing to deal with duplicate 'infoHash' events.\n    this.emit('_infoHash', this.infoHash)\n    if (this.destroyed) return\n\n    this.emit('infoHash', this.infoHash)\n    if (this.destroyed) return // user might destroy torrent in event handler\n\n    if (this.client.listening) {\n      this._onListening()\n    } else {\n      this.client.once('listening', () => {\n        this._onListening()\n      })\n    }\n  }\n\n  _processParsedTorrent (parsedTorrent) {\n    this._debugId = arr2hex(parsedTorrent.infoHash).substring(0, 7)\n\n    if (typeof this.private !== 'undefined') {\n      // `private` option overrides default, only if it's defined\n      parsedTorrent.private = this.private\n    }\n\n    if (Array.isArray(this.announce)) {\n      // Allow specifying trackers via `opts` parameter\n      parsedTorrent.announce = parsedTorrent.announce.concat(this.announce)\n    }\n\n    if (this.client.tracker && Array.isArray(this.client.tracker.announce) && !parsedTorrent.private) {\n      // If the client has a default tracker, add it to the announce list if torrent is not private\n      parsedTorrent.announce = parsedTorrent.announce.concat(this.client.tracker.announce)\n    }\n\n    if (this.client.tracker && global.WEBTORRENT_ANNOUNCE && !parsedTorrent.private) {\n      // So `webtorrent-hybrid` can force specific trackers to be used\n      parsedTorrent.announce = parsedTorrent.announce.concat(global.WEBTORRENT_ANNOUNCE)\n    }\n\n    if (this.urlList) {\n      // Allow specifying web seeds via `opts` parameter\n      parsedTorrent.urlList = parsedTorrent.urlList.concat(this.urlList)\n    }\n\n    // remove duplicates by converting to Set and back\n    parsedTorrent.announce = Array.from(new Set(parsedTorrent.announce))\n    parsedTorrent.urlList = Array.from(new Set(parsedTorrent.urlList))\n\n    Object.assign(this, parsedTorrent)\n\n    this.magnetURI = toMagnetURI(parsedTorrent)\n    this.torrentFile = toTorrentFile(parsedTorrent)\n  }\n\n  _onListening () {\n    if (this.destroyed) return\n\n    if (this.info) {\n      // if full metadata was included in initial torrent id, use it immediately. Otherwise,\n      // wait for torrent-discovery to find peers and ut_metadata to get the metadata.\n      this._onMetadata(this)\n    } else {\n      if (this.xs) this._getMetadataFromServer()\n      this._startDiscovery()\n    }\n  }\n\n  _startDiscovery () {\n    if (this.discovery || this.destroyed) return\n\n    let trackerOpts = this.client.tracker\n    if (trackerOpts) {\n      trackerOpts = Object.assign({}, this.client.tracker, {\n        getAnnounceOpts: () => {\n          if (this.destroyed) return\n\n          const opts = {\n            uploaded: this.uploaded,\n            downloaded: this.downloaded,\n            left: Math.max(this.length - this.downloaded, 0)\n          }\n          if (this.client.tracker.getAnnounceOpts) {\n            Object.assign(opts, this.client.tracker.getAnnounceOpts())\n          }\n          if (this._getAnnounceOpts) {\n            // TODO: consider deprecating this, as it's redundant with the former case\n            Object.assign(opts, this._getAnnounceOpts())\n          }\n          return opts\n        }\n      })\n    }\n\n    // add BEP09 peer-address\n    if (this.peerAddresses) {\n      this.peerAddresses.forEach(peer => this.addPeer(peer, Peer.SOURCE_MANUAL))\n    }\n\n    // begin discovering peers via DHT and trackers\n    this.discovery = new Discovery({\n      infoHash: this.infoHash,\n      announce: this.announce,\n      peerId: this.client.peerId,\n      dht: !this.private && this.client.dht,\n      tracker: trackerOpts,\n      port: this.client.torrentPort,\n      userAgent: USER_AGENT,\n      lsd: this.client.lsd\n    })\n\n    this.discovery.on('error', (err) => {\n      this._destroy(err)\n    })\n\n    this.discovery.on('peer', (peer, source) => {\n      this._debug('peer %s discovered via %s', peer, source)\n      // Don't create new outgoing connections when torrent is done and seedOutgoingConnections is false.\n      if (!this.client.seedOutgoingConnections && this.done) {\n        this._debug('ignoring peer %s: torrent is done and seedOutgoingConnections is false', peer)\n        return\n      }\n      this.addPeer(peer, source)\n    })\n\n    this.discovery.on('trackerAnnounce', () => {\n      this.emit('trackerAnnounce')\n    })\n\n    this.discovery.on('dhtAnnounce', () => {\n      this.emit('dhtAnnounce')\n    })\n\n    this.discovery.on('warning', (err) => {\n      this.emit('warning', err)\n    })\n\n    this._noPeersIntervalId = setInterval(() => {\n      if (this.destroyed) return\n\n      const counters = {\n        [Peer.SOURCE_TRACKER]: {\n          enabled: !!this.client.tracker,\n          numPeers: 0\n        },\n        [Peer.SOURCE_DHT]: {\n          enabled: !!this.client.dht,\n          numPeers: 0\n        },\n        [Peer.SOURCE_LSD]: {\n          enabled: !!this.client.lsd,\n          numPeers: 0\n        },\n        [Peer.SOURCE_UT_PEX]: {\n          enabled: (this.client.utPex && typeof utPex === 'function'),\n          numPeers: 0\n        }\n      }\n      for (const peer of Object.values(this._peers)) {\n        const counter = counters[peer.source]\n        if (typeof counter !== 'undefined') counter.numPeers++\n      }\n      for (const source of Object.keys(counters)) {\n        const counter = counters[source]\n        if (counter.enabled && counter.numPeers === 0) this.emit('noPeers', source)\n      }\n    }, this._noPeersIntervalTime)\n    if (this._noPeersIntervalId.unref) this._noPeersIntervalId.unref()\n  }\n\n  _getMetadataFromServer () {\n    // to allow function hoisting\n    const self = this\n\n    const urls = Array.isArray(this.xs) ? this.xs : [this.xs]\n\n    self._xsRequestsController = new AbortController()\n\n    const signal = self._xsRequestsController.signal\n\n    const tasks = urls.map(url => cb => {\n      getMetadataFromURL(url, cb)\n    })\n    parallel(tasks)\n\n    async function getMetadataFromURL (url, cb) {\n      if (url.indexOf('http://') !== 0 && url.indexOf('https://') !== 0) {\n        self.emit('warning', new Error(`skipping non-http xs param: ${url}`))\n        return cb(null)\n      }\n\n      const opts = {\n        method: 'GET',\n        headers: {\n          'user-agent': USER_AGENT\n        },\n        signal\n      }\n      let res\n      try {\n        res = await fetch(url, opts)\n      } catch (err) {\n        self.emit('warning', new Error(`http error from xs param: ${url}`))\n        return cb(null)\n      }\n\n      if (self.destroyed) return cb(null)\n      if (self.metadata) return cb(null)\n\n      if (res.status !== 200) {\n        self.emit('warning', new Error(`non-200 status code ${res.status} from xs param: ${url}`))\n        return cb(null)\n      }\n      let torrent\n      try {\n        torrent = new Uint8Array(await res.arrayBuffer())\n      } catch (e) {\n        self.emit('warning', e)\n        return cb(null)\n      }\n\n      let parsedTorrent\n      try {\n        parsedTorrent = await parseTorrent(torrent)\n      } catch (err) {}\n\n      if (!parsedTorrent) {\n        self.emit('warning', new Error(`got invalid torrent file from xs param: ${url}`))\n        return cb(null)\n      }\n\n      if (parsedTorrent.infoHash !== self.infoHash) {\n        self.emit('warning', new Error(`got torrent file with incorrect info hash from xs param: ${url}`))\n        return cb(null)\n      }\n      self._onMetadata(parsedTorrent)\n      cb(null)\n    }\n  }\n\n  /**\n   * Called when the full torrent metadata is received.\n   */\n  async _onMetadata (metadata) {\n    if (this.metadata || this.destroyed) return\n    this._debug('got metadata')\n\n    this._xsRequestsController?.abort()\n    this._xsRequestsController = null\n\n    let parsedTorrent\n    if (metadata && metadata.infoHash) {\n      // `metadata` is a parsed torrent (from parse-torrent module)\n      parsedTorrent = metadata\n    } else {\n      try {\n        parsedTorrent = await parseTorrent(metadata)\n      } catch (err) {\n        return this._destroy(err)\n      }\n    }\n\n    this._processParsedTorrent(parsedTorrent)\n    this.metadata = this.torrentFile\n\n    // add web seed urls (BEP19)\n    if (this.client.enableWebSeeds) {\n      this.urlList.forEach(url => {\n        this.addWebSeed(url)\n      })\n    }\n\n    this._rarityMap = new RarityMap(this)\n\n    this.files = this.files.map(file => new File(this, file))\n\n    let rawStore = this._preloadedStore\n    if (!rawStore) {\n      rawStore = new this._store(this.pieceLength, {\n        ...this.storeOpts,\n        torrent: this,\n        path: this.path,\n        files: this.files,\n        length: this.length,\n        name: this.name + ' - ' + this.infoHash.slice(0, 8),\n        addUID: this.addUID,\n        rootDir: this.rootDir,\n        max: this._storeCacheSlots\n      })\n    }\n\n    // don't use the cache if the store is already in memory\n    if (this._storeCacheSlots > 0 && !(rawStore instanceof MemoryChunkStore)) {\n      rawStore = new CacheChunkStore(rawStore, {\n        max: this._storeCacheSlots\n      })\n    }\n\n    this.store = new ImmediateChunkStore(\n      rawStore\n    )\n\n    // Select only specified files (BEP53) http://www.bittorrent.org/beps/bep_0053.html\n    if (this.so && !this._startAsDeselected) {\n      this.files.forEach((v, i) => {\n        if (this.so.includes(i)) {\n          this.files[i].select()\n        }\n      })\n    } else {\n      // start off selecting the entire torrent with low priority\n      if (this.pieces.length !== 0 && !this._startAsDeselected) {\n        this.select(0, this.pieces.length - 1, 0)\n      }\n    }\n\n    this._hashes = this.pieces\n\n    this.pieces = this.pieces.map((hash, i) => {\n      const pieceLength = (i === this.pieces.length - 1)\n        ? this.lastPieceLength\n        : this.pieceLength\n      return new Piece(pieceLength)\n    })\n\n    this._reservations = this.pieces.map(() => [])\n\n    this.bitfield = new BitField(this.pieces.length)\n\n    // Emit 'metadata' before 'ready' and 'done'\n    this.emit('metadata')\n\n    // User might destroy torrent in response to 'metadata' event\n    if (this.destroyed) return\n\n    if (this.skipVerify) {\n      // Skip verifying exisitng data and just assume it's correct\n      this._markAllVerified()\n      this._onStore()\n    } else {\n      const onPiecesVerified = (err) => {\n        if (err) return this._destroy(err)\n        this._debug('done verifying')\n        this._onStore()\n      }\n\n      this._debug('verifying existing torrent data')\n      if (this._fileModtimes && this._store === FSChunkStore) {\n        // don't verify if the files haven't been modified since we last checked\n        this.getFileModtimes((err, fileModtimes) => {\n          if (err) return this._destroy(err)\n\n          const unchanged = this.files.map((_, index) => fileModtimes[index] === this._fileModtimes[index]).every(x => x)\n\n          if (unchanged) {\n            this._markAllVerified()\n            this._onStore()\n          } else {\n            this._verifyPieces(onPiecesVerified)\n          }\n        })\n      } else {\n        this._verifyPieces(onPiecesVerified)\n      }\n    }\n  }\n\n  /*\n   * TODO: remove this\n   * Gets the last modified time of every file on disk for this torrent.\n   * Only valid in Node, not in the browser.\n   */\n  getFileModtimes (cb) {\n    const ret = []\n    parallelLimit(this.files.map((file, index) => cb => {\n      const filePath = this.addUID ? path.join(this.name + ' - ' + this.infoHash.slice(0, 8)) : path.join(this.path, file.path)\n      fs.stat(filePath, (err, stat) => {\n        if (err && err.code !== 'ENOENT') return cb(err)\n        ret[index] = stat && stat.mtime.getTime()\n        cb(null)\n      })\n    }), FILESYSTEM_CONCURRENCY, err => {\n      this._debug('done getting file modtimes')\n      cb(err, ret)\n    })\n  }\n\n  _verifyPieces (cb) {\n    parallelLimit(this.pieces.map((piece, index) => cb => {\n      if (this.destroyed) return cb(new Error('torrent is destroyed'))\n\n      const getOpts = {}\n      // Specify length for the last piece in case it is zero-padded\n      if (index === this.pieces.length - 1) {\n        getOpts.length = this.lastPieceLength\n      }\n      this.store.get(index, getOpts, async (err, buf) => {\n        if (this.destroyed) return cb(new Error('torrent is destroyed'))\n\n        if (err) return queueMicrotask(() => cb(null)) // ignore error\n\n        const hex = await hash(buf, 'hex')\n        if (this.destroyed) return cb(new Error('torrent is destroyed'))\n\n        if (hex === this._hashes[index]) {\n          this._debug('piece verified %s', index)\n          this._markVerified(index)\n        } else {\n          this._markUnverified(index)\n          this._debug('piece invalid %s', index)\n        }\n        cb(null)\n      })\n    }), FILESYSTEM_CONCURRENCY, cb)\n  }\n\n  rescanFiles (cb) {\n    if (this.destroyed) throw new Error('torrent is destroyed')\n    if (!cb) cb = noop\n\n    this._verifyPieces((err) => {\n      if (err) {\n        this._destroy(err)\n        return cb(err)\n      }\n\n      this._checkDone()\n      cb(null)\n    })\n  }\n\n  _markAllVerified () {\n    for (let index = 0; index < this.pieces.length; index++) {\n      this._markVerified(index)\n    }\n  }\n\n  _markVerified (index) {\n    this.pieces[index] = null\n    this._reservations[index] = null\n    this.bitfield.set(index, true)\n    this.emit('verified', index)\n  }\n\n  _markUnverified (index) {\n    const len = (index === this.pieces.length - 1)\n      ? this.lastPieceLength\n      : this.pieceLength\n    this.pieces[index] = new Piece(len)\n    this.bitfield.set(index, false)\n    if (!this._startAsDeselected) this.select(index, index, 1)\n    this.files.forEach(file => {\n      if (file.done && file.includes(index)) file.done = false\n    })\n  }\n\n  _hasAllPieces () {\n    for (let index = 0; index < this.pieces.length; index++) {\n      if (!this.bitfield.get(index)) return false\n    }\n    return true\n  }\n\n  _hasNoPieces () {\n    return !this._hasMorePieces(0)\n  }\n\n  _hasMorePieces (threshold) {\n    let count = 0\n    for (let index = 0; index < this.pieces.length; index++) {\n      if (this.bitfield.get(index)) {\n        count += 1\n        if (count > threshold) return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * Called when the metadata, listening server, and underlying chunk store is initialized.\n   */\n  _onStore () {\n    if (this.destroyed) return\n    this._debug('on store')\n\n    // Start discovery before emitting 'ready'\n    this._startDiscovery()\n\n    this.ready = true\n    this.emit('ready')\n\n    // Files may start out done if the file was already in the store\n    this._checkDone()\n\n    // In case any selections were made before torrent was ready\n    this._updateSelections()\n\n    // Start requesting pieces after we have initially verified them\n    this.wires.forEach(wire => {\n      // If we didn't have the metadata at the time ut_metadata was initialized for this\n      // wire, we still want to make it available to the peer in case they request it.\n      if (wire.ut_metadata) wire.ut_metadata.setMetadata(this.metadata)\n\n      this._onWireWithMetadata(wire)\n    })\n  }\n\n  destroy (opts, cb) {\n    if (typeof opts === 'function') return this.destroy(null, opts)\n\n    this._destroy(null, opts, cb)\n  }\n\n  _destroy (err, opts, cb) {\n    if (typeof opts === 'function') return this._destroy(err, null, opts)\n    if (this.destroyed) return\n    this.destroyed = true\n    this._debug('destroy')\n\n    this.client._remove(this)\n\n    this._selections.clear()\n\n    clearInterval(this._rechokeIntervalId)\n\n    clearInterval(this._noPeersIntervalId)\n\n    this._xsRequestsController?.abort()\n\n    if (this._rarityMap) {\n      this._rarityMap.destroy()\n    }\n\n    for (const id in this._peers) {\n      this.removePeer(id)\n    }\n\n    this.files.forEach(file => {\n      if (file instanceof File) file._destroy()\n    })\n\n    const tasks = this._servers.map(server => cb => {\n      server.destroy(cb)\n    })\n\n    if (this.discovery) {\n      tasks.push(cb => {\n        this.discovery.destroy(cb)\n      })\n    }\n\n    if (this.store) {\n      let destroyStore = this._destroyStoreOnDestroy\n      if (opts && opts.destroyStore !== undefined) {\n        destroyStore = opts.destroyStore\n      }\n      tasks.push(cb => {\n        if (destroyStore) {\n          this.store.destroy(cb)\n        } else {\n          this.store.close(cb)\n        }\n      })\n    }\n\n    parallel(tasks, cb)\n\n    if (err) {\n      // Torrent errors are emitted at `torrent.on('error')`. If there are no 'error'\n      // event handlers on the torrent instance, then the error will be emitted at\n      // `client.on('error')`. This prevents throwing an uncaught exception\n      // (unhandled 'error' event), but it makes it impossible to distinguish client\n      // errors versus torrent errors. Torrent errors are not fatal, and the client\n      // is still usable afterwards. Therefore, always listen for errors in both\n      // places (`client.on('error')` and `torrent.on('error')`).\n      if (this.listenerCount('error') === 0) {\n        this.client.emit('error', err)\n      } else {\n        this.emit('error', err)\n      }\n    }\n\n    this.emit('close')\n\n    this.client = null\n    this.files = []\n    this.discovery = null\n    this.store = null\n    this._rarityMap = null\n    this._peers = null\n    this._servers = null\n    this._xsRequests = null\n  }\n\n  addPeer (peer, source) {\n    if (this.destroyed) throw new Error('torrent is destroyed')\n    if (!this.infoHash) throw new Error('addPeer() must not be called before the `infoHash` event')\n\n    let host\n\n    if (typeof peer === 'string') {\n      let parts\n      try {\n        parts = addrToIPPort(peer)\n      } catch (e) {\n        this._debug('ignoring peer: invalid %s', peer)\n        this.emit('invalidPeer', peer)\n        return false\n      }\n      host = parts[0]\n    } else if (typeof peer.remoteAddress === 'string') {\n      host = peer.remoteAddress\n    }\n\n    if (this.client.blocked && host && this.client.blocked.contains(host)) {\n      this._debug('ignoring peer: blocked %s', peer)\n      if (typeof peer !== 'string') peer.destroy()\n      this.emit('blockedPeer', peer)\n      return false\n    }\n\n    // if the utp connection fails to connect, then it is replaced with a tcp connection to the same ip:port\n\n    const type = (this.client.utp && this._isIPv4(host)) ? 'utp' : 'tcp'\n    const wasAdded = !!this._addPeer(peer, type, source)\n\n    if (wasAdded) {\n      this.emit('peer', peer)\n    } else {\n      this.emit('invalidPeer', peer)\n    }\n    return wasAdded\n  }\n\n  _addPeer (peer, type, source) {\n    if (this.destroyed) {\n      if (typeof peer !== 'string') peer.destroy()\n      return null\n    }\n    if (typeof peer === 'string' && !this._validAddr(peer)) {\n      this._debug('ignoring peer: invalid %s', peer)\n      return null\n    }\n\n    const id = (peer && peer.id) || peer\n    if (this._peers[id]) {\n      this._debug('ignoring peer: duplicate (%s)', id)\n      if (typeof peer !== 'string') peer.destroy()\n      return null\n    }\n\n    if (this.paused) {\n      this._debug('ignoring peer: torrent is paused')\n      if (typeof peer !== 'string') peer.destroy()\n      return null\n    }\n\n    this._debug('add peer %s', id)\n\n    let newPeer\n    if (typeof peer === 'string') {\n      // `peer` is an addr (\"ip:port\" string)\n      newPeer = type === 'utp'\n        ? Peer.createUTPOutgoingPeer(peer, this, this.client.throttleGroups)\n        : Peer.createTCPOutgoingPeer(peer, this, this.client.throttleGroups)\n    } else {\n      // `peer` is a WebRTC connection (simple-peer)\n      newPeer = Peer.createWebRTCPeer(peer, this, this.client.throttleGroups)\n    }\n\n    this._registerPeer(newPeer)\n\n    if (typeof peer === 'string') {\n      // `peer` is an addr (\"ip:port\" string)\n      this._queue.push(newPeer)\n      this._drain()\n    }\n\n    return newPeer\n  }\n\n  addWebSeed (urlOrConn) {\n    if (this.destroyed) throw new Error('torrent is destroyed')\n\n    let id\n    let conn\n    if (typeof urlOrConn === 'string') {\n      id = urlOrConn\n\n      if (!/^https?:\\/\\/.+/.test(id)) {\n        this.emit('warning', new Error(`ignoring invalid web seed: ${id}`))\n        this.emit('invalidPeer', id)\n        return\n      }\n\n      if (this._peers[id]) {\n        this.emit('warning', new Error(`ignoring duplicate web seed: ${id}`))\n        this.emit('invalidPeer', id)\n        return\n      }\n\n      conn = new WebConn(id, this)\n    } else if (urlOrConn && typeof urlOrConn.connId === 'string') {\n      conn = urlOrConn\n      id = conn.connId\n\n      if (this._peers[id]) {\n        this.emit('warning', new Error(`ignoring duplicate web seed: ${id}`))\n        this.emit('invalidPeer', id)\n        return\n      }\n    } else {\n      this.emit('warning', new Error('addWebSeed must be passed a string or connection object with id property'))\n      return\n    }\n\n    this._debug('add web seed %s', id)\n\n    const newPeer = Peer.createWebSeedPeer(conn, id, this, this.client.throttleGroups)\n\n    this._registerPeer(newPeer)\n\n    this.emit('peer', id)\n  }\n\n  /**\n   * Called whenever a new incoming TCP peer connects to this torrent swarm. Called with a\n   * peer that has already sent a handshake.\n   */\n  _addIncomingPeer (peer) {\n    if (this.destroyed) return peer.destroy(new Error('torrent is destroyed'))\n    if (this.paused) return peer.destroy(new Error('torrent is paused'))\n\n    this._debug('add incoming peer %s', peer.id)\n\n    this._registerPeer(peer)\n  }\n\n  _registerPeer (newPeer) {\n    newPeer.on('download', downloaded => {\n      if (this.destroyed) return\n      this.received += downloaded\n      this._downloadSpeed(downloaded)\n      this.client._downloadSpeed(downloaded)\n      this.emit('download', downloaded)\n      if (this.destroyed) return\n      this.client.emit('download', downloaded)\n    })\n\n    newPeer.on('upload', uploaded => {\n      if (this.destroyed) return\n      this.uploaded += uploaded\n      this._uploadSpeed(uploaded)\n      this.client._uploadSpeed(uploaded)\n      this.emit('upload', uploaded)\n      if (this.destroyed) return\n      this.client.emit('upload', uploaded)\n    })\n\n    this._peers[newPeer.id] = newPeer\n    this._peersLength += 1\n  }\n\n  removePeer (peer) {\n    const id = peer?.id || peer\n    if (peer && !peer.id) peer = this._peers?.[id]\n\n    if (!peer) return\n    peer.destroy()\n\n    if (this.destroyed) return\n\n    this._debug('removePeer %s', id)\n\n    delete this._peers[id]\n    this._peersLength -= 1\n\n    // If torrent swarm was at capacity before, try to open a new connection now\n    this._drain()\n  }\n\n  _select (start, end, priority, notify, isStreamSelection = false) {\n    if (this.destroyed) throw new Error('torrent is destroyed')\n\n    if (start < 0 || end < start || this.pieces.length <= end) {\n      throw new Error(`invalid selection ${start} : ${end}`)\n    }\n    priority = Number(priority) || 0\n\n    this._debug('select %s-%s (priority %s)', start, end, priority)\n\n    this._selections.insert({\n      from: start,\n      to: end,\n      offset: 0,\n      priority,\n      notify,\n      isStreamSelection\n    })\n\n    this._selections.sort((a, b) => b.priority - a.priority)\n\n    this._updateSelections()\n  }\n\n  select (start, end, priority, notify) {\n    this._select(start, end, priority, notify, false)\n  }\n\n  _deselect (from, to, isStreamSelection = false) {\n    if (this.destroyed) throw new Error('torrent is destroyed')\n\n    this._debug('deselect %s-%s', from, to)\n\n    this._selections.remove({ from, to, isStreamSelection })\n\n    this._updateSelections()\n  }\n\n  deselect (start, end) {\n    this._deselect(start, end, false)\n  }\n\n  critical (start, end) {\n    if (this.destroyed) throw new Error('torrent is destroyed')\n\n    this._debug('critical %s-%s', start, end)\n\n    for (let i = start; i <= end; ++i) {\n      this._critical[i] = true\n    }\n\n    this._updateSelections()\n  }\n\n  _onWire (wire, addr) {\n    this._debug('got wire %s (%s)', wire._debugId, addr || 'Unknown')\n\n    this.wires.push(wire)\n\n    if (addr) {\n      // Sometimes RTCPeerConnection.getStats() doesn't return an ip:port for peers\n      const parts = addrToIPPort(addr)\n      wire.remoteAddress = parts[0]\n      wire.remotePort = parts[1]\n    }\n\n    // When peer sends PORT message, add that DHT node to routing table\n    if (this.client.dht && this.client.dht.listening) {\n      wire.on('port', port => {\n        if (this.destroyed || this.client.dht.destroyed) {\n          return\n        }\n        if (!wire.remoteAddress) {\n          return this._debug('ignoring PORT from peer with no address')\n        }\n        if (port === 0 || port > 65536) {\n          return this._debug('ignoring invalid PORT from peer')\n        }\n\n        this._debug('port: %s (from %s)', port, addr)\n        this.client.dht.addNode({ host: wire.remoteAddress, port })\n      })\n    }\n\n    wire.on('timeout', () => {\n      this._debug('wire timeout (%s)', addr)\n      // TODO: this might be destroying wires too eagerly\n      wire.destroy()\n    })\n\n    // Timeout for piece requests to this peer\n    if (wire.type !== 'webSeed') { // webseeds always send 'unhave' on http timeout\n      wire.setTimeout(PIECE_TIMEOUT, true)\n    }\n\n    // Send KEEP-ALIVE (every 60s) so peers will not disconnect the wire\n    wire.setKeepAlive(true)\n\n    // use ut_metadata extension\n    wire.use(utMetadata(this.metadata))\n\n    wire.ut_metadata.on('warning', err => {\n      this._debug('ut_metadata warning: %s', err.message)\n    })\n\n    if (!this.metadata) {\n      wire.ut_metadata.on('metadata', metadata => {\n        this._debug('got metadata via ut_metadata')\n        this._onMetadata(metadata)\n      })\n      wire.ut_metadata.fetch()\n    }\n\n    // use ut_pex extension if the torrent is not flagged as private\n    if (this.client.utPex && typeof utPex === 'function' && !this.private) {\n      wire.use(utPex())\n\n      wire.ut_pex.on('peer', peer => {\n        // Only add potential new peers when we're not seeding\n        if (this.done) return\n        this._debug('ut_pex: got peer: %s (from %s)', peer, addr)\n        this.addPeer(peer, Peer.SOURCE_UT_PEX)\n      })\n\n      wire.ut_pex.on('dropped', peer => {\n        // the remote peer believes a given peer has been dropped from the torrent swarm.\n        // if we're not currently connected to it, then remove it from the queue.\n        const peerObj = this._peers[peer]\n        if (peerObj && !peerObj.connected) {\n          this._debug('ut_pex: dropped peer: %s (from %s)', peer, addr)\n          this.removePeer(peer)\n        }\n      })\n\n      wire.once('close', () => {\n        // Stop sending updates to remote peer\n        wire.ut_pex.reset()\n      })\n    }\n\n    wire.use(ltDontHave())\n\n    // Hook to allow user-defined `bittorrent-protocol` extensions\n    // More info: https://github.com/webtorrent/bittorrent-protocol#extension-api\n    this.emit('wire', wire, addr)\n\n    if (this.ready) {\n      queueMicrotask(() => {\n        // This allows wire.handshake() to be called (by Peer.onHandshake) before any\n        // messages get sent on the wire\n        this._onWireWithMetadata(wire)\n      })\n    }\n  }\n\n  _onWireWithMetadata (wire) {\n    let timeoutId = null\n\n    const onChokeTimeout = () => {\n      if (this.destroyed || wire.destroyed) return\n\n      if (this._numQueued > 2 * (this._numConns - this.numPeers) &&\n        wire.amInterested) {\n        wire.destroy()\n      } else {\n        timeoutId = setTimeout(onChokeTimeout, CHOKE_TIMEOUT)\n        if (timeoutId.unref) timeoutId.unref()\n      }\n    }\n\n    let i\n    const updateSeedStatus = () => {\n      if (wire.peerPieces.buffer.length !== this.bitfield.buffer.length) return\n      for (i = 0; i < this.pieces.length; ++i) {\n        if (!wire.peerPieces.get(i)) return\n      }\n      wire.isSeeder = true\n      if (this.alwaysChokeSeeders) wire.choke() // always choke seeders\n    }\n\n    wire.on('bitfield', () => {\n      updateSeedStatus()\n      this._update()\n      this._updateWireInterest(wire)\n    })\n\n    wire.on('have', () => {\n      updateSeedStatus()\n      this._update()\n      this._updateWireInterest(wire)\n    })\n\n    wire.lt_donthave.on('donthave', () => {\n      updateSeedStatus()\n      this._update()\n      this._updateWireInterest(wire)\n    })\n\n    // fast extension (BEP6)\n    wire.on('have-all', () => {\n      wire.isSeeder = true\n      if (this.alwaysChokeSeeders) wire.choke() // always choke seeders\n      this._update()\n      this._updateWireInterest(wire)\n    })\n\n    // fast extension (BEP6)\n    wire.on('have-none', () => {\n      wire.isSeeder = false\n      this._update()\n      this._updateWireInterest(wire)\n    })\n\n    // fast extension (BEP6)\n    wire.on('allowed-fast', (index) => {\n      this._update()\n    })\n\n    wire.once('interested', () => {\n      wire.unchoke()\n    })\n\n    wire.once('close', () => {\n      clearTimeout(timeoutId)\n    })\n\n    wire.on('choke', () => {\n      clearTimeout(timeoutId)\n      timeoutId = setTimeout(onChokeTimeout, CHOKE_TIMEOUT)\n      if (timeoutId.unref) timeoutId.unref()\n    })\n\n    wire.on('unchoke', () => {\n      clearTimeout(timeoutId)\n      this._update()\n    })\n\n    wire.on('request', (index, offset, length, cb) => {\n      if (length > MAX_BLOCK_LENGTH) {\n        // Per spec, disconnect from peers that request >128KB\n        return wire.destroy()\n      }\n      if (this.pieces[index]) return\n      this.store.get(index, { offset, length }, cb)\n    })\n\n    // always send bitfield or equivalent fast extension message (required)\n    if (wire.hasFast && this._hasAllPieces()) wire.haveAll()\n    else if (wire.hasFast && this._hasNoPieces()) wire.haveNone()\n    else wire.bitfield(this.bitfield)\n\n    // initialize interest in case bitfield message was already received before above handler was registered\n    this._updateWireInterest(wire)\n\n    // Send PORT message to peers that support DHT\n    if (wire.peerExtensions.dht && this.client.dht && this.client.dht.listening) {\n      wire.port(this.client.dht.address().port)\n    }\n\n    if (wire.type !== 'webSeed') { // do not choke on webseeds\n      timeoutId = setTimeout(onChokeTimeout, CHOKE_TIMEOUT)\n      if (timeoutId.unref) timeoutId.unref()\n    }\n\n    wire.isSeeder = false\n    updateSeedStatus()\n  }\n\n  /**\n   * Called on selection changes.\n   */\n  _updateSelections () {\n    if (!this.ready || this.destroyed) return\n\n    queueMicrotask(() => {\n      this._gcSelections()\n    })\n    this._updateInterest()\n    this._update()\n  }\n\n  /**\n   * Garbage collect selections with respect to the store's current state.\n   */\n  _gcSelections () {\n    for (const s of this._selections) {\n      const oldOffset = s.offset\n\n      // check for newly downloaded pieces in selection\n      while (this.bitfield.get(s.from + s.offset) && s.from + s.offset < s.to) {\n        s.offset += 1\n      }\n\n      if (oldOffset !== s.offset) s.notify?.()\n      if (s.to !== s.from + s.offset) continue\n      if (!this.bitfield.get(s.from + s.offset)) continue\n\n      s.remove() // remove fully downloaded selection\n      s.notify?.()\n      this._updateInterest()\n    }\n\n    if (!this._selections.length) this.emit('idle')\n  }\n\n  /**\n   * Update interested status for all peers.\n   */\n  _updateInterest () {\n    const prev = this._amInterested\n    this._amInterested = !!this._selections.length\n\n    this.wires.forEach(wire => this._updateWireInterest(wire))\n\n    if (prev === this._amInterested) return\n    if (this._amInterested) this.emit('interested')\n    else this.emit('uninterested')\n  }\n\n  _updateWireInterest (wire) {\n    let interested = false\n    for (let index = 0; index < this.pieces.length; ++index) {\n      if (this.pieces[index] && wire.peerPieces.get(index)) {\n        interested = true\n        break\n      }\n    }\n\n    if (interested) wire.interested()\n    else wire.uninterested()\n  }\n\n  /**\n   * Heartbeat to update all peers and their requests.\n   */\n  _update () {\n    if (IDLE_CALLBACK) {\n      IDLE_CALLBACK(() => this._updateWireWrapper(), { timeout: 250 })\n    } else {\n      this._updateWireWrapper()\n    }\n  }\n\n  _updateWireWrapper () {\n    if (this.destroyed) return\n    // update wires in random order for better request distribution\n    const ite = randomIterate(this.wires)\n    let wire\n    while ((wire = ite())) {\n      this._updateWire(wire)\n    }\n  }\n\n  /**\n   * Attempts to update a peer's requests\n   */\n  _updateWire (wire) {\n    if (wire.destroyed) return false\n    // to allow function hoisting\n    const self = this\n\n    const minOutstandingRequests = getBlockPipelineLength(wire, PIPELINE_MIN_DURATION)\n    if (wire.requests.length >= minOutstandingRequests) return\n    const maxOutstandingRequests = getBlockPipelineLength(wire, PIPELINE_MAX_DURATION)\n\n    if (wire.peerChoking) {\n      if (wire.hasFast && wire.peerAllowedFastSet.length > 0 &&\n        !this._hasMorePieces(wire.peerAllowedFastSet.length - 1)) {\n        requestAllowedFastSet()\n      }\n      return\n    }\n\n    if (!wire.downloaded) return validateWire()\n\n    trySelectWire(false) || trySelectWire(true)\n\n    function requestAllowedFastSet () {\n      if (wire.requests.length >= maxOutstandingRequests) return false\n\n      for (const piece of wire.peerAllowedFastSet) {\n        if (wire.peerPieces.get(piece) && !self.bitfield.get(piece)) {\n          while (self._request(wire, piece, false) &&\n            wire.requests.length < maxOutstandingRequests) {\n            // body intentionally empty\n            // request all non-reserved blocks in this piece\n          }\n        }\n\n        if (wire.requests.length < maxOutstandingRequests) continue\n\n        return true\n      }\n\n      return false\n    }\n\n    function genPieceFilterFunc (start, end, tried, rank) {\n      return i => i >= start && i <= end && !(i in tried) && wire.peerPieces.get(i) && (!rank || rank(i))\n    }\n\n    // TODO: Do we need both validateWire and trySelectWire?\n    function validateWire () {\n      if (wire.requests.length) return\n\n      let i = self._selections.length\n      while (i--) {\n        const next = self._selections.get(i)\n        let piece\n        if (self.strategy === 'rarest') {\n          const start = next.from + next.offset\n          const end = next.to\n          const len = end - start + 1\n          const tried = {}\n          let tries = 0\n          const filter = genPieceFilterFunc(start, end, tried)\n\n          while (tries < len) {\n            piece = self._rarityMap.getRarestPiece(filter)\n            if (piece < 0) break\n            if (self._request(wire, piece, false)) return\n            tried[piece] = true\n            tries += 1\n          }\n        } else {\n          for (piece = next.to; piece >= next.from + next.offset; --piece) {\n            if (!wire.peerPieces.get(piece)) continue\n            if (self._request(wire, piece, false)) return\n          }\n        }\n      }\n\n      // TODO: wire failed to validate as useful; should we close it?\n      // probably not, since 'have' and 'bitfield' messages might be coming\n    }\n\n    function speedRanker () {\n      const speed = wire.downloadSpeed() || 1\n      if (speed > SPEED_THRESHOLD) return () => true\n\n      const secs = Math.max(1, wire.requests.length) * Piece.BLOCK_LENGTH / speed\n      let tries = 10\n      let ptr = 0\n\n      return index => {\n        if (!tries || self.bitfield.get(index)) return true\n\n        let missing = self.pieces[index].missing\n\n        for (; ptr < self.wires.length; ptr++) {\n          const otherWire = self.wires[ptr]\n          const otherSpeed = otherWire.downloadSpeed()\n\n          if (otherSpeed < SPEED_THRESHOLD) continue\n          if (otherSpeed <= speed) continue\n          if (!otherWire.peerPieces.get(index)) continue\n          if ((missing -= otherSpeed * secs) > 0) continue\n\n          tries--\n          return false\n        }\n\n        return true\n      }\n    }\n\n    function shufflePriority (i) {\n      let last = i\n      for (let j = i; j < self._selections.length && self._selections.get(j).priority; j++) {\n        last = j\n      }\n      self._selections.swap(i, last)\n    }\n\n    function trySelectWire (hotswap) {\n      if (wire.requests.length >= maxOutstandingRequests) return true\n      const rank = speedRanker()\n\n      for (let i = 0; i < self._selections.length; i++) {\n        const next = self._selections.get(i)\n\n        let piece\n        if (self.strategy === 'rarest') {\n          const start = next.from + next.offset\n          const end = next.to\n          const len = end - start + 1\n          const tried = {}\n          let tries = 0\n          const filter = genPieceFilterFunc(start, end, tried, rank)\n\n          while (tries < len) {\n            piece = self._rarityMap.getRarestPiece(filter)\n            if (piece < 0) break\n\n            while (self._request(wire, piece, self._critical[piece] || hotswap) &&\n              wire.requests.length < maxOutstandingRequests) {\n              // body intentionally empty\n              // request all non-reserved blocks in this piece\n            }\n\n            if (wire.requests.length < maxOutstandingRequests) {\n              tried[piece] = true\n              tries++\n              continue\n            }\n\n            if (next.priority) shufflePriority(i)\n            return true\n          }\n        } else {\n          for (piece = next.from + next.offset; piece <= next.to; piece++) {\n            if (!wire.peerPieces.get(piece) || !rank(piece)) continue\n\n            while (self._request(wire, piece, self._critical[piece] || hotswap) &&\n              wire.requests.length < maxOutstandingRequests) {\n              // body intentionally empty\n              // request all non-reserved blocks in piece\n            }\n\n            if (wire.requests.length < maxOutstandingRequests) continue\n\n            if (next.priority) shufflePriority(i)\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n\n  /**\n   * Called periodically to update the choked status of all peers, handling optimistic\n   * unchoking as described in BEP3.\n   */\n  _rechoke () {\n    if (!this.ready) return\n\n    // wires in increasing order of quality (pop() gives next best peer)\n    const wireStack =\n      this.wires\n        .map(wire => ({ wire, random: Math.random() })) // insert a random seed for randomizing the sort\n        .sort((objA, objB) => {\n          const wireA = objA.wire\n          const wireB = objB.wire\n\n          // prefer peers that send us data faster\n          if (wireA.downloadSpeed() !== wireB.downloadSpeed()) {\n            return wireA.downloadSpeed() - wireB.downloadSpeed()\n          }\n\n          // then prefer peers that can download data from us faster\n          if (wireA.uploadSpeed() !== wireB.uploadSpeed()) {\n            return wireA.uploadSpeed() - wireB.uploadSpeed()\n          }\n\n          // then prefer already unchoked peers (to minimize fibrillation)\n          if (wireA.amChoking !== wireB.amChoking) {\n            return wireA.amChoking ? -1 : 1 // choking < unchoked\n          }\n\n          // otherwise random order\n          return objA.random - objB.random\n        })\n        .map(obj => obj.wire) // return array of wires (remove random seed)\n\n    if (this._rechokeOptimisticTime <= 0) {\n      // clear old optimistic peer, so it can be rechoked normally and then replaced\n      this._rechokeOptimisticWire = null\n    } else {\n      this._rechokeOptimisticTime -= 1\n    }\n\n    let numInterestedUnchoked = 0\n    // leave one rechoke slot open for optimistic unchoking\n    while (wireStack.length > 0 && numInterestedUnchoked < this._rechokeNumSlots - 1) {\n      const wire = wireStack.pop() // next best quality peer\n\n      if (wire.isSeeder || wire === this._rechokeOptimisticWire) {\n        continue\n      }\n\n      wire.unchoke()\n\n      // only stop unchoking once we fill the slots with interested peers that will actually download\n      if (wire.peerInterested) {\n        numInterestedUnchoked++\n      }\n    }\n\n    // fill optimistic unchoke slot if empty\n    if (this._rechokeOptimisticWire === null && this._rechokeNumSlots > 0) {\n      // don't optimistically unchoke uninterested peers\n      const remaining = wireStack.filter(wire => wire.peerInterested)\n\n      if (remaining.length > 0) {\n        // select random remaining (not yet unchoked) peer\n        const newOptimisticPeer = remaining[randomInt(remaining.length)]\n\n        newOptimisticPeer.unchoke()\n\n        this._rechokeOptimisticWire = newOptimisticPeer\n\n        this._rechokeOptimisticTime = RECHOKE_OPTIMISTIC_DURATION\n      }\n    }\n\n    // choke the rest\n    wireStack\n      .filter(wire => wire !== this._rechokeOptimisticWire) // except the optimistically unchoked peer\n      .forEach(wire => wire.choke())\n  }\n\n  /**\n   * Attempts to cancel a slow block request from another wire such that the\n   * given wire may effectively swap out the request for one of its own.\n   */\n  _hotswap (wire, index) {\n    const speed = wire.downloadSpeed()\n    if (speed < Piece.BLOCK_LENGTH) return false\n    if (!this._reservations[index]) return false\n\n    const r = this._reservations[index]\n    if (!r) {\n      return false\n    }\n\n    let minSpeed = Infinity\n    let minWire\n\n    let i\n    for (i = 0; i < r.length; i++) {\n      const otherWire = r[i]\n      if (!otherWire || otherWire === wire) continue\n\n      const otherSpeed = otherWire.downloadSpeed()\n      if (otherSpeed >= SPEED_THRESHOLD) continue\n      if (2 * otherSpeed > speed || otherSpeed > minSpeed) continue\n\n      minWire = otherWire\n      minSpeed = otherSpeed\n    }\n\n    if (!minWire) return false\n\n    for (i = 0; i < r.length; i++) {\n      if (r[i] === minWire) r[i] = null\n    }\n\n    for (i = 0; i < minWire.requests.length; i++) {\n      const req = minWire.requests[i]\n      if (req.piece !== index) continue\n\n      this.pieces[index].cancel((req.offset / Piece.BLOCK_LENGTH) | 0)\n    }\n\n    this.emit('hotswap', minWire, wire, index)\n    return true\n  }\n\n  /**\n   * Attempts to request a block from the given wire.\n   */\n  _request (wire, index, hotswap) {\n    const self = this\n    const numRequests = wire.requests.length\n    const isWebSeed = wire.type === 'webSeed'\n\n    if (self.bitfield.get(index)) return false\n\n    const maxOutstandingRequests = isWebSeed\n      ? Math.min(\n        getPiecePipelineLength(wire, PIPELINE_MAX_DURATION, self.pieceLength),\n        self.maxWebConns\n      )\n      : getBlockPipelineLength(wire, PIPELINE_MAX_DURATION)\n\n    if (numRequests >= maxOutstandingRequests) return false\n    // var endGame = (wire.requests.length === 0 && self.store.numMissing < 30)\n\n    const piece = self.pieces[index]\n    let reservation = isWebSeed ? piece.reserveRemaining() : piece.reserve()\n\n    if (reservation === -1 && hotswap && self._hotswap(wire, index)) {\n      reservation = isWebSeed ? piece.reserveRemaining() : piece.reserve()\n    }\n    if (reservation === -1) return false\n\n    let r = self._reservations[index]\n    if (!r) r = self._reservations[index] = []\n    let i = r.indexOf(null)\n    if (i === -1) i = r.length\n    r[i] = wire\n\n    const chunkOffset = piece.chunkOffset(reservation)\n    const chunkLength = isWebSeed ? piece.chunkLengthRemaining(reservation) : piece.chunkLength(reservation)\n\n    wire.request(index, chunkOffset, chunkLength, async function onChunk (err, chunk) {\n      if (self.destroyed) return\n\n      // TODO: what is this for?\n      if (!self.ready) return self.once('ready', () => { onChunk(err, chunk) })\n\n      if (r[i] === wire) r[i] = null\n\n      if (piece !== self.pieces[index]) return onUpdateTick()\n\n      if (err) {\n        self._debug(\n          'error getting piece %s (offset: %s length: %s) from %s: %s',\n          index, chunkOffset, chunkLength, `${wire.remoteAddress}:${wire.remotePort}`,\n          err.message\n        )\n        isWebSeed ? piece.cancelRemaining(reservation) : piece.cancel(reservation)\n        onUpdateTick()\n        return\n      }\n\n      self._debug(\n        'got piece %s (offset: %s length: %s) from %s',\n        index, chunkOffset, chunkLength, `${wire.remoteAddress}:${wire.remotePort}`\n      )\n\n      if (!piece.set(reservation, chunk, wire)) return onUpdateTick()\n\n      const buf = piece.flush()\n\n      // TODO: might need to set self.pieces[index] = null here since sha1 is async\n\n      const hex = await hash(buf, 'hex')\n      if (self.destroyed) return\n\n      if (hex === self._hashes[index]) {\n        self._debug('piece verified %s', index)\n\n        self.store.put(index, buf, err => {\n          if (err) {\n            self._destroy(err)\n            return\n          } else {\n            self.pieces[index] = null\n            self._markVerified(index)\n            self.wires.forEach(wire => {\n              wire.have(index)\n            })\n          }\n          // We also check `self.destroyed` since `torrent.destroy()` could have been\n          // called in the `torrent.on('done')` handler, triggered by `_checkDone()`.\n          if (self._checkDone() && !self.destroyed) self.discovery.complete()\n          onUpdateTick()\n        })\n      } else {\n        self.pieces[index] = new Piece(piece.length)\n        self.emit('warning', new Error(`Piece ${index} failed verification`))\n        onUpdateTick()\n      }\n    })\n\n    function onUpdateTick () {\n      queueMicrotask(() => { self._update() })\n    }\n\n    return true\n  }\n\n  _checkDone () {\n    if (this.destroyed) return\n\n    // are any new files done?\n    this.files.forEach(file => {\n      if (file.done) return\n      for (let i = file._startPiece; i <= file._endPiece; ++i) {\n        if (!this.bitfield.get(i)) return\n      }\n      file.done = true\n      file.emit('done')\n      this._debug(`file done: ${file.name}`)\n    })\n\n    // is the torrent done? (if all current selections are satisfied, or there are\n    // no selections, then torrent is done)\n    let done = true\n\n    for (const selection of this._selections) {\n      for (let piece = selection.from; piece <= selection.to; piece++) {\n        if (!this.bitfield.get(piece)) {\n          done = false\n          break\n        }\n      }\n      if (!done) break\n    }\n\n    if (!this.done && done) {\n      this.done = true\n      this._debug(`torrent done: ${this.infoHash}`)\n      this.emit('done')\n    } else {\n      this.done = false\n    }\n    this._gcSelections()\n\n    return done\n  }\n\n  async load (streams, cb) {\n    if (this.destroyed) throw new Error('torrent is destroyed')\n    if (!this.ready) return this.once('ready', () => { this.load(streams, cb) })\n\n    if (!Array.isArray(streams)) streams = [streams]\n    if (!cb) cb = noop\n\n    try {\n      await chunkStoreWrite(this.store, joinIterator(streams), { chunkLength: this.pieceLength })\n      this._markAllVerified()\n      this._checkDone()\n      cb(null)\n    } catch (err) {\n      cb(err)\n      return err\n    }\n  }\n\n  pause () {\n    if (this.destroyed) return\n    this._debug('pause')\n    this.paused = true\n  }\n\n  resume () {\n    if (this.destroyed) return\n    this._debug('resume')\n    this.paused = false\n    this._drain()\n  }\n\n  _debug () {\n    const args = [].slice.call(arguments)\n    args[0] = `[${this.client ? this.client._debugId : 'No Client'}] [${this._debugId}] ${args[0]}`\n    debug(...args)\n  }\n\n  /**\n   * Pop a peer off the FIFO queue and connect to it. When _drain() gets called,\n   * the queue will usually have only one peer in it, except when there are too\n   * many peers (over `this.maxConns`) in which case they will just sit in the\n   * queue until another connection closes.\n   */\n  _drain () {\n    this._debug('_drain numConns %s maxConns %s', this._numConns, this.client.maxConns)\n    if (typeof net.connect !== 'function' || this.destroyed || this.paused ||\n        this._numConns >= this.client.maxConns) {\n      return\n    }\n    this._debug('drain (%s queued, %s/%s peers)', this._numQueued, this.numPeers, this.client.maxConns)\n\n    const peer = this._queue.shift()\n    if (!peer) return // queue could be empty\n\n    this._debug('%s connect attempt to %s', peer.type, peer.addr)\n\n    const parts = addrToIPPort(peer.addr)\n    const opts = {\n      host: parts[0],\n      port: parts[1]\n    }\n\n    if (this.client.utp && peer.type === Peer.TYPE_UTP_OUTGOING) {\n      peer.conn = utp.connect(opts.port, opts.host)\n    } else {\n      peer.conn = net.connect(opts)\n    }\n\n    const conn = peer.conn\n\n    conn.once('connect', () => { if (!this.destroyed) peer.onConnect() })\n    conn.once('error', err => { peer.destroy(err) })\n    peer.startConnectTimeout()\n\n    // When connection closes, attempt reconnect after timeout (with exponential backoff)\n    conn.on('close', () => {\n      if (this.destroyed) return\n\n      if (peer.retries >= RECONNECT_WAIT.length) {\n        if (this.client.utp) {\n          const newPeer = this._addPeer(peer.addr, 'tcp', peer.source)\n          if (newPeer) newPeer.retries = 0\n        } else {\n          this._debug(\n            'conn %s closed: will not re-add (max %s attempts)',\n            peer.addr, RECONNECT_WAIT.length\n          )\n        }\n        return\n      }\n\n      const ms = RECONNECT_WAIT[peer.retries]\n      this._debug(\n        'conn %s closed: will re-add to queue in %sms (attempt %s)',\n        peer.addr, ms, peer.retries + 1\n      )\n\n      const reconnectTimeout = setTimeout(() => {\n        if (this.destroyed) return\n        const host = addrToIPPort(peer.addr)[0]\n        const type = (this.client.utp && this._isIPv4(host)) ? 'utp' : 'tcp'\n        const newPeer = this._addPeer(peer.addr, type, peer.source)\n        if (newPeer) newPeer.retries = peer.retries + 1\n      }, ms)\n      if (reconnectTimeout.unref) reconnectTimeout.unref()\n    })\n  }\n\n  /**\n   * Returns `true` if string is valid IPv4/6 address.\n   * @param {string} addr\n   * @return {boolean}\n   */\n  _validAddr (addr) {\n    let parts\n    try {\n      parts = addrToIPPort(addr)\n    } catch (e) {\n      return false\n    }\n    const host = parts[0]\n    const port = parts[1]\n    return port > 0 && port < 65535 &&\n      !(host === '127.0.0.1' && port === this.client.torrentPort)\n  }\n\n  /**\n   * Return `true` if string is a valid IPv4 address.\n   * @param {string} addr\n   * @return {boolean}\n   */\n  _isIPv4 (addr) {\n    const IPv4Pattern = /^((?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])[.]){3}(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$/\n    return IPv4Pattern.test(addr)\n  }\n}\n\nfunction getBlockPipelineLength (wire, duration) {\n  let length = 2 + Math.ceil(duration * wire.downloadSpeed() / Piece.BLOCK_LENGTH)\n\n  // Honor reqq (maximum number of outstanding request messages) if specified by peer\n  if (wire.peerExtendedHandshake) {\n    const reqq = wire.peerExtendedHandshake.reqq\n    if (typeof reqq === 'number' && reqq > 0) {\n      length = Math.min(length, reqq)\n    }\n  }\n\n  return length\n}\n\nfunction getPiecePipelineLength (wire, duration, pieceLength) {\n  return 1 + Math.ceil(duration * wire.downloadSpeed() / pieceLength)\n}\n\n/**\n * Returns a random integer in [0,high)\n */\nfunction randomInt (high) {\n  return Math.random() * high | 0\n}\n\nfunction noop () {}\n", "const ADDR_RE = /^\\[?([^\\]]+)]?:(\\d+)$/ // ipv4/ipv6/hostname + port\n\nlet cache = new Map()\n\n// reset cache when it gets to 100,000 elements (~ 600KB of ipv4 addresses)\n// so it will not grow to consume all memory in long-running processes\nexport default function addrToIPPort (addr) {\n  if (cache.size === 100000) cache.clear()\n  if (!cache.has(addr)) {\n    const m = ADDR_RE.exec(addr)\n    if (!m) throw new Error(`invalid addr: ${addr}`)\n    cache.set(addr, [ m[1], Number(m[2]) ])\n  }\n  return cache.get(addr)\n}\n", "import blockIterator from 'block-iterator'\r\n\r\nasync function * chunkStoreRead (store, opts = {}) {\r\n  if (store?.[Symbol.asyncIterator]) {\r\n    yield * store[Symbol.asyncIterator](opts.offset)\r\n    return\r\n  }\r\n  if (!store?.get) throw new Error('First argument must be an abstract-chunk-store compliant store')\r\n\r\n  const chunkLength = opts.chunkLength || store.chunkLength\r\n  if (!chunkLength) throw new Error('missing required `chunkLength` property')\r\n\r\n  let length = opts.length || store.length\r\n  if (!Number.isFinite(length)) throw new Error('missing required `length` property')\r\n\r\n  const offset = opts.offset || 0\r\n\r\n  const get = (i, length, offset) => new Promise((resolve, reject) => {\r\n    store.get(i, { offset, length }, (err, chunk) => {\r\n      if (err) reject(err)\r\n      resolve(chunk)\r\n    })\r\n  })\r\n\r\n  let index = Math.floor(offset / chunkLength)\r\n  const chunkOffset = offset % chunkLength\r\n  if (offset) {\r\n    const target = Math.min(length, chunkLength - chunkOffset)\r\n    length -= target\r\n    yield get(index++, target, chunkOffset)\r\n  }\r\n\r\n  for (let remainingLength = length; remainingLength > 0; ++index, remainingLength -= chunkLength) {\r\n    yield get(index, Math.min(remainingLength, chunkLength))\r\n  }\r\n}\r\n\r\nasync function chunkStoreWrite (store, stream, opts = {}) {\r\n  if (!store?.put) throw new Error('First argument must be an abstract-chunk-store compliant store')\r\n\r\n  const chunkLength = opts.chunkLength || store.chunkLength\r\n  if (!chunkLength) throw new Error('missing required `chunkLength` property')\r\n\r\n  const storeMaxOutstandingPuts = opts.storeMaxOutstandingPuts || 16\r\n  let outstandingPuts = 0\r\n\r\n  let index = 0\r\n\r\n  let cb = () => {}\r\n  let ended = false\r\n\r\n  for await (const chunk of blockIterator(stream, chunkLength, { zeroPadding: opts.zeroPadding || false })) {\r\n    await new Promise(resolve => {\r\n      if (outstandingPuts++ <= storeMaxOutstandingPuts) resolve()\r\n      store.put(index++, chunk, err => {\r\n        if (err) throw err\r\n        --outstandingPuts\r\n        resolve()\r\n        if (ended && outstandingPuts === 0) cb()\r\n      })\r\n    })\r\n  }\r\n  if (outstandingPuts === 0) return\r\n  ended = new Promise(resolve => { cb = resolve })\r\n  await ended\r\n}\r\n\r\nexport { chunkStoreRead, chunkStoreWrite }\r\nexport default { chunkStoreRead, chunkStoreWrite }\r\n", "/*! torrent-discovery. MIT License. WebTorrent LLC <https://webtorrent.io/opensource> */\nimport Debug from 'debug'\nimport { Client as DHT } from 'bittorrent-dht' // empty object in browser\nimport { EventEmitter } from 'events'\nimport parallel from 'run-parallel'\nimport { Client as Tracker } from 'bittorrent-tracker'\nimport LSD from 'bittorrent-lsd'\n\nconst debug = Debug('torrent-discovery')\n\nclass Discovery extends EventEmitter {\n  constructor (opts) {\n    super()\n\n    if (!opts.peerId) throw new Error('Option `peerId` is required')\n    if (!opts.infoHash) throw new Error('Option `infoHash` is required')\n    if (!process.browser && !opts.port) throw new Error('Option `port` is required')\n\n    this.peerId = typeof opts.peerId === 'string'\n      ? opts.peerId\n      : opts.peerId.toString('hex')\n    this.infoHash = typeof opts.infoHash === 'string'\n      ? opts.infoHash.toLowerCase()\n      : opts.infoHash.toString('hex')\n    this._port = opts.port // torrent port\n    this._userAgent = opts.userAgent // User-Agent header for http requests\n\n    this.destroyed = false\n\n    this._announce = opts.announce || []\n    this._intervalMs = opts.intervalMs || (15 * 60 * 1000)\n    this._trackerOpts = null\n    this._dhtAnnouncing = false\n    this._dhtTimeout = false\n    this._internalDHT = false // is the DHT created internally?\n\n    this._onWarning = err => {\n      this.emit('warning', err)\n    }\n    this._onError = err => {\n      this.emit('error', err)\n    }\n    this._onDHTPeer = (peer, infoHash) => {\n      if (infoHash.toString('hex') !== this.infoHash) return\n      this.emit('peer', `${peer.host}:${peer.port}`, 'dht')\n    }\n    this._onTrackerPeer = peer => {\n      this.emit('peer', peer, 'tracker')\n    }\n    this._onTrackerAnnounce = () => {\n      this.emit('trackerAnnounce')\n    }\n    this._onLSDPeer = (peer, infoHash) => {\n      this.emit('peer', peer, 'lsd')\n    }\n\n    const createDHT = (port, opts) => {\n      const dht = new DHT(opts)\n      dht.on('warning', this._onWarning)\n      dht.on('error', this._onError)\n      dht.listen(port)\n      this._internalDHT = true\n      return dht\n    }\n\n    if (opts.tracker === false) {\n      this.tracker = null\n    } else if (opts.tracker && typeof opts.tracker === 'object') {\n      this._trackerOpts = Object.assign({}, opts.tracker)\n      this.tracker = this._createTracker()\n    } else {\n      this.tracker = this._createTracker()\n    }\n\n    if (opts.dht === false || typeof DHT !== 'function') {\n      this.dht = null\n    } else if (opts.dht && typeof opts.dht.addNode === 'function') {\n      this.dht = opts.dht\n    } else if (opts.dht && typeof opts.dht === 'object') {\n      this.dht = createDHT(opts.dhtPort, opts.dht)\n    } else {\n      this.dht = createDHT(opts.dhtPort)\n    }\n\n    if (this.dht) {\n      this.dht.on('peer', this._onDHTPeer)\n      this._dhtAnnounce()\n    }\n\n    if (opts.lsd === false || typeof LSD !== 'function') {\n      this.lsd = null\n    } else {\n      this.lsd = this._createLSD()\n    }\n  }\n\n  updatePort (port) {\n    if (port === this._port) return\n    this._port = port\n\n    if (this.dht) this._dhtAnnounce()\n\n    if (this.tracker) {\n      this.tracker.stop()\n      this.tracker.destroy(() => {\n        this.tracker = this._createTracker()\n      })\n    }\n  }\n\n  complete (opts) {\n    if (this.tracker) {\n      this.tracker.complete(opts)\n    }\n  }\n\n  destroy (cb) {\n    if (this.destroyed) return\n    this.destroyed = true\n\n    clearTimeout(this._dhtTimeout)\n\n    const tasks = []\n\n    if (this.tracker) {\n      this.tracker.stop()\n      this.tracker.removeListener('warning', this._onWarning)\n      this.tracker.removeListener('error', this._onError)\n      this.tracker.removeListener('peer', this._onTrackerPeer)\n      this.tracker.removeListener('update', this._onTrackerAnnounce)\n      tasks.push(cb => {\n        this.tracker.destroy(cb)\n      })\n    }\n\n    if (this.dht) {\n      this.dht.removeListener('peer', this._onDHTPeer)\n    }\n\n    if (this._internalDHT) {\n      this.dht.removeListener('warning', this._onWarning)\n      this.dht.removeListener('error', this._onError)\n      tasks.push(cb => {\n        this.dht.destroy(cb)\n      })\n    }\n\n    if (this.lsd) {\n      this.lsd.removeListener('warning', this._onWarning)\n      this.lsd.removeListener('error', this._onError)\n      this.lsd.removeListener('peer', this._onLSDPeer)\n      tasks.push(cb => {\n        this.lsd.destroy(cb)\n      })\n    }\n\n    parallel(tasks, cb)\n\n    // cleanup\n    this.dht = null\n    this.tracker = null\n    this.lsd = null\n    this._announce = null\n  }\n\n  _createTracker () {\n    const opts = Object.assign({}, this._trackerOpts, {\n      infoHash: this.infoHash,\n      announce: this._announce,\n      peerId: this.peerId,\n      port: this._port,\n      userAgent: this._userAgent\n    })\n\n    const tracker = new Tracker(opts)\n    tracker.on('warning', this._onWarning)\n    tracker.on('error', this._onError)\n    tracker.on('peer', this._onTrackerPeer)\n    tracker.on('update', this._onTrackerAnnounce)\n    tracker.setInterval(this._intervalMs)\n    tracker.start()\n    return tracker\n  }\n\n  _dhtAnnounce () {\n    if (this._dhtAnnouncing) return\n    debug('dht announce')\n\n    this._dhtAnnouncing = true\n    clearTimeout(this._dhtTimeout)\n\n    this.dht.announce(this.infoHash, this._port, err => {\n      this._dhtAnnouncing = false\n      debug('dht announce complete')\n\n      if (err) this.emit('warning', err)\n      this.emit('dhtAnnounce')\n\n      if (!this.destroyed) {\n        this._dhtTimeout = setTimeout(() => {\n          this._dhtAnnounce()\n        }, this._intervalMs + Math.floor(Math.random() * this._intervalMs / 5))\n        if (this._dhtTimeout.unref) this._dhtTimeout.unref()\n      }\n    })\n  }\n\n  _createLSD () {\n    const opts = Object.assign({}, {\n      infoHash: this.infoHash,\n      peerId: this.peerId,\n      port: this._port\n    })\n\n    const lsd = new LSD(opts)\n    lsd.on('warning', this._onWarning)\n    lsd.on('error', this._onError)\n    lsd.on('peer', this._onLSDPeer)\n    lsd.start()\n    return lsd\n  }\n}\n\nexport default Discovery\n", "import { EventEmitter } from 'events'\nimport bencode from 'bencode'\nimport Debug from 'debug'\nimport KBucket from 'k-bucket'\nimport krpc from 'k-rpc'\nimport low from 'last-one-wins'\nimport LRU from 'lru'\nimport randombytes from 'randombytes'\nimport records from 'record-cache'\nimport crypto from 'crypto'\n\nconst debug = Debug('bittorrent-dht')\n\nconst ROTATE_INTERVAL = 5 * 60 * 1000 // rotate secrets every 5 minutes\nconst BUCKET_OUTDATED_TIMESPAN = 15 * 60 * 1000 // check nodes in bucket in 15 minutes old buckets\n\nclass DHT extends EventEmitter {\n  constructor (opts = {}) {\n    super()\n\n    this._tables = new LRU({ maxAge: ROTATE_INTERVAL, max: opts.maxTables || 1000 })\n    this._values = new LRU(opts.maxValues || 1000)\n    this._peers = records({\n      maxAge: opts.maxAge || 0,\n      maxSize: opts.maxPeers || 10000\n    })\n\n    this._secrets = null\n    this._hash = opts.hash || sha1\n    this._hashLength = this._hash(Buffer.from('')).length\n    this._rpc = opts.krpc || krpc(Object.assign({ idLength: this._hashLength }, opts))\n    this._rpc.on('query', onquery)\n    this._rpc.on('node', onnode)\n    this._rpc.on('warning', onwarning)\n    this._rpc.on('error', onerror)\n    this._rpc.on('listening', onlistening)\n    this._rotateSecrets()\n    this._verify = opts.verify || null\n    this._host = opts.host || null\n    this._interval = setInterval(rotateSecrets, ROTATE_INTERVAL)\n    this._runningBucketCheck = false\n    this._bucketCheckTimeout = null\n    this._bucketOutdatedTimeSpan = opts.timeBucketOutdated || BUCKET_OUTDATED_TIMESPAN\n\n    this.listening = false\n    this.destroyed = false\n    this.nodeId = this._rpc.id\n    this.nodes = this._rpc.nodes\n\n    // ensure only *one* ping it running at the time to avoid infinite async\n    // ping recursion, and make the latest one is always ran, but inbetween ones\n    // are disregarded\n    const onping = low(ping)\n\n    this._rpc.on('ping', (older, swap) => {\n      onping({ older, swap })\n    })\n\n    process.nextTick(bootstrap)\n\n    this._debug('new DHT %s', this.nodeId)\n\n    const self = this\n\n    function ping (opts, cb) {\n      const older = opts.older\n      const swap = opts.swap\n\n      self._debug('received ping', older)\n      self._checkNodes(older, false, (_, deadNode) => {\n        if (deadNode) {\n          self._debug('swaping dead node with newer', deadNode)\n          swap(deadNode)\n          return cb()\n        }\n\n        self._debug('no node added, all other nodes ok')\n        cb()\n      })\n    }\n\n    function onlistening () {\n      self.listening = true\n      self._debug('listening %d', self.address().port)\n      self.updateBucketTimestamp()\n      self._setBucketCheckInterval()\n      self.emit('listening')\n    }\n\n    function onquery (query, peer) {\n      self._onquery(query, peer)\n    }\n\n    function rotateSecrets () {\n      self._rotateSecrets()\n    }\n\n    function bootstrap () {\n      if (!self.destroyed) self._bootstrap(opts.bootstrap !== false)\n    }\n\n    function onwarning (err) {\n      self.emit('warning', err)\n    }\n\n    function onerror (err) {\n      self.emit('error', err)\n    }\n\n    function onnode (node) {\n      self.emit('node', node)\n    }\n  }\n\n  _setBucketCheckInterval () {\n    const self = this\n    const interval = 1 * 60 * 1000 // check age of bucket every minute\n\n    this._runningBucketCheck = true\n    queueNext()\n\n    function checkBucket () {\n      const diff = Date.now() - self._rpc.nodes.metadata.lastChange\n\n      if (diff < self._bucketOutdatedTimeSpan) return queueNext()\n\n      self._pingAll(() => {\n        if (self.destroyed) return\n\n        if (self.nodes.toArray().length < 1) {\n          // node is currently isolated,\n          // retry with initial bootstrap nodes\n          self._bootstrap(true)\n        }\n\n        queueNext()\n      })\n    }\n\n    function queueNext () {\n      if (!self._runningBucketCheck || self.destroyed) return\n      const nextTimeout = Math.floor(Math.random() * interval + interval / 2)\n      self._bucketCheckTimeout = setTimeout(checkBucket, nextTimeout)\n    }\n  }\n\n  _pingAll (cb) {\n    this._checkAndRemoveNodes(this.nodes.toArray(), cb)\n  }\n\n  removeBucketCheckInterval () {\n    this._runningBucketCheck = false\n    clearTimeout(this._bucketCheckTimeout)\n  }\n\n  updateBucketTimestamp () {\n    this._rpc.nodes.metadata.lastChange = Date.now()\n  }\n\n  _checkAndRemoveNodes (nodes, cb) {\n    const self = this\n\n    this._checkNodes(nodes, true, (_, node) => {\n      if (node) self.removeNode(node.id)\n      cb(null, node)\n    })\n  }\n\n  _checkNodes (nodes, force, cb) {\n    const self = this\n\n    test(nodes)\n\n    function test (acc) {\n      let current = null\n\n      while (acc.length) {\n        current = acc.pop()\n        if (!current.id || force) break\n        if (Date.now() - (current.seen || 0) > 10000) break // not pinged within 10s\n        current = null\n      }\n\n      if (!current) return cb(null)\n\n      self._sendPing(current, err => {\n        if (!err) {\n          self.updateBucketTimestamp()\n          return test(acc)\n        }\n        cb(null, current)\n      })\n    }\n  }\n\n  addNode (node) {\n    const self = this\n    if (node.id) {\n      node.id = toBuffer(node.id)\n      const old = !!this._rpc.nodes.get(node.id)\n      this._rpc.nodes.add(node)\n      if (!old) {\n        this.emit('node', node)\n        this.updateBucketTimestamp()\n      }\n      return\n    }\n    this._sendPing(node, (_, node) => {\n      if (node) self.addNode(node)\n    })\n  }\n\n  removeNode (id) {\n    this._rpc.nodes.remove(toBuffer(id))\n  }\n\n  _sendPing (node, cb) {\n    const self = this\n    const expectedId = node.id\n    this._rpc.query(node, { q: 'ping' }, (err, pong, node) => {\n      if (err) return cb(err)\n      if (!pong.r || !pong.r.id || !Buffer.isBuffer(pong.r.id) || pong.r.id.length !== self._hashLength) {\n        return cb(new Error('Bad reply'))\n      }\n      if (Buffer.isBuffer(expectedId) && !expectedId.equals(pong.r.id)) {\n        return cb(new Error('Unexpected node id'))\n      }\n\n      self.updateBucketTimestamp()\n      cb(null, {\n        id: pong.r.id,\n        host: node.host || node.address,\n        port: node.port\n      })\n    })\n  }\n\n  toJSON () {\n    const self = this\n    const values = {}\n    Object.keys(this._values.cache).forEach(key => {\n      const value = self._values.cache[key].value\n      values[key] = {\n        v: value.v.toString('hex'),\n        id: value.id.toString('hex')\n      }\n      if (value.seq != null) values[key].seq = value.seq\n      if (value.sig != null) values[key].sig = value.sig.toString('hex')\n      if (value.k != null) values[key].k = value.k.toString('hex')\n    })\n    return {\n      nodes: this._rpc.nodes.toArray().map(toNode),\n      values\n    }\n  }\n\n  put (opts, cb) {\n    if (Buffer.isBuffer(opts) || typeof opts === 'string') opts = { v: opts }\n    const isMutable = !!opts.k\n    if (opts.v === undefined) {\n      throw new Error('opts.v not given')\n    }\n    if (opts.v.length >= 1000) {\n      throw new Error('v must be less than 1000 bytes in put()')\n    }\n    if (isMutable && opts.cas !== undefined && typeof opts.cas !== 'number') {\n      throw new Error('opts.cas must be an integer if provided')\n    }\n    if (isMutable && opts.k.length !== 32) {\n      throw new Error('opts.k ed25519 public key must be 32 bytes')\n    }\n    if (isMutable && typeof opts.sign !== 'function' && !Buffer.isBuffer(opts.sig)) {\n      throw new Error('opts.sign function or options.sig signature is required for mutable put')\n    }\n    if (isMutable && opts.salt && opts.salt.length > 64) {\n      throw new Error('opts.salt is > 64 bytes long')\n    }\n    if (isMutable && opts.seq === undefined) {\n      throw new Error('opts.seq not provided for a mutable update')\n    }\n    if (isMutable && typeof opts.seq !== 'number') {\n      throw new Error('opts.seq not an integer')\n    }\n\n    return this._put(opts, cb)\n  }\n\n  _put (opts, cb) {\n    if (!cb) cb = noop\n\n    const isMutable = !!opts.k\n    const v = typeof opts.v === 'string' ? Buffer.from(opts.v) : opts.v\n    const key = isMutable\n      ? this._hash(opts.salt ? Buffer.concat([opts.k, opts.salt]) : opts.k)\n      : this._hash(bencode.encode(v))\n\n    const table = this._tables.get(key.toString('hex'))\n    if (!table) return this._preput(key, opts, cb)\n\n    const message = {\n      q: 'put',\n      a: {\n        id: this._rpc.id,\n        token: null, // queryAll sets this\n        v\n      }\n    }\n\n    if (isMutable) {\n      if (typeof opts.cas === 'number') message.a.cas = opts.cas\n      if (opts.salt) message.a.salt = opts.salt\n      message.a.k = opts.k\n      message.a.seq = opts.seq\n      if (typeof opts.sign === 'function') message.a.sig = opts.sign(encodeSigData(message.a))\n      else if (Buffer.isBuffer(opts.sig)) message.a.sig = opts.sig\n    } else {\n      this._values.set(key.toString('hex'), message.a)\n    }\n\n    this._rpc.queryAll(table.closest(key), message, null, (err, n) => {\n      if (err) return cb(err, key, n)\n      cb(null, key, n)\n    })\n\n    return key\n  }\n\n  _preput (key, opts, cb) {\n    const self = this\n\n    this._closest(key, {\n      q: 'get',\n      a: {\n        id: this._rpc.id,\n        target: key\n      }\n    }, null, (err, n) => {\n      if (err) return cb(err)\n      self.put(opts, cb)\n    })\n\n    return key\n  }\n\n  get (key, opts, cb) {\n    key = toBuffer(key)\n    if (typeof opts === 'function') {\n      cb = opts\n      opts = null\n    }\n\n    if (!opts) opts = {}\n    const verify = opts.verify || this._verify\n    const hash = this._hash\n    let value = this._values.get(key.toString('hex')) || null\n\n    if (value && (opts.cache !== false)) {\n      value = createGetResponse(this._rpc.id, null, value)\n      return process.nextTick(done)\n    }\n\n    this._closest(key, {\n      q: 'get',\n      a: {\n        id: this._rpc.id,\n        target: key\n      }\n    }, onreply, done)\n\n    function done (err) {\n      if (err) return cb(err)\n      cb(null, value)\n    }\n\n    function onreply (message) {\n      const r = message.r\n      if (!r || !r.v) return true\n\n      const isMutable = r.k || r.sig\n\n      if (opts.salt) r.salt = Buffer.from(opts.salt)\n\n      if (isMutable) {\n        if (!verify || !r.sig || !r.k) return true\n        if (!verify(r.sig, encodeSigData(r), r.k)) return true\n        if (hash(r.salt ? Buffer.concat([r.k, r.salt]) : r.k).equals(key)) {\n          if (!value || r.seq > value.seq) value = r\n        }\n      } else {\n        if (hash(bencode.encode(r.v)).equals(key)) {\n          value = r\n          return false\n        }\n      }\n\n      return true\n    }\n  }\n\n  announce (infoHash, port, cb) {\n    if (typeof port === 'function') return this.announce(infoHash, 0, port)\n    infoHash = toBuffer(infoHash)\n    if (!cb) cb = noop\n\n    const table = this._tables.get(infoHash.toString('hex'))\n    if (!table) return this._preannounce(infoHash, port, cb)\n\n    if (this._host) {\n      const dhtPort = this.listening ? this.address().port : 0\n      this._addPeer(\n        { host: this._host, port: port || dhtPort },\n        infoHash,\n        { host: this._host, port: dhtPort }\n      )\n    }\n\n    const message = {\n      q: 'announce_peer',\n      a: {\n        id: this._rpc.id,\n        token: null, // queryAll sets this\n        info_hash: infoHash,\n        port,\n        implied_port: port ? 0 : 1\n      }\n    }\n\n    this._debug('announce %s %d', infoHash, port)\n    this._rpc.queryAll(table.closest(infoHash), message, null, cb)\n  }\n\n  _preannounce (infoHash, port, cb) {\n    const self = this\n\n    this.lookup(infoHash, err => {\n      if (self.destroyed) return cb(new Error('dht is destroyed'))\n      if (err) return cb(err)\n      self.announce(infoHash, port, cb)\n    })\n  }\n\n  lookup (infoHash, cb) {\n    infoHash = toBuffer(infoHash)\n    if (!cb) cb = noop\n    const self = this\n    let aborted = false\n\n    this._debug('lookup %s', infoHash)\n    process.nextTick(emit)\n    this._closest(infoHash, {\n      q: 'get_peers',\n      a: {\n        id: this._rpc.id,\n        info_hash: infoHash\n      }\n    }, onreply, cb)\n\n    function emit (values, from) {\n      if (!values) values = self._peers.get(infoHash.toString('hex'), 100)\n      const peers = decodePeers(values)\n      for (let i = 0; i < peers.length; i++) {\n        self.emit('peer', peers[i], infoHash, from || null)\n      }\n    }\n\n    function onreply (message, node) {\n      if (aborted) return false\n      if (message.r.values) emit(message.r.values, node)\n    }\n\n    return function abort () { aborted = true }\n  }\n\n  address () {\n    return this._rpc.address()\n  }\n\n  // listen([port], [address], [onlistening])\n  listen (...args) {\n    this._rpc.bind(...args)\n  }\n\n  destroy (cb) {\n    if (this.destroyed) {\n      if (cb) process.nextTick(cb)\n      return\n    }\n    this.destroyed = true\n    const self = this\n    clearInterval(this._interval)\n    this.removeBucketCheckInterval()\n    this._peers.destroy()\n    this._debug('destroying')\n    this._rpc.destroy(() => {\n      self.emit('close')\n      if (cb) cb()\n    })\n  }\n\n  _onquery (query, peer) {\n    if (query.q === undefined || query.q === null) return\n\n    const q = query.q.toString()\n    this._debug('received %s query from %s:%d', q, peer.address, peer.port)\n    if (!query.a) return\n\n    switch (q) {\n      case 'ping':\n        return this._rpc.response(peer, query, { id: this._rpc.id })\n\n      case 'find_node':\n        return this._onfindnode(query, peer)\n\n      case 'get_peers':\n        return this._ongetpeers(query, peer)\n\n      case 'announce_peer':\n        return this._onannouncepeer(query, peer)\n\n      case 'get':\n        return this._onget(query, peer)\n\n      case 'put':\n        return this._onput(query, peer)\n    }\n  }\n\n  _onfindnode (query, peer) {\n    const target = query.a.target\n    if (!target) return this._rpc.error(peer, query, [203, '`find_node` missing required `a.target` field'])\n\n    this.emit('find_node', target)\n\n    const nodes = this._rpc.nodes.closest(target)\n    this._rpc.response(peer, query, { id: this._rpc.id }, nodes)\n  }\n\n  _ongetpeers (query, peer) {\n    const host = peer.address || peer.host\n    const infoHash = query.a.info_hash\n    if (!infoHash) return this._rpc.error(peer, query, [203, '`get_peers` missing required `a.info_hash` field'])\n\n    this.emit('get_peers', infoHash)\n\n    const r = { id: this._rpc.id, token: this._generateToken(host) }\n    const peers = this._peers.get(infoHash.toString('hex'))\n\n    if (peers.length) {\n      r.values = peers\n      this._rpc.response(peer, query, r)\n    } else {\n      this._rpc.response(peer, query, r, this._rpc.nodes.closest(infoHash))\n    }\n  }\n\n  _onannouncepeer (query, peer) {\n    const host = peer.address || peer.host\n    const port = query.a.implied_port ? peer.port : query.a.port\n    if (!port || typeof port !== 'number' || port <= 0 || port > 65535) return\n    const infoHash = query.a.info_hash\n    const token = query.a.token\n    if (!infoHash || !token) return\n\n    if (!this._validateToken(host, token)) {\n      return this._rpc.error(peer, query, [203, 'cannot `announce_peer` with bad token'])\n    }\n\n    this.emit('announce_peer', infoHash, { host, port: peer.port })\n\n    this._addPeer({ host, port }, infoHash, { host, port: peer.port })\n    this._rpc.response(peer, query, { id: this._rpc.id })\n  }\n\n  _addPeer (peer, infoHash, from) {\n    this._peers.add(infoHash.toString('hex'), encodePeer(peer.host, peer.port))\n    this.emit('announce', peer, infoHash, from)\n  }\n\n  _onget (query, peer) {\n    const host = peer.address || peer.host\n    const target = query.a.target\n    if (!target) return\n    const token = this._generateToken(host)\n    const value = this._values.get(target.toString('hex'))\n\n    this.emit('get', target, value)\n\n    if (!value) {\n      const nodes = this._rpc.nodes.closest(target)\n      this._rpc.response(peer, query, { id: this._rpc.id, token }, nodes)\n    } else {\n      this._rpc.response(peer, query, createGetResponse(this._rpc.id, token, value))\n    }\n  }\n\n  _onput (query, peer) {\n    const host = peer.address || peer.host\n\n    const a = query.a\n    if (!a) return\n    const v = query.a.v\n    if (!v) return\n    const id = query.a.id\n    if (!id) return\n\n    const token = a.token\n    if (!token) return\n\n    if (!this._validateToken(host, token)) {\n      return this._rpc.error(peer, query, [203, 'cannot `put` with bad token'])\n    }\n    if (v.length > 1000) {\n      return this._rpc.error(peer, query, [205, 'data payload too large'])\n    }\n\n    const isMutable = !!(a.k || a.sig)\n    if (isMutable && !a.k && !a.sig) return\n\n    const key = isMutable\n      ? this._hash(a.salt ? Buffer.concat([a.k, a.salt]) : a.k)\n      : this._hash(bencode.encode(v))\n    const keyHex = key.toString('hex')\n\n    this.emit('put', key, v)\n\n    if (isMutable) {\n      if (!this._verify) return this._rpc.error(peer, query, [400, 'verification not supported'])\n      if (!this._verify(a.sig, encodeSigData(a), a.k)) return\n      const prev = this._values.get(keyHex)\n      if (prev && typeof a.cas === 'number' && prev.seq !== a.cas) {\n        return this._rpc.error(peer, query, [301, 'CAS mismatch, re-read and try again'])\n      }\n      if (prev && typeof prev.seq === 'number' && !(a.seq > prev.seq)) {\n        return this._rpc.error(peer, query, [302, 'sequence number less than current'])\n      }\n      this._values.set(keyHex, { v, k: a.k, salt: a.salt, sig: a.sig, seq: a.seq, id })\n    } else {\n      this._values.set(keyHex, { v, id })\n    }\n\n    this._rpc.response(peer, query, { id: this._rpc.id })\n  }\n\n  _bootstrap (populate) {\n    const self = this\n    if (!populate) return process.nextTick(ready)\n\n    this._rpc.populate(self._rpc.id, {\n      q: 'find_node',\n      a: {\n        id: self._rpc.id,\n        target: self._rpc.id\n      }\n    }, ready)\n\n    function ready () {\n      if (self.ready) return\n\n      self._debug('emit ready')\n      self.ready = true\n      self.emit('ready')\n    }\n  }\n\n  _closest (target, message, onmessage, cb) {\n    const self = this\n\n    const table = new KBucket({\n      localNodeId: target,\n      numberOfNodesPerKBucket: this._rpc.k\n    })\n\n    this._rpc.closest(target, message, onreply, done)\n\n    function done (err, n) {\n      if (err) return cb(err)\n      self._tables.set(target.toString('hex'), table)\n      self._debug('visited %d nodes', n)\n      cb(null, n)\n    }\n\n    function onreply (message, node) {\n      if (!message.r) return true\n\n      if (message.r.token && message.r.id && Buffer.isBuffer(message.r.id) && message.r.id.length === self._hashLength) {\n        self._debug('found node %s (target: %s)', message.r.id, target)\n        table.add({\n          id: message.r.id,\n          host: node.host || node.address,\n          port: node.port,\n          token: message.r.token\n        })\n      }\n\n      if (!onmessage) return true\n      return onmessage(message, node)\n    }\n  }\n\n  _debug () {\n    if (!debug.enabled) return\n    const args = [].slice.call(arguments)\n    args[0] = `[${this.nodeId.toString('hex').substring(0, 7)}] ${args[0]}`\n    for (let i = 1; i < args.length; i++) {\n      if (Buffer.isBuffer(args[i])) args[i] = args[i].toString('hex')\n    }\n    debug(...args)\n  }\n\n  _validateToken (host, token) {\n    const tokenA = this._generateToken(host, this._secrets[0])\n    const tokenB = this._generateToken(host, this._secrets[1])\n    return token.equals(tokenA) || token.equals(tokenB)\n  }\n\n  _generateToken (host, secret) {\n    if (!secret) secret = this._secrets[0]\n    return this._hash(Buffer.concat([Buffer.from(host), secret]))\n  }\n\n  _rotateSecrets () {\n    if (!this._secrets) {\n      this._secrets = [randombytes(this._hashLength), randombytes(this._hashLength)]\n    } else {\n      this._secrets[1] = this._secrets[0]\n      this._secrets[0] = randombytes(this._hashLength)\n    }\n  }\n}\n\nfunction noop () {}\n\nfunction sha1 (buf) {\n  return crypto.createHash('sha1').update(buf).digest()\n}\n\nfunction createGetResponse (id, token, value) {\n  const r = { id, token, v: value.v }\n  if (value.sig) {\n    r.sig = value.sig\n    r.k = value.k\n    if (typeof value.seq === 'number') r.seq = value.seq\n  }\n  return r\n}\n\nfunction encodePeer (host, port) {\n  const buf = Buffer.allocUnsafe(6)\n  const ip = host.split('.')\n  for (let i = 0; i < 4; i++) buf[i] = parseInt(ip[i] || 0, 10)\n  buf.writeUInt16BE(port, 4)\n  return buf\n}\n\nfunction decodePeers (buf) {\n  const peers = []\n\n  try {\n    for (let i = 0; i < buf.length; i++) {\n      const port = buf[i].readUInt16BE(4)\n      if (!port) continue\n      peers.push({\n        host: parseIp(buf[i], 0),\n        port\n      })\n    }\n  } catch (err) {\n    // do nothing\n  }\n\n  return peers\n}\n\nfunction parseIp (buf, offset) {\n  return `${buf[offset++]}.${buf[offset++]}.${buf[offset++]}.${buf[offset++]}`\n}\n\nfunction encodeSigData (msg) {\n  const ref = { seq: msg.seq || 0, v: msg.v }\n  if (msg.salt) ref.salt = msg.salt\n  return bencode.encode(ref).slice(1, -1)\n}\n\nfunction toNode (node) {\n  return {\n    host: node.host,\n    port: node.port\n  }\n}\n\nfunction toBuffer (str) {\n  if (Buffer.isBuffer(str)) return str\n  if (ArrayBuffer.isView(str)) return Buffer.from(str.buffer, str.byteOffset, str.byteLength)\n  if (typeof str === 'string') return Buffer.from(str, 'hex')\n  throw new Error('Pass a buffer or a string')\n}\n\nexport default DHT\n", "import Debug from 'debug'\nimport EventEmitter from 'events'\nimport once from 'once'\nimport parallel from 'run-parallel'\nimport Peer from '@thaunknown/simple-peer/lite.js'\nimport queueMicrotask from 'queue-microtask'\nimport { hex2arr, hex2bin, text2arr, arr2hex, arr2text } from 'uint8-util'\n\nimport common from './lib/common.js'\nimport HTTPTracker from './lib/client/http-tracker.js' // empty object in browser\nimport UDPTracker from './lib/client/udp-tracker.js' // empty object in browser\nimport WebSocketTracker from './lib/client/websocket-tracker.js'\n\nconst debug = Debug('bittorrent-tracker:client')\n\n/**\n * BitTorrent tracker client.\n *\n * Find torrent peers, to help a torrent client participate in a torrent swarm.\n *\n * @param {Object} opts                          options object\n * @param {string|Uint8Array} opts.infoHash          torrent info hash\n * @param {string|Uint8Array} opts.peerId            peer id\n * @param {string|Array.<string>} opts.announce  announce\n * @param {number} opts.port                     torrent client listening port\n * @param {function} opts.getAnnounceOpts        callback to provide data to tracker\n * @param {number} opts.rtcConfig                RTCPeerConnection configuration object\n * @param {number} opts.userAgent                User-Agent header for http requests\n * @param {number} opts.wrtc                     custom webrtc impl (useful in node.js)\n * @param {object} opts.proxyOpts                proxy options (useful in node.js)\n */\nclass Client extends EventEmitter {\n  constructor (opts = {}) {\n    super()\n\n    if (!opts.peerId) throw new Error('Option `peerId` is required')\n    if (!opts.infoHash) throw new Error('Option `infoHash` is required')\n    if (!opts.announce) throw new Error('Option `announce` is required')\n    if (!process.browser && !opts.port) throw new Error('Option `port` is required')\n\n    this.peerId = typeof opts.peerId === 'string'\n      ? opts.peerId\n      : arr2hex(opts.peerId)\n    this._peerIdBuffer = hex2arr(this.peerId)\n    this._peerIdBinary = hex2bin(this.peerId)\n\n    this.infoHash = typeof opts.infoHash === 'string'\n      ? opts.infoHash.toLowerCase()\n      : arr2hex(opts.infoHash)\n    this._infoHashBuffer = hex2arr(this.infoHash)\n    this._infoHashBinary = hex2bin(this.infoHash)\n\n    debug('new client %s', this.infoHash)\n\n    this.destroyed = false\n\n    this._port = opts.port\n    this._getAnnounceOpts = opts.getAnnounceOpts\n    this._rtcConfig = opts.rtcConfig\n    this._userAgent = opts.userAgent\n    this._proxyOpts = opts.proxyOpts\n\n    // Support lazy 'wrtc' module initialization\n    // See: https://github.com/webtorrent/webtorrent-hybrid/issues/46\n    this._wrtc = typeof opts.wrtc === 'function' ? opts.wrtc() : opts.wrtc\n\n    let announce = typeof opts.announce === 'string'\n      ? [opts.announce]\n      : opts.announce == null ? [] : opts.announce\n\n    // Remove trailing slash from trackers to catch duplicates\n    announce = announce.map(announceUrl => {\n      if (ArrayBuffer.isView(announceUrl)) announceUrl = arr2text(announceUrl)\n      if (announceUrl[announceUrl.length - 1] === '/') {\n        announceUrl = announceUrl.substring(0, announceUrl.length - 1)\n      }\n      return announceUrl\n    })\n    // remove duplicates by converting to Set and back\n    announce = Array.from(new Set(announce))\n\n    const webrtcSupport = this._wrtc !== false && (!!this._wrtc || Peer.WEBRTC_SUPPORT)\n\n    const nextTickWarn = err => {\n      queueMicrotask(() => {\n        this.emit('warning', err)\n      })\n    }\n\n    this._trackers = announce\n      .map(announceUrl => {\n        let parsedUrl\n        try {\n          parsedUrl = common.parseUrl(announceUrl)\n        } catch (err) {\n          nextTickWarn(new Error(`Invalid tracker URL: ${announceUrl}`))\n          return null\n        }\n\n        const port = parsedUrl.port\n        if (port < 0 || port > 65535) {\n          nextTickWarn(new Error(`Invalid tracker port: ${announceUrl}`))\n          return null\n        }\n\n        const protocol = parsedUrl.protocol\n        if ((protocol === 'http:' || protocol === 'https:') &&\n            typeof HTTPTracker === 'function') {\n          return new HTTPTracker(this, announceUrl)\n        } else if (protocol === 'udp:' && typeof UDPTracker === 'function') {\n          return new UDPTracker(this, announceUrl)\n        } else if ((protocol === 'ws:' || protocol === 'wss:') && webrtcSupport) {\n          // Skip ws:// trackers on https:// sites because they throw SecurityError\n          if (protocol === 'ws:' && typeof window !== 'undefined' &&\n              window.location.protocol === 'https:') {\n            nextTickWarn(new Error(`Unsupported tracker protocol: ${announceUrl}`))\n            return null\n          }\n          return new WebSocketTracker(this, announceUrl)\n        } else {\n          nextTickWarn(new Error(`Unsupported tracker protocol: ${announceUrl}`))\n          return null\n        }\n      })\n      .filter(Boolean)\n  }\n\n  /**\n   * Send a `start` announce to the trackers.\n   * @param {Object} opts\n   * @param {number=} opts.uploaded\n   * @param {number=} opts.downloaded\n   * @param {number=} opts.left (if not set, calculated automatically)\n   */\n  start (opts) {\n    opts = this._defaultAnnounceOpts(opts)\n    opts.event = 'started'\n    debug('send `start` %o', opts)\n    this._announce(opts)\n\n    // start announcing on intervals\n    this._trackers.forEach(tracker => {\n      tracker.setInterval()\n    })\n  }\n\n  /**\n   * Send a `stop` announce to the trackers.\n   * @param {Object} opts\n   * @param {number=} opts.uploaded\n   * @param {number=} opts.downloaded\n   * @param {number=} opts.numwant\n   * @param {number=} opts.left (if not set, calculated automatically)\n   */\n  stop (opts) {\n    opts = this._defaultAnnounceOpts(opts)\n    opts.event = 'stopped'\n    debug('send `stop` %o', opts)\n    this._announce(opts)\n  }\n\n  /**\n   * Send a `complete` announce to the trackers.\n   * @param {Object} opts\n   * @param {number=} opts.uploaded\n   * @param {number=} opts.downloaded\n   * @param {number=} opts.numwant\n   * @param {number=} opts.left (if not set, calculated automatically)\n   */\n  complete (opts) {\n    if (!opts) opts = {}\n    opts = this._defaultAnnounceOpts(opts)\n    opts.event = 'completed'\n    debug('send `complete` %o', opts)\n    this._announce(opts)\n  }\n\n  /**\n   * Send a `update` announce to the trackers.\n   * @param {Object} opts\n   * @param {number=} opts.uploaded\n   * @param {number=} opts.downloaded\n   * @param {number=} opts.numwant\n   * @param {number=} opts.left (if not set, calculated automatically)\n   */\n  update (opts) {\n    opts = this._defaultAnnounceOpts(opts)\n    if (opts.event) delete opts.event\n    debug('send `update` %o', opts)\n    this._announce(opts)\n  }\n\n  _announce (opts) {\n    this._trackers.forEach(tracker => {\n      // tracker should not modify `opts` object, it's passed to all trackers\n      tracker.announce(opts)\n    })\n  }\n\n  /**\n   * Send a scrape request to the trackers.\n   * @param {Object} opts\n   */\n  scrape (opts) {\n    debug('send `scrape`')\n    if (!opts) opts = {}\n    this._trackers.forEach(tracker => {\n      // tracker should not modify `opts` object, it's passed to all trackers\n      tracker.scrape(opts)\n    })\n  }\n\n  setInterval (intervalMs) {\n    debug('setInterval %d', intervalMs)\n    this._trackers.forEach(tracker => {\n      tracker.setInterval(intervalMs)\n    })\n  }\n\n  destroy (cb) {\n    if (this.destroyed) return\n    this.destroyed = true\n    debug('destroy')\n\n    const tasks = this._trackers.map(tracker => cb => {\n      tracker.destroy(cb)\n    })\n\n    parallel(tasks, cb)\n\n    this._trackers = []\n    this._getAnnounceOpts = null\n  }\n\n  _defaultAnnounceOpts (opts = {}) {\n    if (opts.numwant == null) opts.numwant = common.DEFAULT_ANNOUNCE_PEERS\n\n    if (opts.uploaded == null) opts.uploaded = 0\n    if (opts.downloaded == null) opts.downloaded = 0\n\n    if (this._getAnnounceOpts) opts = Object.assign({}, opts, this._getAnnounceOpts())\n\n    return opts\n  }\n}\n\n/**\n * Simple convenience function to scrape a tracker for an info hash without needing to\n * create a Client, pass it a parsed torrent, etc. Support scraping a tracker for multiple\n * torrents at the same time.\n * @params {Object} opts\n * @param  {string|Array.<string>} opts.infoHash\n * @param  {string} opts.announce\n * @param  {function} cb\n */\nClient.scrape = (opts, cb) => {\n  cb = once(cb)\n\n  if (!opts.infoHash) throw new Error('Option `infoHash` is required')\n  if (!opts.announce) throw new Error('Option `announce` is required')\n\n  const clientOpts = Object.assign({}, opts, {\n    infoHash: Array.isArray(opts.infoHash) ? opts.infoHash[0] : opts.infoHash,\n    peerId: text2arr('01234567890123456789'), // dummy value\n    port: 6881 // dummy value\n  })\n\n  const client = new Client(clientOpts)\n  client.once('error', cb)\n  client.once('warning', cb)\n\n  let len = Array.isArray(opts.infoHash) ? opts.infoHash.length : 1\n  const results = {}\n  client.on('scrape', data => {\n    len -= 1\n    results[data.infoHash] = data\n    if (len === 0) {\n      client.destroy()\n      const keys = Object.keys(results)\n      if (keys.length === 1) {\n        cb(null, results[keys[0]])\n      } else {\n        cb(null, results)\n      }\n    }\n  })\n\n  client.scrape({ infoHash: opts.infoHash })\n  return client\n}\n\nexport default Client\n", "/**\n * Functions/constants needed by both the client and server.\n */\nimport * as common from './common-node.js'\nexport * from './common-node.js'\n\nexport const DEFAULT_ANNOUNCE_PEERS = 50\nexport const MAX_ANNOUNCE_PEERS = 82\n\n// HACK: Fix for WHATWG URL object not parsing non-standard URL schemes like\n// 'udp:'. Just replace it with 'http:' since we only need a few properties.\n//\n// Note: Only affects Chrome and Firefox. Works fine in Node.js, Safari, and\n// Edge.\n//\n// Note: UDP trackers aren't used in the normal browser build, but they are\n// used in a Chrome App build (i.e. by Brave Browser).\n//\n// Bug reports:\n// - Chrome: https://bugs.chromium.org/p/chromium/issues/detail?id=734880\n// - Firefox: https://bugzilla.mozilla.org/show_bug.cgi?id=1374505\nexport const parseUrl = str => {\n  const url = new URL(str.replace(/^udp:/, 'http:'))\n\n  if (str.match(/^udp:/)) {\n    Object.defineProperties(url, {\n      href: { value: url.href.replace(/^http/, 'udp') },\n      protocol: { value: url.protocol.replace(/^http/, 'udp') },\n      origin: { value: url.origin.replace(/^http/, 'udp') }\n    })\n  }\n\n  return url\n}\n\nexport default {\n  DEFAULT_ANNOUNCE_PEERS,\n  MAX_ANNOUNCE_PEERS,\n  parseUrl,\n  ...common\n}\n", "import Debug from 'debug'\nimport Peer from '@thaunknown/simple-peer/lite.js'\nimport Socket from '@thaunknown/simple-websocket'\nimport { arr2text, arr2hex, hex2bin, bin2hex, randomBytes } from 'uint8-util'\n\nimport common from '../common.js'\nimport Tracker from './tracker.js'\n\nconst debug = Debug('bittorrent-tracker:websocket-tracker')\n\n// Use a socket pool, so tracker clients share WebSocket objects for the same server.\n// In practice, WebSockets are pretty slow to establish, so this gives a nice performance\n// boost, and saves browser resources.\nconst socketPool = {}\n\nconst RECONNECT_MINIMUM = 10 * 1000\nconst RECONNECT_MAXIMUM = 60 * 60 * 1000\nconst RECONNECT_VARIANCE = 5 * 60 * 1000\nconst OFFER_TIMEOUT = 50 * 1000\n\nclass WebSocketTracker extends Tracker {\n  constructor (client, announceUrl) {\n    super(client, announceUrl)\n    debug('new websocket tracker %s', announceUrl)\n\n    this.peers = {} // peers (offer id -> peer)\n    this.socket = null\n\n    this.reconnecting = false\n    this.retries = 0\n    this.reconnectTimer = null\n\n    // Simple boolean flag to track whether the socket has received data from\n    // the websocket server since the last time socket.send() was called.\n    this.expectingResponse = false\n\n    this._openSocket()\n  }\n\n  announce (opts) {\n    if (this.destroyed || this.reconnecting) return\n    if (!this.socket.connected) {\n      this.socket.once('connect', () => {\n        this.announce(opts)\n      })\n      return\n    }\n\n    const params = Object.assign({}, opts, {\n      action: 'announce',\n      info_hash: this.client._infoHashBinary,\n      peer_id: this.client._peerIdBinary\n    })\n    if (this._trackerId) params.trackerid = this._trackerId\n\n    if (opts.event === 'stopped' || opts.event === 'completed') {\n      // Don't include offers with 'stopped' or 'completed' event\n      this._send(params)\n    } else {\n      // Limit the number of offers that are generated, since it can be slow\n      const numwant = Math.min(opts.numwant, 5)\n\n      this._generateOffers(numwant, offers => {\n        params.numwant = numwant\n        params.offers = offers\n        this._send(params)\n      })\n    }\n  }\n\n  scrape (opts) {\n    if (this.destroyed || this.reconnecting) return\n    if (!this.socket.connected) {\n      this.socket.once('connect', () => {\n        this.scrape(opts)\n      })\n      return\n    }\n\n    const infoHashes = (Array.isArray(opts.infoHash) && opts.infoHash.length > 0)\n      ? opts.infoHash.map(infoHash => hex2bin(infoHash))\n      : (opts.infoHash && hex2bin(opts.infoHash)) || this.client._infoHashBinary\n    const params = {\n      action: 'scrape',\n      info_hash: infoHashes\n    }\n\n    this._send(params)\n  }\n\n  destroy (cb = noop) {\n    if (this.destroyed) return cb(null)\n\n    this.destroyed = true\n\n    clearInterval(this.interval)\n    clearTimeout(this.reconnectTimer)\n\n    // Destroy peers\n    for (const peerId in this.peers) {\n      const peer = this.peers[peerId]\n      clearTimeout(peer.trackerTimeout)\n      peer.destroy()\n    }\n    this.peers = null\n\n    if (this.socket) {\n      this.socket.removeListener('connect', this._onSocketConnectBound)\n      this.socket.removeListener('data', this._onSocketDataBound)\n      this.socket.removeListener('close', this._onSocketCloseBound)\n      this.socket.removeListener('error', this._onSocketErrorBound)\n      this.socket = null\n    }\n\n    this._onSocketConnectBound = null\n    this._onSocketErrorBound = null\n    this._onSocketDataBound = null\n    this._onSocketCloseBound = null\n\n    if (socketPool[this.announceUrl]) {\n      socketPool[this.announceUrl].consumers -= 1\n    }\n\n    // Other instances are using the socket, so there's nothing left to do here\n    if (socketPool[this.announceUrl].consumers > 0) return cb()\n\n    let socket = socketPool[this.announceUrl]\n    delete socketPool[this.announceUrl]\n    socket.on('error', noop) // ignore all future errors\n    socket.once('close', cb)\n\n    let timeout\n\n    // If there is no data response expected, destroy immediately.\n    if (!this.expectingResponse) return destroyCleanup()\n\n    // Otherwise, wait a short time for potential responses to come in from the\n    // server, then force close the socket.\n    timeout = setTimeout(destroyCleanup, common.DESTROY_TIMEOUT)\n\n    // But, if a response comes from the server before the timeout fires, do cleanup\n    // right away.\n    socket.once('data', destroyCleanup)\n\n    function destroyCleanup () {\n      if (timeout) {\n        clearTimeout(timeout)\n        timeout = null\n      }\n      socket.removeListener('data', destroyCleanup)\n      socket.destroy()\n      socket = null\n    }\n  }\n\n  _openSocket () {\n    this.destroyed = false\n\n    if (!this.peers) this.peers = {}\n\n    this._onSocketConnectBound = () => {\n      this._onSocketConnect()\n    }\n    this._onSocketErrorBound = err => {\n      this._onSocketError(err)\n    }\n    this._onSocketDataBound = data => {\n      this._onSocketData(data)\n    }\n    this._onSocketCloseBound = () => {\n      this._onSocketClose()\n    }\n\n    this.socket = socketPool[this.announceUrl]\n    if (this.socket) {\n      socketPool[this.announceUrl].consumers += 1\n      if (this.socket.connected) {\n        this._onSocketConnectBound()\n      }\n    } else {\n      const parsedUrl = new URL(this.announceUrl)\n      let agent\n      if (this.client._proxyOpts) {\n        agent = parsedUrl.protocol === 'wss:' ? this.client._proxyOpts.httpsAgent : this.client._proxyOpts.httpAgent\n        if (!agent && this.client._proxyOpts.socksProxy) {\n          agent = this.client._proxyOpts.socksProxy\n        }\n      }\n      this.socket = socketPool[this.announceUrl] = new Socket({ url: this.announceUrl, agent })\n      this.socket.consumers = 1\n      this.socket.once('connect', this._onSocketConnectBound)\n    }\n\n    this.socket.on('data', this._onSocketDataBound)\n    this.socket.once('close', this._onSocketCloseBound)\n    this.socket.once('error', this._onSocketErrorBound)\n  }\n\n  _onSocketConnect () {\n    if (this.destroyed) return\n\n    if (this.reconnecting) {\n      this.reconnecting = false\n      this.retries = 0\n      this.announce(this.client._defaultAnnounceOpts())\n    }\n  }\n\n  _onSocketData (data) {\n    if (this.destroyed) return\n\n    this.expectingResponse = false\n\n    try {\n      data = JSON.parse(arr2text(data))\n    } catch (err) {\n      this.client.emit('warning', new Error('Invalid tracker response'))\n      return\n    }\n\n    if (data.action === 'announce') {\n      this._onAnnounceResponse(data)\n    } else if (data.action === 'scrape') {\n      this._onScrapeResponse(data)\n    } else {\n      this._onSocketError(new Error(`invalid action in WS response: ${data.action}`))\n    }\n  }\n\n  _onAnnounceResponse (data) {\n    if (data.info_hash !== this.client._infoHashBinary) {\n      debug(\n        'ignoring websocket data from %s for %s (looking for %s: reused socket)',\n        this.announceUrl, bin2hex(data.info_hash), this.client.infoHash\n      )\n      return\n    }\n\n    if (data.peer_id && data.peer_id === this.client._peerIdBinary) {\n      // ignore offers/answers from this client\n      return\n    }\n\n    debug(\n      'received %s from %s for %s',\n      JSON.stringify(data), this.announceUrl, this.client.infoHash\n    )\n\n    const failure = data['failure reason']\n    if (failure) return this.client.emit('warning', new Error(failure))\n\n    const warning = data['warning message']\n    if (warning) this.client.emit('warning', new Error(warning))\n\n    const interval = data.interval || data['min interval']\n    if (interval) this.setInterval(interval * 1000)\n\n    const trackerId = data['tracker id']\n    if (trackerId) {\n      // If absent, do not discard previous trackerId value\n      this._trackerId = trackerId\n    }\n\n    if (data.complete != null) {\n      const response = Object.assign({}, data, {\n        announce: this.announceUrl,\n        infoHash: bin2hex(data.info_hash)\n      })\n      this.client.emit('update', response)\n    }\n\n    let peer\n    if (data.offer && data.peer_id) {\n      debug('creating peer (from remote offer)')\n      peer = this._createPeer()\n      peer.id = bin2hex(data.peer_id)\n      peer.once('signal', answer => {\n        const params = {\n          action: 'announce',\n          info_hash: this.client._infoHashBinary,\n          peer_id: this.client._peerIdBinary,\n          to_peer_id: data.peer_id,\n          answer,\n          offer_id: data.offer_id\n        }\n        if (this._trackerId) params.trackerid = this._trackerId\n        this._send(params)\n      })\n      this.client.emit('peer', peer)\n      peer.signal(data.offer)\n    }\n\n    if (data.answer && data.peer_id) {\n      const offerId = bin2hex(data.offer_id)\n      peer = this.peers[offerId]\n      if (peer) {\n        peer.id = bin2hex(data.peer_id)\n        this.client.emit('peer', peer)\n        peer.signal(data.answer)\n\n        clearTimeout(peer.trackerTimeout)\n        peer.trackerTimeout = null\n        delete this.peers[offerId]\n      } else {\n        debug(`got unexpected answer: ${JSON.stringify(data.answer)}`)\n      }\n    }\n  }\n\n  _onScrapeResponse (data) {\n    data = data.files || {}\n\n    const keys = Object.keys(data)\n    if (keys.length === 0) {\n      this.client.emit('warning', new Error('invalid scrape response'))\n      return\n    }\n\n    keys.forEach(infoHash => {\n      // TODO: optionally handle data.flags.min_request_interval\n      // (separate from announce interval)\n      const response = Object.assign(data[infoHash], {\n        announce: this.announceUrl,\n        infoHash: bin2hex(infoHash)\n      })\n      this.client.emit('scrape', response)\n    })\n  }\n\n  _onSocketClose () {\n    if (this.destroyed) return\n    this.destroy()\n    this._startReconnectTimer()\n  }\n\n  _onSocketError (err) {\n    if (this.destroyed) return\n    this.destroy()\n    // errors will often happen if a tracker is offline, so don't treat it as fatal\n    this.client.emit('warning', err)\n    this._startReconnectTimer()\n  }\n\n  _startReconnectTimer () {\n    const ms = Math.floor(Math.random() * RECONNECT_VARIANCE) + Math.min(Math.pow(2, this.retries) * RECONNECT_MINIMUM, RECONNECT_MAXIMUM)\n\n    this.reconnecting = true\n    clearTimeout(this.reconnectTimer)\n    this.reconnectTimer = setTimeout(() => {\n      this.retries++\n      this._openSocket()\n    }, ms)\n    if (this.reconnectTimer.unref) this.reconnectTimer.unref()\n\n    debug('reconnecting socket in %s ms', ms)\n  }\n\n  _send (params) {\n    if (this.destroyed) return\n    this.expectingResponse = true\n    const message = JSON.stringify(params)\n    debug('send %s', message)\n    this.socket.send(message)\n  }\n\n  _generateOffers (numwant, cb) {\n    const self = this\n    const offers = []\n    debug('generating %s offers', numwant)\n\n    for (let i = 0; i < numwant; ++i) {\n      generateOffer()\n    }\n    checkDone()\n\n    function generateOffer () {\n      const offerId = arr2hex(randomBytes(20))\n      debug('creating peer (from _generateOffers)')\n      const peer = self.peers[offerId] = self._createPeer({ initiator: true })\n      peer.once('signal', offer => {\n        offers.push({\n          offer,\n          offer_id: hex2bin(offerId)\n        })\n        checkDone()\n      })\n      peer.trackerTimeout = setTimeout(() => {\n        debug('tracker timeout: destroying peer')\n        peer.trackerTimeout = null\n        delete self.peers[offerId]\n        peer.destroy()\n      }, OFFER_TIMEOUT)\n      if (peer.trackerTimeout.unref) peer.trackerTimeout.unref()\n    }\n\n    function checkDone () {\n      if (offers.length === numwant) {\n        debug('generated %s offers', numwant)\n        cb(offers)\n      }\n    }\n  }\n\n  _createPeer (opts) {\n    const self = this\n\n    opts = Object.assign({\n      trickle: false,\n      config: self.client._rtcConfig,\n      wrtc: self.client._wrtc\n    }, opts)\n\n    const peer = new Peer(opts)\n\n    peer.once('error', onError)\n    peer.once('connect', onConnect)\n\n    return peer\n\n    // Handle peer 'error' events that are fired *before* the peer is emitted in\n    // a 'peer' event.\n    function onError (err) {\n      self.client.emit('warning', new Error(`Connection error: ${err.message}`))\n      peer.destroy()\n    }\n\n    // Once the peer is emitted in a 'peer' event, then it's the consumer's\n    // responsibility to listen for errors, so the listeners are removed here.\n    function onConnect () {\n      peer.removeListener('error', onError)\n      peer.removeListener('connect', onConnect)\n    }\n  }\n}\n\nWebSocketTracker.prototype.DEFAULT_ANNOUNCE_INTERVAL = 30 * 1000 // 30 seconds\n// Normally this shouldn't be accessed but is occasionally useful\nWebSocketTracker._socketPool = socketPool\n\nfunction noop () {}\n\nexport default WebSocketTracker\n", "/*! simple-websocket. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\r\n/* global WebSocket */\r\n\r\nimport Debug from 'debug'\r\nimport queueMicrotask from 'queue-microtask' // TODO: remove when Node 10 is not supported\r\nimport ws from 'ws' // websockets in node - will be empty object in browser\r\nimport { Duplex } from 'streamx'\r\nimport { text2arr, randomBytes, arr2hex } from 'uint8-util'\r\n\r\nconst debug = Debug('simple-websocket')\r\n\r\nconst _WebSocket = typeof ws !== 'function' ? WebSocket : ws\r\n\r\nconst MAX_BUFFERED_AMOUNT = 64 * 1024\r\n\r\n/**\r\n * WebSocket. Same API as node core `net.Socket`. Duplex stream.\r\n * @param {Object} opts\r\n * @param {string=} opts.url websocket server url\r\n * @param {string=} opts.socket raw websocket instance to wrap\r\n */\r\nexport default class Socket extends Duplex {\r\n  constructor (opts = {}) {\r\n    // Support simple usage: `new Socket(url)`\r\n    if (typeof opts === 'string') {\r\n      opts = { url: opts }\r\n    }\r\n\r\n    opts = Object.assign({\r\n      allowHalfOpen: false\r\n    }, opts)\r\n\r\n    super(opts)\r\n\r\n    this.__objectMode = !!opts.objectMode // streamx is objectMode by default, so implement readable's fuctionality\r\n    if (opts.objectMode != null) delete opts.objectMode // causes error with ws...\r\n\r\n    if (opts.url == null && opts.socket == null) {\r\n      throw new Error('Missing required `url` or `socket` option')\r\n    }\r\n    if (opts.url != null && opts.socket != null) {\r\n      throw new Error('Must specify either `url` or `socket` option, not both')\r\n    }\r\n\r\n    this._id = arr2hex(randomBytes(4)).slice(0, 7)\r\n    this._debug('new websocket: %o', opts)\r\n\r\n    this.connected = false\r\n\r\n    this._chunk = null\r\n    this._cb = null\r\n    this._interval = null\r\n\r\n    if (opts.socket) {\r\n      this.url = opts.socket.url\r\n      this._ws = opts.socket\r\n      this.connected = opts.socket.readyState === _WebSocket.OPEN\r\n    } else {\r\n      this.url = opts.url\r\n      try {\r\n        if (typeof ws === 'function') {\r\n          // `ws` package accepts options\r\n          this._ws = new _WebSocket(opts.url, {\r\n            ...opts,\r\n            encoding: undefined // encoding option breaks ws internals\r\n          })\r\n        } else {\r\n          this._ws = new _WebSocket(opts.url)\r\n        }\r\n      } catch (err) {\r\n        queueMicrotask(() => this.destroy(err))\r\n        return\r\n      }\r\n    }\r\n\r\n    this._ws.binaryType = 'arraybuffer'\r\n\r\n    if (opts.socket && this.connected) {\r\n      queueMicrotask(() => this._handleOpen())\r\n    } else {\r\n      this._ws.onopen = () => this._handleOpen()\r\n    }\r\n\r\n    this._ws.onmessage = event => this._handleMessage(event)\r\n    this._ws.onclose = () => this._handleClose()\r\n    this._ws.onerror = err => this._handleError(err)\r\n\r\n    this._handleFinishBound = () => this._handleFinish()\r\n    this.once('finish', this._handleFinishBound)\r\n  }\r\n\r\n  /**\r\n   * Send text/binary data to the WebSocket server.\r\n   * @param {TypedArrayView|ArrayBuffer|Uint8Array|string|Blob|Object} chunk\r\n   */\r\n  send (chunk) {\r\n    this._ws.send(chunk)\r\n  }\r\n\r\n  _final (cb) {\r\n    if (!this._readableState.ended) this.push(null)\r\n    cb(null)\r\n  }\r\n\r\n  _destroy (cb) {\r\n    if (this.destroyed) return\r\n    if (!this._writableState.ended) this.end()\r\n\r\n    this.connected = false\r\n\r\n    clearInterval(this._interval)\r\n    this._interval = null\r\n    this._chunk = null\r\n    this._cb = null\r\n\r\n    if (this._handleFinishBound) {\r\n      this.removeListener('finish', this._handleFinishBound)\r\n    }\r\n    this._handleFinishBound = null\r\n\r\n    if (this._ws) {\r\n      const ws = this._ws\r\n      const onClose = () => {\r\n        ws.onclose = null\r\n      }\r\n      if (ws.readyState === _WebSocket.CLOSED) {\r\n        onClose()\r\n      } else {\r\n        try {\r\n          ws.onclose = onClose\r\n          ws.close()\r\n        } catch (err) {\r\n          onClose()\r\n        }\r\n      }\r\n\r\n      ws.onopen = null\r\n      ws.onmessage = null\r\n      ws.onerror = () => {}\r\n    }\r\n    this._ws = null\r\n\r\n    cb()\r\n  }\r\n\r\n  _write (chunk, cb) {\r\n    if (this.destroyed) return cb(new Error('cannot write after socket is destroyed'))\r\n\r\n    if (this.connected) {\r\n      try {\r\n        this.send(chunk)\r\n      } catch (err) {\r\n        return this.destroy(err)\r\n      }\r\n      if (typeof ws !== 'function' && this._ws.bufferedAmount > MAX_BUFFERED_AMOUNT) {\r\n        this._debug('start backpressure: bufferedAmount %d', this._ws.bufferedAmount)\r\n        this._cb = cb\r\n      } else {\r\n        cb(null)\r\n      }\r\n    } else {\r\n      this._debug('write before connect')\r\n      this._chunk = chunk\r\n      this._cb = cb\r\n    }\r\n  }\r\n\r\n  _handleOpen () {\r\n    if (this.connected || this.destroyed) return\r\n    this.connected = true\r\n\r\n    if (this._chunk) {\r\n      try {\r\n        this.send(this._chunk)\r\n      } catch (err) {\r\n        return this.destroy(err)\r\n      }\r\n      this._chunk = null\r\n      this._debug('sent chunk from \"write before connect\"')\r\n\r\n      const cb = this._cb\r\n      this._cb = null\r\n      cb(null)\r\n    }\r\n\r\n    // Backpressure is not implemented in Node.js. The `ws` module has a buggy\r\n    // `bufferedAmount` property. See: https://github.com/websockets/ws/issues/492\r\n    if (typeof ws !== 'function') {\r\n      this._interval = setInterval(() => this._onInterval(), 150)\r\n      if (this._interval.unref) this._interval.unref()\r\n    }\r\n\r\n    this._debug('connect')\r\n    this.emit('connect')\r\n  }\r\n\r\n  _handleMessage (event) {\r\n    if (this.destroyed) return\r\n    let data = event.data\r\n    if (data instanceof ArrayBuffer) data = new Uint8Array(data)\r\n    if (this.__objectMode === false) data = text2arr(data)\r\n    this.push(data)\r\n  }\r\n\r\n  _handleClose () {\r\n    if (this.destroyed) return\r\n    this._debug('on close')\r\n    this.destroy()\r\n  }\r\n\r\n  _handleError (_) {\r\n    this.destroy(new Error(`Error connecting to ${this.url}`))\r\n  }\r\n\r\n  // When stream finishes writing, close socket. Half open connections are not\r\n  // supported.\r\n  _handleFinish () {\r\n    if (this.destroyed) return\r\n\r\n    // Wait a bit before destroying so the socket flushes.\r\n    // TODO: is there a more reliable way to accomplish this?\r\n    const destroySoon = () => {\r\n      setTimeout(() => this.destroy(), 1000)\r\n    }\r\n\r\n    if (this.connected) {\r\n      destroySoon()\r\n    } else {\r\n      this.once('connect', destroySoon)\r\n    }\r\n  }\r\n\r\n  _onInterval () {\r\n    if (!this._cb || !this._ws || this._ws.bufferedAmount > MAX_BUFFERED_AMOUNT) {\r\n      return\r\n    }\r\n    this._debug('ending backpressure: bufferedAmount %d', this._ws.bufferedAmount)\r\n    const cb = this._cb\r\n    this._cb = null\r\n    cb(null)\r\n  }\r\n\r\n  _debug () {\r\n    const args = [].slice.call(arguments)\r\n    args[0] = '[' + this._id + '] ' + args[0]\r\n    debug.apply(null, args)\r\n  }\r\n}\r\n\r\nSocket.WEBSOCKET_SUPPORT = !!_WebSocket\r\n", "import EventEmitter from 'events'\n\nclass Tracker extends EventEmitter {\n  constructor (client, announceUrl) {\n    super()\n\n    this.client = client\n    this.announceUrl = announceUrl\n\n    this.interval = null\n    this.destroyed = false\n  }\n\n  setInterval (intervalMs) {\n    if (intervalMs == null) intervalMs = this.DEFAULT_ANNOUNCE_INTERVAL\n\n    clearInterval(this.interval)\n\n    if (intervalMs) {\n      this.interval = setInterval(() => {\n        this.announce(this.client._defaultAnnounceOpts())\n      }, intervalMs)\n      if (this.interval.unref) this.interval.unref()\n    }\n  }\n}\n\nexport default Tracker\n", "/*! bittorrent-tracker. MIT License. WebTorrent LLC <https://webtorrent.io/opensource> */\nimport Client from './client.js'\nimport Server from './server.js'\n\nexport default Client\nexport { Client, Server }\n", "/* eslint-disable no-control-regex */\n\nexport default function filenameReservedRegex() {\n\treturn /[<>:\"/\\\\|?*\\u0000-\\u001F]/g;\n}\n\nexport function windowsReservedNameRegex() {\n\treturn /^(con|prn|aux|nul|com\\d|lpt\\d)$/i;\n}\n", "const INVALID = ['seeking position failed.', 'InvalidStateError']\r\nconst GONE = ['A requested file or directory could not be found at the time an operation was processed.', 'NotFoundError']\r\nconst SYNTAX = m => [`Failed to execute 'write' on 'UnderlyingSinkBase': Invalid params passed. ${m}`, 'SyntaxError']\r\n\r\nclass _FileSystemWritableFileStream extends WritableStream {\r\n  constructor (writer) {\r\n    super(writer)\r\n    // Stupid Safari hack to extend native classes\r\n    // https://bugs.webkit.org/show_bug.cgi?id=226201\r\n    Object.setPrototypeOf(this, FileSystemWritableFileStream.prototype)\r\n\r\n    /** @private */\r\n    this._closed = false\r\n  }\r\n\r\n  async close () {\r\n    this._closed = true\r\n    const w = this.getWriter()\r\n    const p = w.close()\r\n    w.releaseLock()\r\n    return p\r\n    // return super.close ? super.close() : this.getWriter().close()\r\n  }\r\n\r\n  /** @param {number} position */\r\n  seek (position) {\r\n    return this.write({ type: 'seek', position })\r\n  }\r\n\r\n  /** @param {number} size */\r\n  truncate (size) {\r\n    return this.write({ type: 'truncate', size })\r\n  }\r\n\r\n  // The write(data) method steps are:\r\n  write (data) {\r\n    if (this._closed) {\r\n      return Promise.reject(new TypeError('Cannot write to a CLOSED writable stream'))\r\n    }\r\n\r\n    // 1. Let writer be the result of getting a writer for this.\r\n    const writer = this.getWriter()\r\n\r\n    // 2. Let result be the result of writing a chunk to writer given data.\r\n    const result = writer.write(data)\r\n\r\n    // 3. Release writer.\r\n    writer.releaseLock()\r\n\r\n    // 4. Return result.\r\n    return result\r\n  }\r\n}\r\n\r\nObject.defineProperty(_FileSystemWritableFileStream.prototype, Symbol.toStringTag, {\r\n  value: 'FileSystemWritableFileStream',\r\n  writable: false,\r\n  enumerable: false,\r\n  configurable: true\r\n})\r\n\r\nObject.defineProperties(_FileSystemWritableFileStream.prototype, {\r\n  close: { enumerable: true },\r\n  seek: { enumerable: true },\r\n  truncate: { enumerable: true },\r\n  write: { enumerable: true }\r\n})\r\n\r\n// Safari safari doesn't support writable streams yet.\r\nif (\r\n  globalThis.FileSystemFileHandle &&\r\n  !globalThis.FileSystemFileHandle.prototype.createWritable &&\r\n  !globalThis.FileSystemWritableFileStream\r\n) {\r\n  globalThis.FileSystemWritableFileStream = _FileSystemWritableFileStream\r\n}\r\n\r\n// Safari doesn't support async createWritable streams yet.\r\nif (\r\n  globalThis.FileSystemFileHandle &&\r\n  !globalThis.FileSystemFileHandle.prototype.createWritable\r\n) {\r\n  const wm = new WeakMap()\r\n\r\n  let workerUrl\r\n\r\n  // Worker code that should be inlined (can't use any external functions)\r\n  const code = () => {\r\n    let fileHandle, handle\r\n\r\n    onmessage = async evt => {\r\n      const port = evt.ports[0]\r\n      const cmd = evt.data\r\n      switch (cmd.type) {\r\n        case 'open': {\r\n          const file = cmd.name\r\n\r\n          let dir = await navigator.storage.getDirectory()\r\n\r\n          for (const folder of cmd.path) {\r\n            dir = await dir.getDirectoryHandle(folder)\r\n          }\r\n\r\n          fileHandle = await dir.getFileHandle(file)\r\n          // @ts-ignore\r\n          handle = await fileHandle.createSyncAccessHandle()\r\n          break\r\n        }\r\n        case 'write':\r\n          handle.write(cmd.data, { at: cmd.position })\r\n          handle.flush()\r\n          break\r\n        case 'truncate':\r\n          handle.truncate(cmd.size)\r\n          break\r\n        case 'abort':\r\n        case 'close':\r\n          handle.close()\r\n          break\r\n      }\r\n\r\n      port.postMessage(0)\r\n    }\r\n  }\r\n\r\n  globalThis.FileSystemFileHandle.prototype.createWritable = async function (options) {\r\n    // Safari only support writing data in a worker with sync access handle.\r\n    if (!workerUrl) {\r\n      const stringCode = `(${code.toString()})()`\r\n      const blob = new Blob([stringCode], {\r\n        type: 'text/javascript'\r\n      })\r\n      workerUrl = URL.createObjectURL(blob)\r\n    }\r\n    const worker = new Worker(workerUrl, { type: 'module' })\r\n\r\n    let position = 0\r\n    const textEncoder = new TextEncoder()\r\n    let size = await this.getFile().then(file => file.size)\r\n\r\n    const send = message => new Promise((resolve, reject) => {\r\n      const mc = new MessageChannel()\r\n      mc.port1.onmessage = evt => {\r\n        if (evt.data instanceof Error) reject(evt.data)\r\n        else resolve(evt.data)\r\n        mc.port1.close()\r\n        mc.port2.close()\r\n        mc.port1.onmessage = null\r\n      }\r\n      worker.postMessage(message, [mc.port2])\r\n    })\r\n\r\n    // Safari also don't support transferable file system handles.\r\n    // So we need to pass the path to the worker. This is a bit hacky and ugly.\r\n    const root = await navigator.storage.getDirectory()\r\n    const parent = await wm.get(this)\r\n    const path = await root.resolve(parent)\r\n\r\n    // Should likely never happen, but just in case...\r\n    if (path === null) throw new DOMException(...GONE)\r\n\r\n    await send({ type: 'open', path, name: this.name })\r\n\r\n    if (options?.keepExistingData === false) {\r\n      await send({ type: 'truncate', size: 0 })\r\n      size = 0\r\n    }\r\n\r\n    return new _FileSystemWritableFileStream({\r\n      async write (chunk) {\r\n        const isPlainObject = chunk?.constructor === Object\r\n\r\n        if (isPlainObject) {\r\n          chunk = { ...chunk }\r\n        } else {\r\n          chunk = { type: 'write', data: chunk, position }\r\n        }\r\n\r\n        if (chunk.type === 'write') {\r\n          if (!('data' in chunk)) {\r\n            await send({ type: 'close' })\r\n            throw new DOMException(...SYNTAX('write requires a data argument'))\r\n          }\r\n\r\n          chunk.position ??= position\r\n\r\n          if (typeof chunk.data === 'string') {\r\n            chunk.data = textEncoder.encode(chunk.data)\r\n          } else if (chunk.data instanceof ArrayBuffer) {\r\n            chunk.data = new Uint8Array(chunk.data)\r\n          } else if (!(chunk.data instanceof Uint8Array) && ArrayBuffer.isView(chunk.data)) {\r\n            chunk.data = new Uint8Array(chunk.data.buffer, chunk.data.byteOffset, chunk.data.byteLength)\r\n          } else if (!(chunk.data instanceof Uint8Array)) {\r\n            const ab = await new Response(chunk.data).arrayBuffer()\r\n            chunk.data = new Uint8Array(ab)\r\n          }\r\n\r\n          if (Number.isInteger(chunk.position) && chunk.position >= 0) {\r\n            position = chunk.position\r\n          }\r\n          position += chunk.data.byteLength\r\n          size += chunk.data.byteLength\r\n        } else if (chunk.type === 'seek') {\r\n          if (Number.isInteger(chunk.position) && chunk.position >= 0) {\r\n            if (size < chunk.position) {\r\n              throw new DOMException(...INVALID)\r\n            }\r\n            position = chunk.position\r\n            return // Don't need to enqueue seek...\r\n          } else {\r\n            await send({ type: 'close' })\r\n            throw new DOMException(...SYNTAX('seek requires a position argument'))\r\n          }\r\n        } else if (chunk.type === 'truncate') {\r\n          if (Number.isInteger(chunk.size) && chunk.size >= 0) {\r\n            size = chunk.size\r\n            if (position > size) { position = size }\r\n          } else {\r\n            await send({ type: 'close' })\r\n            throw new DOMException(...SYNTAX('truncate requires a size argument'))\r\n          }\r\n        }\r\n\r\n        await send(chunk)\r\n      },\r\n      async close () {\r\n        await send({ type: 'close' })\r\n        worker.terminate()\r\n      },\r\n      async abort (reason) {\r\n        await send({ type: 'abort', reason })\r\n        worker.terminate()\r\n      }\r\n    })\r\n  }\r\n\r\n  const orig = FileSystemDirectoryHandle.prototype.getFileHandle\r\n  FileSystemDirectoryHandle.prototype.getFileHandle = async function (...args) {\r\n    const handle = await orig.call(this, ...args)\r\n    wm.set(handle, this)\r\n    return handle\r\n  }\r\n}\r\n", "import getFileRegex from 'filename-reserved-regex'\r\nimport './createWritable.js'\r\n\r\nconst RESERVED_FILENAME_REGEX = getFileRegex()\r\n\r\n// this can be bad when multiple instances of this app are running\r\nif (globalThis.navigator?.storage?.getDirectory) {\r\n  navigator.storage.getDirectory().then(storageDir => {\r\n    storageDir.removeEntry('chunks', { recursive: true }).catch(() => {})\r\n  })\r\n}\r\n\r\nconst noop = (_, __) => {}\r\nconst err = (cb = noop, err) => queueMicrotask(() => cb(new Error(err)))\r\nexport default class FSAChunkStore {\r\n  name = ''\r\n\r\n  chunks = [] // individual chunks, required for reads :/\r\n  chunkMap = [] // full files\r\n  directoryMap = {}\r\n  files\r\n\r\n  rootDirPromise\r\n  storageDirPromise\r\n  chunksDirPromise\r\n\r\n  closing = false\r\n  closed = false\r\n\r\n  /**\r\n   * @param {number} chunkLength\r\n   * @param {{ name?: string, rootDir?: Promise<FileSystemDirectoryHandle>, length?: number, files?: {path: string, length: number, offset?: number, handle?: Promise<FileSystemFileHandle>, blob?: Promise<Blob>, stream?: Promise<FileSystemWritableFileStream> }[] }} [opts]\r\n   */\r\n  constructor (chunkLength, opts = {}) {\r\n    this.chunkLength = Number(chunkLength)\r\n\r\n    if (!this.chunkLength) {\r\n      throw new Error('First argument must be a chunk length')\r\n    }\r\n\r\n    if (!globalThis.navigator?.storage?.getDirectory) {\r\n      throw new Error('FSA API is not supported')\r\n    }\r\n\r\n    this.closed = false\r\n\r\n    this.name = opts.name || crypto.randomUUID()\r\n\r\n    this.rootDirPromise = opts.rootDir || navigator.storage.getDirectory()\r\n    this.storageDirPromise = (async () => {\r\n      const rootDir = await this.rootDirPromise\r\n      return rootDir.getDirectoryHandle(this.name, { create: true })\r\n    })()\r\n    // if there are no files the chunks are the storage\r\n    this.chunksDirPromise = this.storageDirPromise\r\n\r\n    if (opts.files && opts.rootDir) {\r\n      // if files exist, use throwaway, wipeable folder for chunks which are a cache\r\n      this.chunksDirPromise = this._getChunksDirHandle()\r\n      this.files = opts.files.map((file, i, files) => {\r\n        if (file.path == null) throw new Error('File is missing `path` property')\r\n        if (file.length == null) throw new Error('File is missing `length` property')\r\n        if (file.offset == null) {\r\n          if (i === 0) {\r\n            file.offset = 0\r\n          } else {\r\n            const prevFile = files[i - 1]\r\n            file.offset = prevFile.offset + prevFile.length\r\n          }\r\n        }\r\n\r\n        // file handles\r\n        if (file.handle == null) file.handle = this._createFileHandle({ path: file.path })\r\n        file.blob = this._createBlobReference(file.handle)\r\n\r\n        // file chunkMap\r\n        const fileStart = file.offset\r\n        const fileEnd = file.offset + file.length\r\n\r\n        const firstChunk = Math.floor(fileStart / this.chunkLength)\r\n        const lastChunk = Math.floor((fileEnd - 1) / this.chunkLength)\r\n\r\n        for (let i = firstChunk; i <= lastChunk; ++i) {\r\n          const chunkStart = i * this.chunkLength\r\n          const chunkEnd = chunkStart + this.chunkLength\r\n\r\n          const from = (fileStart < chunkStart) ? 0 : fileStart - chunkStart\r\n          const to = (fileEnd > chunkEnd) ? this.chunkLength : fileEnd - chunkStart\r\n          const offset = (fileStart > chunkStart) ? 0 : chunkStart - fileStart\r\n\r\n          if (!this.chunkMap[i]) this.chunkMap[i] = []\r\n\r\n          this.chunkMap[i].push({ from, to, offset, file })\r\n        }\r\n\r\n        return file\r\n      })\r\n\r\n      // close streams is page is frozen/unloaded, they will re-open if the user returns via BFC\r\n      window.addEventListener('pagehide', () => this.cleanup())\r\n\r\n      this.length = this.files.reduce((sum, file) => sum + file.length, 0)\r\n      if (opts.length != null && opts.length !== this.length) {\r\n        throw new Error('total `files` length is not equal to explicit `length` option')\r\n      }\r\n    } else {\r\n      this.length = Number(opts.length) || Infinity\r\n    }\r\n\r\n    if (this.length !== Infinity) {\r\n      this.lastChunkLength = this.length % this.chunkLength || this.chunkLength\r\n      this.lastChunkIndex = Math.ceil(this.length / this.chunkLength) - 1\r\n    }\r\n  }\r\n\r\n  async _getChunkHandle (index) {\r\n    let chunk = this.chunks[index]\r\n    if (!chunk) {\r\n      const storageDir = await this.chunksDirPromise\r\n      this.chunks[index] = chunk = await storageDir.getFileHandle(index, { create: true })\r\n    }\r\n    return chunk\r\n  }\r\n\r\n  /**\r\n   * @param {{path: string}} opts\r\n   */\r\n  async _createFileHandle (opts) {\r\n    const fileName = opts.path.slice(opts.path.lastIndexOf('/') + 1)\r\n    return (await this._getDirectoryHandle(opts)).getFileHandle(fileName.replace(RESERVED_FILENAME_REGEX, ''), { create: true })\r\n  }\r\n\r\n  async _createBlobReference (handle) {\r\n    return (await handle).getFile()\r\n  }\r\n\r\n  /**\r\n   * recursive, equiv of cd and mkdirp\r\n   * @param {{path: string}} opts\r\n   * @returns {Promise<FileSystemDirectoryHandle>}\r\n   */\r\n  async _getDirectoryHandle (opts) {\r\n    const lastIndex = opts.path.lastIndexOf('/')\r\n    if (lastIndex === -1 || lastIndex === 0) return this.storageDirPromise\r\n    const path = opts.path = opts.path.slice(0, lastIndex)\r\n    if (!this.directoryMap[path]) {\r\n      this.directoryMap[path] = (async () => {\r\n        const parent = await this._getDirectoryHandle(opts)\r\n        return parent.getDirectoryHandle(path.slice(path.lastIndexOf('/') + 1), { create: true })\r\n      })()\r\n    }\r\n    return this.directoryMap[path]\r\n  }\r\n\r\n  async _getChunksDirHandle () {\r\n    const storageDir = await navigator.storage.getDirectory()\r\n    const chunksDir = await storageDir.getDirectoryHandle('chunks', { create: true })\r\n    return chunksDir.getDirectoryHandle(this.name, { create: true })\r\n  }\r\n\r\n  async put (index, buf, cb = noop) {\r\n    try {\r\n      await this._put(index, buf)\r\n      cb(null)\r\n      return null\r\n    } catch (e) {\r\n      queueMicrotask(() => cb(e))\r\n      return e\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Promise<FileSystemFileHandle>} handle\r\n   */\r\n  async getStreamForHandle (handle) {\r\n    return (await handle).createWritable({ keepExistingData: true })\r\n  }\r\n\r\n  // wrapped in prep for callback drop\r\n  async _put (index, buf) {\r\n    if (this.closed) throw new Error('Storage is closed')\r\n\r\n    const isLastChunk = index === this.lastChunkIndex\r\n    if (isLastChunk && buf.length !== this.lastChunkLength) throw new Error(`Last chunk length must be ${this.lastChunkLength}`)\r\n    if (!isLastChunk && buf.length !== this.chunkLength) throw new Error(`Chunk length must be ${this.chunkLength}`)\r\n\r\n    const chunkWrite = (async () => {\r\n      const chunk = await this._getChunkHandle(index)\r\n      const stream = await chunk.createWritable({ keepExistingData: false })\r\n      await stream.write(buf)\r\n      await stream.close()\r\n    })()\r\n\r\n    if (!this.files) return chunkWrite\r\n\r\n    const targets = this.chunkMap[index]\r\n    if (!targets) throw new Error('No files matching the request range')\r\n    const promises = targets.map(async ({ file, offset, from, to }) => {\r\n      if (!file.stream) {\r\n        file.stream = this.getStreamForHandle(file.handle)\r\n      }\r\n      await (await file.stream).write({ type: 'write', position: offset, data: buf.slice(from, to) })\r\n    })\r\n    promises.push(chunkWrite)\r\n    await Promise.all(promises)\r\n  }\r\n\r\n  async get (index, opts, cb = noop) {\r\n    if (opts == null) opts = {}\r\n    try {\r\n      const data = await this._get(index, opts)\r\n      cb(null, data)\r\n      return data\r\n    } catch (e) {\r\n      cb(e)\r\n      return e\r\n    }\r\n  }\r\n\r\n  // wrapped in prep for callback drop\r\n  async _get (index, opts) {\r\n    if (typeof opts === 'function') return this.get(index, undefined, opts)\r\n    if (this.closed) throw new Error('Storage is closed')\r\n\r\n    const isLastChunk = index === this.lastChunkIndex\r\n    const chunkLength = isLastChunk ? /** @type {number} */(this.lastChunkLength) : this.chunkLength\r\n\r\n    const rangeFrom = opts.offset || 0\r\n    const rangeTo = opts.length ? rangeFrom + opts.length : chunkLength\r\n    const len = opts.length || chunkLength - rangeFrom\r\n\r\n    if (rangeFrom < 0 || rangeFrom < 0 || rangeTo > chunkLength) throw new Error('Invalid offset and/or length')\r\n\r\n    if (rangeFrom === rangeTo) return new Uint8Array(0)\r\n\r\n    if (!this.files || this.chunks[index]) {\r\n      const chunk = await this._getChunkHandle(index)\r\n      let file = await chunk.getFile()\r\n      if (rangeFrom !== 0 || len !== chunkLength) {\r\n        file = file.slice(rangeFrom, len + rangeFrom)\r\n      }\r\n      const buf = await file.arrayBuffer()\r\n\r\n      if (buf.byteLength === 0) throw new Error(`Index ${index} does not exist`)\r\n      return new Uint8Array(buf)\r\n    }\r\n\r\n    // if chunk was GC'ed\r\n    let targets = this.chunkMap[index]\r\n    if (!targets) throw new Error('No files matching the request range')\r\n    if (opts) {\r\n      targets = targets.filter(({ from, to }) => to > rangeFrom && from < rangeTo)\r\n      if (targets.length === 0) throw new Error('No files matching the request range')\r\n    }\r\n\r\n    const promises = targets.map(async ({ from, to, offset, file }) => {\r\n      if (opts) {\r\n        if (to > rangeTo) to = rangeTo\r\n        if (from < rangeFrom) {\r\n          offset += (rangeFrom - from)\r\n          from = rangeFrom\r\n        }\r\n      }\r\n      const blob = await file.blob\r\n      return blob.slice(offset, offset + to - from)\r\n    })\r\n    const values = await Promise.all(promises)\r\n    const buf = values.length === 1 ? await values[0].arrayBuffer() : await new Blob(values).arrayBuffer()\r\n    if (buf.byteLength === 0) throw new Error(`Index ${index} does not exist`)\r\n    return new Uint8Array(buf)\r\n  }\r\n\r\n  async close (cb = noop) {\r\n    if (this.closing) return err(cb, 'Storage is closed')\r\n\r\n    this.closing = true\r\n    this.chunkMap = undefined\r\n    this.directoryMap = undefined\r\n    if (this.files) await this.cleanup()\r\n    this.closed = true\r\n    queueMicrotask(() => cb(null))\r\n  }\r\n\r\n  async cleanup () {\r\n    if (this.closed || !this.files) return\r\n    const streams = []\r\n    for (const file of this.files) {\r\n      if (file.stream) {\r\n        streams.push(file.stream.then(stream => stream.close()))\r\n        file.stream = undefined\r\n      }\r\n    }\r\n    const clearChunks = (async () => {\r\n      const storageDir = await this.chunksDirPromise\r\n      this.chunks = []\r\n      // .remove() doesnt exist on firefox or safari\r\n      for await (const key of storageDir.keys()) {\r\n        await storageDir.removeEntry(key, { recursive: true })\r\n      }\r\n      this.chunksDirPromise = this._getChunksDirHandle()\r\n      await this.chunksDirPromise\r\n    })()\r\n    await Promise.all(streams)\r\n    for (const file of this.files) {\r\n      file.blob = this._createBlobReference(file.handle)\r\n    }\r\n    await clearChunks\r\n  }\r\n\r\n  async destroy (cb = noop) {\r\n    this.close(async (err) => {\r\n      if (err) return cb(err)\r\n      try {\r\n        const rootDir = await this.rootDirPromise\r\n        // .remove() doesnt exist on firefox or safari\r\n        await rootDir.removeEntry(this.name, { recursive: true })\r\n      } catch (err) {\r\n        return cb(err)\r\n      }\r\n      cb(null)\r\n    })\r\n  }\r\n}\r\n", "/*! lt_donthave. MIT License. WebTorrent LLC <https://webtorrent.io/opensource> */\nimport arrayRemove from 'unordered-array-remove'\nimport { EventEmitter } from 'events'\nimport debugFactory from 'debug'\n\nconst debug = debugFactory('lt_donthave')\n\nexport default () => {\n  class ltDontHave extends EventEmitter {\n    constructor (wire) {\n      super()\n\n      this._peerSupports = false\n      this._wire = wire\n    }\n\n    onExtendedHandshake () {\n      this._peerSupports = true\n    }\n\n    onMessage (buf) {\n      let index\n      try {\n        const view = new DataView(buf.buffer)\n        index = view.getUint32(0)\n      } catch (err) {\n        // drop invalid messages\n        return\n      }\n\n      if (!this._wire.peerPieces.get(index)) return\n      debug('got donthave %d', index)\n      this._wire.peerPieces.set(index, false)\n\n      this.emit('donthave', index)\n      this._failRequests(index)\n    }\n\n    donthave (index) {\n      if (!this._peerSupports) return\n\n      debug('donthave %d', index)\n      const buf = new Uint8Array(4)\n      const view = new DataView(buf.buffer)\n      view.setUint32(0, index)\n\n      this._wire.extended('lt_donthave', buf)\n    }\n\n    _failRequests (index) {\n      const requests = this._wire.requests\n      for (let i = 0; i < requests.length; i++) {\n        const req = requests[i]\n        if (req.piece === index) {\n          arrayRemove(requests, i)\n          i -= 1 // Check the new value at the same slot\n          this._wire._callback(req, new Error('peer sent donthave'), null)\n        }\n      }\n    }\n  }\n\n  // Name of the bittorrent-protocol extension\n  ltDontHave.prototype.name = 'lt_donthave'\n\n  return ltDontHave\n}\n", "/*! torrent-piece. MIT License. WebTorrent LLC <https://webtorrent.io/opensource> */\nimport { concat } from 'uint8-util'\n\nconst BLOCK_LENGTH = 1 << 14\n\nexport default class Piece {\n  constructor (length) {\n    this.length = length\n    this.missing = length\n    this.sources = null\n\n    this._chunks = Math.ceil(length / BLOCK_LENGTH)\n    this._remainder = (length % BLOCK_LENGTH) || BLOCK_LENGTH\n    this._buffered = 0\n    this._buffer = null\n    this._cancellations = null\n    this._reservations = 0\n    this._flushed = false\n  }\n\n  chunkLength (i) {\n    return i === this._chunks - 1 ? this._remainder : BLOCK_LENGTH\n  }\n\n  chunkLengthRemaining (i) {\n    return this.length - (i * BLOCK_LENGTH)\n  }\n\n  chunkOffset (i) {\n    return i * BLOCK_LENGTH\n  }\n\n  reserve () {\n    if (!this.init()) return -1\n    if (this._cancellations.length) return this._cancellations.pop()\n    if (this._reservations < this._chunks) return this._reservations++\n    return -1\n  }\n\n  reserveRemaining () {\n    if (!this.init()) return -1\n    if (this._cancellations.length || this._reservations < this._chunks) {\n      let min = this._reservations\n      while (this._cancellations.length) {\n        min = Math.min(min, this._cancellations.pop())\n      }\n      this._reservations = this._chunks\n      return min\n    }\n    return -1\n  }\n\n  cancel (i) {\n    if (!this.init()) return\n    this._cancellations.push(i)\n  }\n\n  cancelRemaining (i) {\n    if (!this.init()) return\n    this._reservations = i\n  }\n\n  get (i) {\n    if (!this.init()) return null\n    return this._buffer[i]\n  }\n\n  set (i, data, source) {\n    if (!this.init()) return false\n    const len = data.length\n    const blocks = Math.ceil(len / BLOCK_LENGTH)\n    for (let j = 0; j < blocks; j++) {\n      if (!this._buffer[i + j]) {\n        const offset = j * BLOCK_LENGTH\n        const splitData = data.slice(offset, offset + BLOCK_LENGTH)\n        this._buffered++\n        this._buffer[i + j] = splitData\n        this.missing -= splitData.length\n        if (!this.sources.includes(source)) {\n          this.sources.push(source)\n        }\n      }\n    }\n    return this._buffered === this._chunks\n  }\n\n  flush () {\n    if (!this._buffer || this._chunks !== this._buffered) return null\n    const buffer = concat(this._buffer, this.length)\n    this._buffer = null\n    this._cancellations = null\n    this.sources = null\n    this._flushed = true\n    return buffer\n  }\n\n  init () {\n    if (this._flushed) return false\n    if (this._buffer) return true\n    this._buffer = new Array(this._chunks)\n    this._cancellations = []\n    this.sources = []\n    return true\n  }\n}\n\nPiece.BLOCK_LENGTH = BLOCK_LENGTH\n", "/*! ut_metadata. MIT License. WebTorrent LLC <https://webtorrent.io/opensource> */\nimport { EventEmitter } from 'events'\nimport bencode from 'bencode'\nimport BitField from 'bitfield'\nimport Debug from 'debug'\nimport { hash, arr2text, concat } from 'uint8-util'\n\nconst debug = Debug('ut_metadata')\n\nconst MAX_METADATA_SIZE = 1E7 // 10 MB\nconst BITFIELD_GROW = 1E3\nconst PIECE_LENGTH = 1 << 14 // 16 KiB\n\nexport default metadata => {\n  class utMetadata extends EventEmitter {\n    constructor (wire) {\n      super()\n\n      this._wire = wire\n\n      this._fetching = false\n      this._metadataComplete = false\n      this._metadataSize = null\n      // how many reject messages to tolerate before quitting\n      this._remainingRejects = null\n\n      // The largest torrent file that I know of is ~1-2MB, which is ~100\n      // pieces. Therefore, cap the bitfield to 10x that (1000 pieces) so a\n      // malicious peer can't make it grow to fill all memory.\n      this._bitfield = new BitField(0, { grow: BITFIELD_GROW })\n\n      if (ArrayBuffer.isView(metadata)) {\n        this.setMetadata(metadata)\n      }\n    }\n\n    onHandshake (infoHash, peerId, extensions) {\n      this._infoHash = infoHash\n    }\n\n    onExtendedHandshake (handshake) {\n      if (!handshake.m || !handshake.m.ut_metadata) {\n        return this.emit('warning', new Error('Peer does not support ut_metadata'))\n      }\n      if (!handshake.metadata_size) {\n        return this.emit('warning', new Error('Peer does not have metadata'))\n      }\n      if (typeof handshake.metadata_size !== 'number' ||\n          MAX_METADATA_SIZE < handshake.metadata_size ||\n          handshake.metadata_size <= 0) {\n        return this.emit('warning', new Error('Peer gave invalid metadata size'))\n      }\n\n      this._metadataSize = handshake.metadata_size\n      this._numPieces = Math.ceil(this._metadataSize / PIECE_LENGTH)\n      this._remainingRejects = this._numPieces * 2\n\n      this._requestPieces()\n    }\n\n    onMessage (buf) {\n      let dict\n      let trailer\n      try {\n        const str = arr2text(buf)\n        const trailerIndex = str.indexOf('ee') + 2\n        dict = bencode.decode(str.substring(0, trailerIndex))\n        trailer = buf.slice(trailerIndex)\n      } catch (err) {\n        // drop invalid messages\n        return\n      }\n\n      switch (dict.msg_type) {\n        case 0:\n          // ut_metadata request (from peer)\n          // example: { 'msg_type': 0, 'piece': 0 }\n          this._onRequest(dict.piece)\n          break\n        case 1:\n          // ut_metadata data (in response to our request)\n          // example: { 'msg_type': 1, 'piece': 0, 'total_size': 3425 }\n          this._onData(dict.piece, trailer, dict.total_size)\n          break\n        case 2:\n          // ut_metadata reject (peer doesn't have piece we requested)\n          // { 'msg_type': 2, 'piece': 0 }\n          this._onReject(dict.piece)\n          break\n      }\n    }\n\n    /**\n     * Ask the peer to send metadata.\n     * @public\n     */\n    fetch () {\n      if (this._metadataComplete) {\n        return\n      }\n      this._fetching = true\n      if (this._metadataSize) {\n        this._requestPieces()\n      }\n    }\n\n    /**\n     * Stop asking the peer to send metadata.\n     * @public\n     */\n    cancel () {\n      this._fetching = false\n    }\n\n    async setMetadata (metadata) {\n      if (this._metadataComplete) return true\n      debug('set metadata')\n\n      // if full torrent dictionary was passed in, pull out just `info` key\n      try {\n        const info = bencode.decode(metadata).info\n        if (info) {\n          metadata = bencode.encode(info)\n        }\n      } catch (err) {}\n\n      // check hash\n      if (this._infoHash && this._infoHash !== await hash(metadata, 'hex')) {\n        return false\n      }\n\n      this.cancel()\n\n      this.metadata = metadata\n      this._metadataComplete = true\n      this._metadataSize = this.metadata.length\n      this._wire.extendedHandshake.metadata_size = this._metadataSize\n\n      this.emit('metadata', bencode.encode({\n        info: bencode.decode(this.metadata)\n      }))\n\n      return true\n    }\n\n    _send (dict, trailer) {\n      let buf = bencode.encode(dict)\n      if (ArrayBuffer.isView(trailer)) {\n        buf = concat([buf, trailer])\n      }\n      this._wire.extended('ut_metadata', buf)\n    }\n\n    _request (piece) {\n      this._send({ msg_type: 0, piece })\n    }\n\n    _data (piece, buf, totalSize) {\n      const msg = { msg_type: 1, piece }\n      if (typeof totalSize === 'number') {\n        msg.total_size = totalSize\n      }\n      this._send(msg, buf)\n    }\n\n    _reject (piece) {\n      this._send({ msg_type: 2, piece })\n    }\n\n    _onRequest (piece) {\n      if (!this._metadataComplete) {\n        this._reject(piece)\n        return\n      }\n      const start = piece * PIECE_LENGTH\n      let end = start + PIECE_LENGTH\n      if (end > this._metadataSize) {\n        end = this._metadataSize\n      }\n      const buf = this.metadata.slice(start, end)\n      this._data(piece, buf, this._metadataSize)\n    }\n\n    _onData (piece, buf, totalSize) {\n      if (buf.length > PIECE_LENGTH || !this._fetching) {\n        return\n      }\n      this.metadata.set(buf, piece * PIECE_LENGTH)\n      this._bitfield.set(piece)\n      this._checkDone()\n    }\n\n    _onReject (piece) {\n      if (this._remainingRejects > 0 && this._fetching) {\n        // If we haven't been rejected too much,\n        // then try to request the piece again\n        this._request(piece)\n        this._remainingRejects -= 1\n      } else {\n        this.emit('warning', new Error('Peer sent \"reject\" too much'))\n      }\n    }\n\n    _requestPieces () {\n      if (!this._fetching) return\n      this.metadata = new Uint8Array(this._metadataSize)\n      for (let piece = 0; piece < this._numPieces; piece++) {\n        this._request(piece)\n      }\n    }\n\n    async _checkDone () {\n      let done = true\n      for (let piece = 0; piece < this._numPieces; piece++) {\n        if (!this._bitfield.get(piece)) {\n          done = false\n          break\n        }\n      }\n      if (!done) return\n\n      // attempt to set metadata -- may fail sha1 check\n      const success = await this.setMetadata(this.metadata)\n\n      if (!success) {\n        this._failedMetadata()\n      }\n    }\n\n    _failedMetadata () {\n      // reset bitfield & try again\n      this._bitfield = new BitField(0, { grow: BITFIELD_GROW })\n      this._remainingRejects -= this._numPieces\n      if (this._remainingRejects > 0) {\n        this._requestPieces()\n      } else {\n        this.emit('warning', new Error('Peer sent invalid metadata'))\n      }\n    }\n  }\n\n  // Name of the bittorrent-protocol extension\n  utMetadata.prototype.name = 'ut_metadata'\n\n  return utMetadata\n}\n", "import EventEmitter from 'events'\nimport { Readable } from 'streamx'\nimport { chunkStoreRead } from 'chunk-store-iterator'\nimport mime from 'mime/lite.js'\nimport FileIterator from './file-iterator.js'\n\nexport default class File extends EventEmitter {\n  constructor (torrent, file) {\n    super()\n\n    this._torrent = torrent\n    this._destroyed = false\n    this._fileStreams = new Set()\n    this._iterators = new Set()\n\n    this.name = file.name\n    this.path = file.path\n    this.length = file.length\n    this.size = file.length\n    this.type = mime.getType(this.name) || 'application/octet-stream'\n    this.offset = file.offset\n\n    this.done = false\n\n    const start = file.offset\n    const end = start + file.length - 1\n\n    this._startPiece = start / this._torrent.pieceLength | 0\n    this._endPiece = end / this._torrent.pieceLength | 0\n\n    if (this.length === 0) {\n      this.done = true\n      this.emit('done')\n    }\n\n    this._client = torrent.client\n  }\n\n  get downloaded () {\n    if (this._destroyed || !this._torrent.bitfield) return 0\n\n    const { pieces, bitfield, pieceLength, lastPieceLength } = this._torrent\n    const { _startPiece: start, _endPiece: end } = this\n\n    const getPieceLength = (pieceIndex) => (\n      pieceIndex === pieces.length - 1 ? lastPieceLength : pieceLength\n    )\n\n    const getPieceDownloaded = (pieceIndex) => {\n      const len = pieceIndex === pieces.length - 1 ? lastPieceLength : pieceLength\n      if (bitfield.get(pieceIndex)) {\n        // verified data\n        return len\n      } else {\n        // \"in progress\" data\n        return len - pieces[pieceIndex].missing\n      }\n    }\n\n    let downloaded = 0\n    for (let index = start; index <= end; index += 1) {\n      const pieceDownloaded = getPieceDownloaded(index)\n      downloaded += pieceDownloaded\n\n      if (index === start) {\n        // First piece may have an offset, e.g. irrelevant bytes from the end of\n        // the previous file\n        const irrelevantFirstPieceBytes = this.offset % pieceLength\n        downloaded -= Math.min(irrelevantFirstPieceBytes, pieceDownloaded)\n      }\n\n      if (index === end) {\n        // Last piece may have an offset, e.g. irrelevant bytes from the start\n        // of the next file\n        const irrelevantLastPieceBytes = getPieceLength(end) - (this.offset + this.length) % pieceLength\n        downloaded -= Math.min(irrelevantLastPieceBytes, pieceDownloaded)\n      }\n    }\n\n    return downloaded\n  }\n\n  get progress () {\n    return this.length ? this.downloaded / this.length : 0\n  }\n\n  select (priority) {\n    if (this.length === 0) return\n    this._torrent.select(this._startPiece, this._endPiece, priority)\n  }\n\n  deselect () {\n    if (this.length === 0) return\n    this._torrent.deselect(this._startPiece, this._endPiece)\n  }\n\n  [Symbol.asyncIterator] (opts = {}) {\n    if (this.length === 0) return (async function * empty () {})()\n\n    const { start = 0 } = opts ?? {}\n    const end = (opts?.end && opts.end < this.length)\n      ? opts.end\n      : this.length - 1\n\n    if (this.done) {\n      return chunkStoreRead(this._torrent.store, { offset: start + this.offset, length: end - start + 1 })\n    }\n\n    const iterator = new FileIterator(this, { start, end })\n    this._iterators.add(iterator)\n    iterator.once('return', () => {\n      this._iterators.delete(iterator)\n    })\n\n    return iterator\n  }\n\n  createReadStream (opts) {\n    const iterator = this[Symbol.asyncIterator](opts)\n    const fileStream = Readable.from(iterator)\n\n    this._fileStreams.add(fileStream)\n    fileStream.once('close', () => {\n      this._fileStreams.delete(fileStream)\n    })\n\n    return fileStream\n  }\n\n  async arrayBuffer (opts = {}) {\n    const { start = 0 } = opts\n    const end = (opts?.end && opts.end < this.length)\n      ? opts.end\n      : this.length - 1\n\n    const data = new Uint8Array(end - start + 1)\n    let offset = 0\n    for await (const chunk of this[Symbol.asyncIterator]({ start, end })) {\n      data.set(chunk, offset)\n      offset += chunk.length\n    }\n    return data.buffer\n  }\n\n  async blob (opts) {\n    return new Blob([await this.arrayBuffer(opts)], { type: this.type })\n  }\n\n  stream (opts) {\n    let iterator\n    return new ReadableStream({\n      start: () => {\n        iterator = this[Symbol.asyncIterator](opts)\n      },\n      async pull (controller) {\n        const { value, done } = await iterator.next()\n        if (done) {\n          controller.close()\n        } else {\n          controller.enqueue(value)\n        }\n      },\n      cancel () {\n        iterator.return()\n      }\n    })\n  }\n\n  get streamURL () {\n    if (!this._client._server) throw new Error('No server created')\n    return `${this._client._server.pathname}/${this._torrent.infoHash}/${this.path}`\n  }\n\n  streamTo (elem) {\n    elem.src = this.streamURL\n    return elem\n  }\n\n  includes (piece) {\n    return this._startPiece <= piece && this._endPiece >= piece\n  }\n\n  _destroy () {\n    this._destroyed = true\n    this._torrent = null\n\n    for (const fileStream of this._fileStreams) {\n      fileStream.destroy()\n    }\n    this._fileStreams.clear()\n    for (const iterator of this._iterators) {\n      iterator.destroy()\n    }\n    this._iterators.clear()\n  }\n}\n", "import debugFactory from 'debug'\nimport EventEmitter from 'events'\n\nconst debug = debugFactory('webtorrent:file-iterator')\n\n/**\n * Async iterator of a torrent file\n *\n * @param {File} file\n * @param {Object} opts\n * @param {number} opts.start iterator slice of file, starting from this byte (inclusive)\n * @param {number} opts.end iterator slice of file, ending with this byte (inclusive)\n */\nexport default class FileIterator extends EventEmitter {\n  constructor (file, { start, end }) {\n    super()\n\n    this._torrent = file._torrent\n\n    this._pieceLength = file._torrent.pieceLength\n\n    this._startPiece = (start + file.offset) / this._pieceLength | 0\n    this._endPiece = (end + file.offset) / this._pieceLength | 0\n\n    this._piece = this._startPiece\n    this._offset = (start + file.offset) - (this._startPiece * this._pieceLength)\n\n    this._missing = end - start + 1\n    this._criticalLength = Math.min((1024 * 1024 / this._pieceLength) | 0, 2)\n\n    this._torrent._select(this._startPiece, this._endPiece, 1, null, true)\n    this.destroyed = false\n  }\n\n  [Symbol.asyncIterator] () {\n    return this\n  }\n\n  next () {\n    return new Promise((resolve, reject) => {\n      if (this._missing === 0 || this.destroyed) {\n        resolve({ done: true })\n        return this.destroy()\n      }\n      const pump = (index, opts) => {\n        if (!this._torrent.bitfield.get(index)) {\n          const listener = i => {\n            if (i === index || this.destroyed) {\n              this._torrent.removeListener('verified', listener)\n              pump(index, opts)\n            }\n          }\n          this._torrent.on('verified', listener)\n          return this._torrent.critical(index, index + this._criticalLength)\n        }\n\n        if (this._torrent.destroyed) return reject(new Error('Torrent removed'))\n\n        this._torrent.store.get(index, opts, (err, buffer) => {\n          if (this.destroyed) return resolve({ done: true }) // prevent hanging\n          debug('read %s and yielding (length %s) (err %s)', index, buffer?.length, err?.message)\n\n          if (err) return reject(err)\n\n          // prevent re-wrapping outside of promise\n          resolve({ value: buffer, done: false })\n        })\n      }\n\n      const length = Math.min(this._missing, this._pieceLength - this._offset)\n\n      pump(this._piece++, { length, offset: this._offset })\n      this._missing -= length\n      this._offset = 0\n    })\n  }\n\n  async return () {\n    this.destroy()\n    return { done: true }\n  }\n\n  async throw (err) {\n    throw err\n  }\n\n  destroy (cb = () => {}, err) {\n    if (this.destroyed) return\n    this.destroyed = true\n    if (!this._torrent.destroyed) {\n      this._torrent._deselect(this._startPiece, this._endPiece, true)\n    }\n    this.emit('return')\n    cb(err)\n  }\n}\n", "/**\n * Mapping of torrent pieces to their respective availability in the torrent swarm. Used\n * by the torrent manager for implementing the rarest piece first selection strategy.\n */\nexport default class RarityMap {\n  constructor (torrent) {\n    this._torrent = torrent\n    this._numPieces = torrent.pieces.length\n    this._pieces = new Array(this._numPieces)\n\n    this._onWire = wire => {\n      this.recalculate()\n      this._initWire(wire)\n    }\n    this._onWireHave = index => {\n      this._pieces[index] += 1\n    }\n    this._onWireBitfield = () => {\n      this.recalculate()\n    }\n\n    this._torrent.wires.forEach(wire => {\n      this._initWire(wire)\n    })\n    this._torrent.on('wire', this._onWire)\n    this.recalculate()\n  }\n\n  /**\n   * Get the index of the rarest piece. Optionally, pass a filter function to exclude\n   * certain pieces (for instance, those that we already have).\n   *\n   * @param {function} pieceFilterFunc\n   * @return {number} index of rarest piece, or -1\n   */\n  getRarestPiece (pieceFilterFunc) {\n    let candidates = []\n    let min = Infinity\n\n    for (let i = 0; i < this._numPieces; ++i) {\n      if (pieceFilterFunc && !pieceFilterFunc(i)) continue\n\n      const availability = this._pieces[i]\n      if (availability === min) {\n        candidates.push(i)\n      } else if (availability < min) {\n        candidates = [i]\n        min = availability\n      }\n    }\n\n    if (candidates.length) {\n      // if there are multiple pieces with the same availability, choose one randomly\n      return candidates[Math.random() * candidates.length | 0]\n    } else {\n      return -1\n    }\n  }\n\n  destroy () {\n    this._torrent.removeListener('wire', this._onWire)\n    this._torrent.wires.forEach(wire => {\n      this._cleanupWireEvents(wire)\n    })\n    this._torrent = null\n    this._pieces = null\n\n    this._onWire = null\n    this._onWireHave = null\n    this._onWireBitfield = null\n  }\n\n  _initWire (wire) {\n    wire._onClose = () => {\n      this._cleanupWireEvents(wire)\n      for (let i = 0; i < this._numPieces; ++i) {\n        this._pieces[i] -= wire.peerPieces.get(i)\n      }\n    }\n\n    wire.on('have', this._onWireHave)\n    wire.on('bitfield', this._onWireBitfield)\n    wire.once('close', wire._onClose)\n  }\n\n  /**\n   * Recalculates piece availability across all peers in the torrent.\n   */\n  recalculate () {\n    this._pieces.fill(0)\n\n    for (const wire of this._torrent.wires) {\n      for (let i = 0; i < this._numPieces; ++i) {\n        this._pieces[i] += wire.peerPieces.get(i)\n      }\n    }\n  }\n\n  _cleanupWireEvents (wire) {\n    wire.removeListener('have', this._onWireHave)\n    wire.removeListener('bitfield', this._onWireBitfield)\n    if (wire._onClose) wire.removeListener('close', wire._onClose)\n    wire._onClose = null\n  }\n}\n", "import BitField from 'bitfield'\nimport debugFactory from 'debug'\nimport fetch from 'cross-fetch-ponyfill'\nimport ltDontHave from 'lt_donthave'\nimport { hash, concat } from 'uint8-util'\nimport Wire from 'bittorrent-protocol'\nimport once from 'once'\n\nimport VERSION from '../version.cjs'\n\nconst debug = debugFactory('webtorrent:webconn')\n\nconst SOCKET_TIMEOUT = 60000\nconst RETRY_DELAY = 10000\n\n/**\n * Converts requests for torrent blocks into http range requests.\n * @param {string} url web seed url\n * @param {Object} torrent\n */\nexport default class WebConn extends Wire {\n  constructor (url, torrent) {\n    super()\n\n    this.url = url\n    this.connId = url // Unique id to deduplicate web seeds\n    this._torrent = torrent\n\n    this._init(url)\n  }\n\n  _init (url) {\n    this.setKeepAlive(true)\n\n    this.use(ltDontHave())\n\n    this.once('handshake', async (infoHash, peerId) => {\n      const hex = await hash(url, 'hex') // Used as the peerId for this fake remote peer\n      if (this.destroyed) return\n      this.handshake(infoHash, hex)\n\n      const numPieces = this._torrent.pieces.length\n      const bitfield = new BitField(numPieces)\n      for (let i = 0; i <= numPieces; i++) {\n        bitfield.set(i, true)\n      }\n      this.bitfield(bitfield)\n    })\n\n    this.once('interested', () => {\n      debug('interested')\n      this.unchoke()\n    })\n\n    this.on('uninterested', () => { debug('uninterested') })\n    this.on('choke', () => { debug('choke') })\n    this.on('unchoke', () => { debug('unchoke') })\n    this.on('bitfield', () => { debug('bitfield') })\n    this.lt_donthave.on('donthave', () => { debug('donthave') })\n\n    this.on('request', (pieceIndex, offset, length, callback) => {\n      debug('request pieceIndex=%d offset=%d length=%d', pieceIndex, offset, length)\n      this.httpRequest(pieceIndex, offset, length, (err, data) => {\n        if (err) {\n          // Cancel all in progress requests for this piece\n          this.lt_donthave.donthave(pieceIndex)\n\n          // Wait a little while before saying the webseed has the failed piece again\n          const retryTimeout = setTimeout(() => {\n            if (this.destroyed) return\n\n            this.have(pieceIndex)\n          }, RETRY_DELAY)\n          if (retryTimeout.unref) retryTimeout.unref()\n        }\n\n        callback(err, data)\n      })\n    })\n  }\n\n  async httpRequest (pieceIndex, offset, length, cb) {\n    cb = once(cb)\n    const pieceOffset = pieceIndex * this._torrent.pieceLength\n    const rangeStart = pieceOffset + offset /* offset within whole torrent */\n    const rangeEnd = rangeStart + length - 1\n\n    // Web seed URL format:\n    // For single-file torrents, make HTTP range requests directly to the web seed URL\n    // For multi-file torrents, add the torrent folder and file name to the URL\n    const files = this._torrent.files\n    let requests\n    if (files.length <= 1) {\n      requests = [{\n        url: this.url,\n        start: rangeStart,\n        end: rangeEnd\n      }]\n    } else {\n      const requestedFiles = files.filter(file => file.offset <= rangeEnd && (file.offset + file.length) > rangeStart)\n      if (requestedFiles.length < 1) {\n        return cb(new Error('Could not find file corresponding to web seed range request'))\n      }\n\n      requests = requestedFiles.map(requestedFile => {\n        const fileEnd = requestedFile.offset + requestedFile.length - 1\n        const url = this.url +\n          (this.url[this.url.length - 1] === '/' ? '' : '/') +\n          requestedFile.path.replace(this._torrent.path, '')\n        return {\n          url,\n          fileOffsetInRange: Math.max(requestedFile.offset - rangeStart, 0),\n          start: Math.max(rangeStart - requestedFile.offset, 0),\n          end: Math.min(fileEnd, rangeEnd - requestedFile.offset)\n        }\n      })\n    }\n    let chunks\n    try {\n      chunks = await Promise.all(requests.map(async ({ start, end, url }) => {\n        debug(\n          'Requesting url=%s pieceIndex=%d offset=%d length=%d start=%d end=%d',\n          url, pieceIndex, offset, length, start, end\n        )\n        const res = await fetch(url, {\n          cache: 'no-store',\n          method: 'GET',\n          headers: {\n            'Cache-Control': 'no-store',\n            'user-agent': `WebTorrent/${VERSION} (https://webtorrent.io)`,\n            range: `bytes=${start}-${end}`\n          },\n          signal: AbortSignal.timeout(SOCKET_TIMEOUT)\n        })\n        if (!res.ok) throw new Error(`Unexpected HTTP status code ${res.status}`)\n        const data = new Uint8Array(await res.arrayBuffer())\n\n        debug('Got data of length %d', data.length)\n\n        return data\n      }))\n    } catch (e) {\n      return cb(e)\n    }\n\n    cb(null, concat(chunks))\n  }\n\n  destroy () {\n    super.destroy()\n    this._torrent = null\n  }\n}\n", "/**\n * @typedef {Object} MinimalSelectionItem\n * @property {number} from\n * @property {number} to\n */\n\n/** A selection of pieces to download.\n * @typedef {MinimalSelectionItem & {\n *  offset: number,\n *  priority: number,\n *  notify?: function\n *  isStreamSelection?: boolean\n * }} SelectionItem\n */\n\n/**\n * @typedef {MinimalSelectionItem & {notify: function}} NotificationItem\n */\n\nexport class Selections {\n  /** @type {Array<SelectionItem>} */\n  _items = []\n\n  /**\n   * @param {MinimalSelectionItem & {isStreamSelection?: boolean}} item Interval to be removed from the selection\n   */\n  remove (item) {\n    for (let i = 0; i < this._items.length; i++) {\n      const existing = this._items[i]\n      if (existing.isStreamSelection) {\n        if (item.isStreamSelection) {\n          // If both are stream selections and they match, then we remove the first matching item, then we break the loop\n          if (existing.from === item.from && existing.to === item.to) {\n            this._items.splice(i, 1)\n            // for stream selections, we only remove one item at a time\n            // ergo we break the loop after removing the first matching item\n            break\n          }\n        } else {\n          // we only remove stream selections when the `isStreamSelection` flag is true and they match\n          continue\n        }\n      } else {\n        if (isLowerIntersecting(item, existing)) {\n          existing.to = Math.max(item.from - 1, 0)\n        } else if (isUpperIntersecting(item, existing)) {\n          existing.from = item.to + 1\n        } else if (isInsideExisting(item, existing)) {\n          const replacingItems = []\n          const existingStart = { ...existing, to: Math.max(item.from - 1, 0) }\n          if (existingStart.to - existingStart.from >= 0 && item.from !== 0) replacingItems.push(existingStart)\n          const existingEnd = { ...existing, from: item.to + 1 }\n          if (existingEnd.to - existingEnd.from >= 0) replacingItems.push(existingEnd)\n          this._items.splice(i, 1, ...replacingItems)\n          i = i - 1 + replacingItems.length // decrement i to offset splice\n        } else if (isCoveringExisting(item, existing)) {\n          this._items.splice(i, 1)\n          i--\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {SelectionItem & NotificationItem} newItem\n   */\n  insert (newItem) {\n    if (newItem.from > newItem.to) {\n      throw new Error('Invalid interval')\n    }\n    if (!newItem.isStreamSelection) {\n      const { notify: oldNotify } = newItem\n      // Merge notifications of intersecting items into the new item's notify function\n      const intersectingNotifyFunctions = []\n      for (const existing of this._items) {\n        if (existing.notify && isIntersecting(newItem, existing)) {\n          intersectingNotifyFunctions.push(existing.notify)\n        }\n      }\n      if (intersectingNotifyFunctions.length > 0) {\n        newItem.notify = () => {\n          intersectingNotifyFunctions.forEach(fn => fn())\n          oldNotify?.()\n        }\n      }\n      // Remove or truncate intersecting items to make room for the new item\n      this.remove(newItem)\n    }\n    this._items.push(newItem)\n  }\n\n  /** @param {(a: SelectionItem, b: SelectionItem) => number} sortFn */\n  sort (sortFn = (a, b) => a.from - b.from) {\n    this._items.sort(sortFn)\n  }\n\n  get length () {\n    return this._items.length\n  }\n\n  /**  @param {number} index */\n  get (index) {\n    return this._items[index]\n  }\n\n  swap (i, j) {\n    const temp = this._items[i]\n    this._items[i] = this._items[j]\n    this._items[j] = temp\n  }\n\n  clear () {\n    this._items.length = 0\n  }\n\n  /** @returns {Generator<SelectionItem & {remove: () => void, replaceWith: (MinimalSelectionItem[]) => void}>} */\n  * [Symbol.iterator] () {\n    for (let i = 0; i < this._items.length; i++) {\n      const item = this._items[i]\n\n      item.remove = () => {\n        this._items.splice(i, 1)\n        i--\n      }\n      yield item\n      delete item.remove\n    }\n  }\n}\n\n/**\n * Examples:\n * existing: 1-10 | 1-10\n * new_item: 8-12 | 10-15\n * @param {MinimalSelectionItem} newItem\n * @param {MinimalSelectionItem} existing\n * @returns {boolean} returns true if the new item's lower end is intersecting with the existing item\n */\nexport function isLowerIntersecting (newItem, existing) {\n  return (newItem.from <= existing.to) && (newItem.from > existing.from) && (newItem.to > existing.to)\n}\n\n/**\n * Examples:\n * existing: 20-25 | 20-25\n * new_item: 15-22 | 15-20\n * @param {MinimalSelectionItem} newItem\n * @param {MinimalSelectionItem} existing\n * @returns {boolean} returns true if the new item's upper end is intersecting with the existing item\n */\nexport function isUpperIntersecting (newItem, existing) {\n  return (newItem.to >= existing.from) && (newItem.to < existing.to) && (newItem.from < existing.from)\n}\n\n/**\n * Examples:\n * existing: 10-20 | 10-20 | 10-20\n * new_item: 12-15 | 20-20 | 15-20\n * @param {MinimalSelectionItem} newItem\n * @param {MinimalSelectionItem} existing\n * @returns {boolean} returns true if the new item is completely inside the existing item\n */\nexport function isInsideExisting (newItem, existing) {\n  const existingIntervalSize = existing.to - existing.from\n  const newItemIntervalSize = newItem.to - newItem.from\n  return newItem.from >= existing.from && newItem.to <= existing.to && (newItemIntervalSize < existingIntervalSize)\n}\n\n/**\n * Examples:\n * existing: 10-20 | 10-20 | 10-20\n * new_item: 10-21 | 09-20 | 10-20\n * @param {MinimalSelectionItem} newItem\n * @param {MinimalSelectionItem} existing\n * @returns {boolean} returns true if the new item is covering the existing item\n */\nexport function isCoveringExisting (newItem, existing) {\n  return newItem.from <= existing.from && newItem.to >= existing.to\n}\n\nexport const isIntersecting = (newItem, existing) => () =>\n  isLowerIntersecting(newItem, existing) ||\n    isUpperIntersecting(newItem, existing) ||\n    isInsideExisting(newItem, existing) ||\n    isCoveringExisting(newItem, existing)\n", "import http from 'http'\nimport escapeHtml from 'escape-html'\nimport pump from 'pump'\nimport rangeParser from 'range-parser'\nimport queueMicrotask from 'queue-microtask'\nimport { Readable } from 'streamx'\n\nconst keepAliveTime = 20000\n\nclass ServerBase {\n  constructor (client, opts = {}) {\n    this.client = client\n    if (!opts.origin) opts.origin = '*' // allow all origins by default\n    this.opts = opts\n    this.pendingReady = new Set()\n  }\n\n  static serveIndexPage (res, torrents, pathname) {\n    const listHtml = torrents\n      .map(torrent => (\n      `<li>\n        <a href=\"${escapeHtml(pathname)}/${torrent.infoHash}\">\n          ${escapeHtml(torrent.name)}\n        </a>\n        (${escapeHtml(torrent.length)} bytes)\n      </li>`\n      ))\n      .join('<br>')\n\n    res.status = 200\n    res.headers['Content-Type'] = 'text/html'\n    res.body = getPageHTML(\n      'WebTorrent',\n      `<h1>WebTorrent</h1>\n       <ol>${listHtml}</ol>`\n    )\n\n    return res\n  }\n\n  isOriginAllowed (req) {\n    // When `origin` option is `false`, deny all cross-origin requests\n    if (this.opts.origin === false) return false\n\n    // The user allowed all origins\n    if (this.opts.origin === '*') return true\n\n    // Allow requests where the 'Origin' header matches the `opts.origin` setting\n    return req.headers.origin === this.opts.origin\n  }\n\n  static serveMethodNotAllowed (res) {\n    res.status = 405\n    res.headers['Content-Type'] = 'text/html'\n\n    res.body = getPageHTML(\n      '405 - Method Not Allowed',\n      '<h1>405 - Method Not Allowed</h1>'\n    )\n\n    return res\n  }\n\n  static serve404Page (res) {\n    res.status = 404\n    res.headers['Content-Type'] = 'text/html'\n\n    res.body = getPageHTML(\n      '404 - Not Found',\n      '<h1>404 - Not Found</h1>'\n    )\n    return res\n  }\n\n  static serveTorrentPage (torrent, res, pathname) {\n    const listHtml = torrent.files\n      .map(file => (\n      `<li>\n        <a href=\"${escapeHtml(pathname)}/${torrent.infoHash}/${escapeHtml(file.path)}\">\n          ${escapeHtml(file.path)}\n        </a>\n        (${escapeHtml(file.length)} bytes)\n      </li>`\n      ))\n      .join('<br>')\n\n    res.status = 200\n    res.headers['Content-Type'] = 'text/html'\n\n    res.body = getPageHTML(\n      `${escapeHtml(torrent.name)} - WebTorrent`,\n      `<h1>${escapeHtml(torrent.name)}</h1>\n      <ol>${listHtml}</ol>`\n    )\n\n    return res\n  }\n\n  static serveOptionsRequest (req, res) {\n    res.status = 204 // no content\n    res.headers['Access-Control-Max-Age'] = '600'\n    res.headers['Access-Control-Allow-Methods'] = 'GET,HEAD'\n\n    if (req.headers['access-control-request-headers']) {\n      res.headers['Access-Control-Allow-Headers'] = req.headers['access-control-request-headers']\n    }\n    return res\n  }\n\n  static serveFile (file, req, res) {\n    res.status = 200\n\n    // Disable caching as data is local anyways\n    res.headers.Expires = '0'\n    res.headers['Cache-Control'] = 'no-cache, no-store, must-revalidate, max-age=0'\n    // Support range-requests\n    res.headers['Accept-Ranges'] = 'bytes'\n    res.headers['Content-Type'] = file.type\n    // Support DLNA streaming\n    res.headers['transferMode.dlna.org'] = 'Streaming'\n    res.headers['contentFeatures.dlna.org'] = 'DLNA.ORG_OP=01;DLNA.ORG_CI=0;DLNA.ORG_FLAGS=01700000000000000000000000000000'\n\n    // Force the browser to download the file if if it's opened in a new tab\n    // Set name of file (for \"Save Page As...\" dialog)\n    if (req.destination === 'document') {\n      res.headers['Content-Type'] = 'application/octet-stream'\n      res.headers['Content-Disposition'] = `attachment; filename*=UTF-8''${encodeRFC5987(file.name)}`\n      res.body = 'DOWNLOAD'\n    } else {\n      res.headers['Content-Disposition'] = `inline; filename*=UTF-8''${encodeRFC5987(file.name)}`\n    }\n\n    // `rangeParser` returns an array of ranges, or an error code (number) if\n    // there was an error parsing the range.\n    let range = rangeParser(file.length, req.headers.range || '')\n\n    if (Array.isArray(range)) {\n      res.status = 206 // indicates that range-request was understood\n\n      // no support for multi-range request, just use the first range\n      range = range[0]\n\n      res.headers['Content-Range'] = `bytes ${range.start}-${range.end}/${file.length}`\n\n      res.headers['Content-Length'] = range.end - range.start + 1\n    } else {\n      res.statusCode = 200\n      range = null\n      res.headers['Content-Length'] = file.length\n    }\n\n    if (req.method === 'GET') {\n      const iterator = file[Symbol.asyncIterator](range)\n      let transform = null\n      file.emit('iterator', { iterator, req, file }, target => {\n        transform = target\n      })\n\n      const stream = Readable.from(transform || iterator)\n      let pipe = null\n      file.emit('stream', { stream, req, file }, target => {\n        pipe = pump(stream, target)\n      })\n\n      res.body = pipe || stream\n    } else {\n      res.body = false\n    }\n    return res\n  }\n\n  async onRequest (req, cb) {\n    let pathname = new URL(req.url, 'http://example.com').pathname\n    pathname = pathname.slice(pathname.indexOf(this.pathname) + this.pathname.length + 1)\n\n    const res = {\n      headers: {\n        // Prevent browser mime-type sniffing\n        'X-Content-Type-Options': 'nosniff',\n        // Defense-in-depth: Set a strict Content Security Policy to mitigate XSS\n        'Content-Security-Policy': \"base-uri 'none'; frame-ancestors 'none'; form-action 'none';\"\n      }\n    }\n\n    // Allow cross-origin requests (CORS)\n    if (this.isOriginAllowed(req)) {\n      res.headers['Access-Control-Allow-Origin'] = this.opts.origin === '*' ? '*' : req.headers.origin\n    }\n\n    if (pathname === 'favicon.ico') {\n      return cb(ServerBase.serve404Page(res))\n    }\n\n    // Allow CORS requests to specify arbitrary headers, e.g. 'Range',\n    // by responding to the OPTIONS preflight request with the specified\n    // origin and requested headers.\n    if (req.method === 'OPTIONS') {\n      if (this.isOriginAllowed(req)) return cb(ServerBase.serveOptionsRequest(req, res))\n      else return cb(ServerBase.serveMethodNotAllowed(res))\n    }\n\n    const onReady = async () => {\n      this.pendingReady.delete(onReady)\n      const res = await handleRequest()\n      cb(res)\n    }\n\n    const handleRequest = async () => {\n      if (pathname === '') {\n        return ServerBase.serveIndexPage(res, this.client.torrents, this.pathname)\n      }\n\n      let [infoHash, ...filePath] = pathname.split('/')\n      filePath = decodeURI(filePath.join('/'))\n\n      const torrent = await this.client.get(infoHash)\n      if (!infoHash || !torrent) {\n        return ServerBase.serve404Page(res)\n      }\n\n      if (!filePath) {\n        return ServerBase.serveTorrentPage(torrent, res, this.pathname)\n      }\n\n      const file = torrent.files.find(file => file.path.replace(/\\\\/g, '/') === filePath)\n      if (!file) {\n        return ServerBase.serve404Page(res)\n      }\n      return ServerBase.serveFile(file, req, res)\n    }\n\n    if (req.method === 'GET' || req.method === 'HEAD') {\n      if (this.client.ready) {\n        const res = await handleRequest()\n        return cb(res)\n      } else {\n        this.pendingReady.add(onReady)\n        this.client.once('ready', onReady)\n        return\n      }\n    }\n\n    return cb(ServerBase.serveMethodNotAllowed(res))\n  }\n\n  close (cb = () => {}) {\n    this.closed = true\n    this.pendingReady.forEach(onReady => {\n      this.client.removeListener('ready', onReady)\n    })\n    this.pendingReady.clear()\n    queueMicrotask(cb)\n  }\n\n  destroy (cb = () => {}) {\n    // Only call `server.close` if user has not called it already\n    if (this.closed) queueMicrotask(cb)\n    else this.close(cb)\n    this.client = null\n  }\n}\n\nclass NodeServer extends ServerBase {\n  constructor (client, opts) {\n    super(client, opts)\n\n    this.server = http.createServer()\n    this._listen = this.server.listen\n    this.server.listen = this.listen.bind(this)\n    this._close = this.server.close\n    this.server.close = this.close.bind(this)\n\n    this.sockets = new Set()\n    this.closed = false\n    this.pathname = opts?.pathname || '/webtorrent'\n  }\n\n  wrapRequest (req, res) {\n    // If a 'hostname' string is specified, deny requests with a 'Host'\n    // header that does not match the origin of the torrent server to prevent\n    // DNS rebinding attacks.\n    if (this.opts.hostname && req.headers.host !== `${this.opts.hostname}:${this.server.address().port}`) {\n      return req.destroy()\n    }\n\n    if (!new URL(req.url, 'http://example.com').pathname.startsWith(this.pathname)) {\n      return req.destroy()\n    }\n\n    this.onRequest(req, ({ status, headers, body }) => {\n      res.writeHead(status, headers)\n\n      if (!!body._readableState || !!body._writableState) { // this is probably a bad way of checking? idk\n        pump(body, res)\n      } else {\n        res.end(body)\n      }\n    })\n  }\n\n  onConnection (socket) {\n    socket.setTimeout(36000000)\n    this.sockets.add(socket)\n    socket.once('close', () => {\n      this.sockets.delete(socket)\n    })\n  }\n\n  address () {\n    return this.server.address()\n  }\n\n  listen (...args) {\n    this.closed = false\n    this.server.on('connection', this.onConnection.bind(this))\n    this.server.on('request', this.wrapRequest.bind(this))\n    return this._listen.apply(this.server, args)\n  }\n\n  close (cb = () => {}) {\n    this.server.removeAllListeners('connection')\n    this.server.removeAllListeners('request')\n    this.server.removeAllListeners('listening')\n    super.close()\n    this._close.call(this.server, cb)\n  }\n\n  destroy (cb) {\n    this.sockets.forEach(socket => {\n      socket.destroy()\n    })\n    super.destroy(cb)\n  }\n}\n\nclass BrowserServer extends ServerBase {\n  constructor (client, opts) {\n    super(client, opts)\n\n    this.registration = opts.controller\n    this.workerKeepAliveInterval = null\n    this.workerPortCount = 0\n\n    const scope = new URL(opts.controller.scope)\n    this.pathname = scope.pathname + 'webtorrent'\n    this._address = {\n      port: scope.port,\n      family: 'IPv4', // might be a bad idea?\n      address: scope.hostname\n    }\n\n    this.boundHandler = this.wrapRequest.bind(this)\n    navigator.serviceWorker.addEventListener('message', this.boundHandler)\n    // test if browser supports cancelling sw Readable Streams\n    fetch(`${this.pathname}/cancel/`).then(res => {\n      res.body.cancel()\n    })\n  }\n\n  wrapRequest (event) {\n    const req = event.data\n\n    if (!req?.type === 'webtorrent' || !req.url) return null\n\n    const [port] = event.ports\n    this.onRequest(req, ({ status, headers, body }) => {\n      const asyncIterator = body[Symbol.asyncIterator]?.()\n\n      const cleanup = () => {\n        port.onmessage = null\n        if (body?.destroy) body.destroy()\n        this.workerPortCount--\n        if (!this.workerPortCount) {\n          clearInterval(this.workerKeepAliveInterval)\n          this.workerKeepAliveInterval = null\n        }\n      }\n\n      port.onmessage = async msg => {\n        if (msg.data) {\n          let chunk\n          try {\n            chunk = (await asyncIterator.next()).value\n          } catch (e) {\n            // chunk is yet to be downloaded or it somehow failed, should this be logged?\n          }\n          port.postMessage(chunk)\n          if (!chunk) cleanup()\n          if (!this.workerKeepAliveInterval) {\n            this.workerKeepAliveInterval = setInterval(() => fetch(`${this.pathname}/keepalive/`), keepAliveTime)\n          }\n        } else {\n          cleanup()\n        }\n      }\n      this.workerPortCount++\n      port.postMessage({\n        status,\n        headers,\n        body: asyncIterator ? 'STREAM' : body\n      })\n    })\n  }\n\n  // for compatibility with node version\n  listen (_, cb) {\n    cb()\n  }\n\n  address () {\n    return this._address\n  }\n\n  close (cb) {\n    navigator.serviceWorker.removeEventListener('message', this.boundHandler)\n    super.close(cb)\n  }\n\n  destroy (cb) {\n    super.destroy(cb)\n  }\n}\n\n// NOTE: Arguments must already be HTML-escaped\nfunction getPageHTML (title, pageHtml) {\n  return `\n    <!DOCTYPE html>\n    <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\">\n        <title>${title}</title>\n      </head>\n      <body>\n        ${pageHtml}\n      </body>\n    </html>\n  `\n}\n\n// From https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\nfunction encodeRFC5987 (str) {\n  return encodeURIComponent(str)\n    // Note that although RFC3986 reserves \"!\", RFC5987 does not,\n    // so we do not need to escape it\n    .replace(/['()]/g, escape) // i.e., %27 %28 %29\n    .replace(/\\*/g, '%2A')\n    // The following are not required for percent-encoding per RFC5987,\n    // so we can allow for a little better readability over the wire: |`^\n    .replace(/%(?:7C|60|5E)/g, unescape)\n}\n\nexport { NodeServer, BrowserServer }\n"],
  "mappings": "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",
  "names": ["concat", "err", "queueMicrotask", "err", "err", "self", "err", "self", "err", "ThrottleGroup", "EventEmitter", "ThrottleGroup", "self", "err", "ThrottleGroup", "LRU", "LRU", "queueMicrotask", "err", "buf", "opts", "cb", "require_browser", "cpus", "len", "i", "len2", "Buffer", "concat", "i", "byteLength", "Buffer", "require_browser", "Buffer", "crypto", "randomBytes", "randomBytes", "EventEmitter", "KBucket", "decode", "require_util", "self", "onmessage", "err", "noop", "KBucket", "randombytes", "self", "toBuffer", "err", "noop", "once", "parseIp", "noop", "err", "code", "toString", "write", "require_browser", "fill", "concat", "copy", "toBuffer", "cb", "once", "queueMicrotask", "err", "queueMicrotask", "err", "queueMicrotask", "err", "result", "path", "escapeHtml", "escape", "once", "noop", "ws", "err", "once", "fs", "noop", "err", "pump", "rangeParser", "import_events", "import_path", "err", "err", "getFiles", "path", "corePath", "isFile", "queueMicrotask", "parallel", "cb", "blockIterator", "joinIterator", "hash", "calcPieceLength", "import_debug", "import_bittorrent_dht", "import_run_parallel", "Blob", "Response", "AbortController", "AbortSignal", "fetch", "cur", "import_path", "import_queue_microtask", "err", "queueMicrotask", "isBlob", "fs", "path", "sumLength", "debug", "Peer", "errCode", "err", "event", "_a", "import_queue_microtask", "import_throughput", "import_events", "import_fs", "import_path", "import_block_iterator", "length", "offset", "err", "blockIterator", "import_debug", "import_debug", "import_debug", "debug", "Debug", "LRU", "records", "krpc", "low", "self", "opts", "err", "node", "hash", "onmessage", "KBucket", "message", "randombytes", "crypto", "import_events", "import_run_parallel", "import_debug", "import_events", "import_run_parallel", "import_queue_microtask", "import_debug", "import_debug", "import_queue_microtask", "import_streamx", "debug", "Debug", "ws", "MAX_BUFFERED_AMOUNT", "err", "queueMicrotask", "import_events", "EventEmitter", "debug", "Debug", "noop", "err", "self", "debug", "Debug", "EventEmitter", "err", "queueMicrotask", "HTTPTracker", "UDPTracker", "cb", "parallel", "once", "client_default", "import_server", "debug", "Debug", "err", "opts", "LSD", "cb", "parallel", "client_default", "path", "noop", "err", "_a", "_b", "i", "path", "buf", "import_events", "import_debug", "debug", "debugFactory", "err", "arrayRemove", "import_join_async_iterator", "import_run_parallel", "import_queue_microtask", "import_events", "import_debug", "debug", "Debug", "err", "metadata", "import_events", "import_streamx", "import_lite", "import_debug", "import_events", "debug", "debugFactory", "EventEmitter", "pump", "err", "File", "EventEmitter", "mime", "import_debug", "import_once", "debug", "debugFactory", "err", "once", "VERSION", "import_version", "debug", "debugFactory", "cpus", "VERSION", "_a", "_b", "MemoryChunkStore", "path", "fs", "err", "os", "EventEmitter", "throughput", "queueMicrotask", "parsedTorrent", "utPex", "self", "parallel", "File", "CacheChunkStore", "ImmediateChunkStore", "hash", "parallelLimit", "cb", "noop", "randomIterate", "wire", "joinIterator", "net", "utp", "import_queue_microtask", "import_streamx", "escapeHtml", "rangeParser", "pump", "res", "file", "queueMicrotask", "http", "scope", "_a", "import_version", "debug", "debugFactory", "VERSION", "EventEmitter", "NatAPI", "ConnPool", "queueMicrotask", "throughput", "DHT", "err", "loadIPSet", "path", "torrent", "parallel", "isFileList", "isReadable", "input", "cb"]
}
